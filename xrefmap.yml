### YamlMime:XRefMap
sorted: true
references:
- uid: RabbitMQ.Client
  name: RabbitMQ.Client
  href: api/RabbitMQ.Client.html
  commentId: N:RabbitMQ.Client
  fullName: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
- uid: RabbitMQ.Client.AmqpTcpEndpoint
  name: AmqpTcpEndpoint
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html
  commentId: T:RabbitMQ.Client.AmqpTcpEndpoint
  fullName: RabbitMQ.Client.AmqpTcpEndpoint
  nameWithType: AmqpTcpEndpoint
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor
  name: AmqpTcpEndpoint()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint()
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32)
  name: AmqpTcpEndpoint(String, Int32)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_String_System_Int32_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(System.String, System.Int32)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(String, Int32)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32,RabbitMQ.Client.SslOption)
  name: AmqpTcpEndpoint(String, Int32, SslOption)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_String_System_Int32_RabbitMQ_Client_SslOption_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32,RabbitMQ.Client.SslOption)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(System.String, System.Int32, RabbitMQ.Client.SslOption)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(String, Int32, SslOption)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri)
  name: AmqpTcpEndpoint(Uri)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_Uri_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(System.Uri)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(Uri)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri,RabbitMQ.Client.SslOption)
  name: AmqpTcpEndpoint(Uri, SslOption)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_Uri_RabbitMQ_Client_SslOption_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri,RabbitMQ.Client.SslOption)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(System.Uri, RabbitMQ.Client.SslOption)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(Uri, SslOption)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor*
  name: AmqpTcpEndpoint
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint
- uid: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  name: AddressFamily
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_AddressFamily
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  nameWithType: AmqpTcpEndpoint.AddressFamily
- uid: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily*
  name: AddressFamily
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_AddressFamily_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  nameWithType: AmqpTcpEndpoint.AddressFamily
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Clone
  name: Clone()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Clone
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.Clone
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Clone()
  nameWithType: AmqpTcpEndpoint.Clone()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Clone*
  name: Clone
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Clone_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Clone
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Clone
  nameWithType: AmqpTcpEndpoint.Clone
- uid: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(System.String)
  name: CloneWithHostname(String)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_CloneWithHostname_System_String_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(System.String)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(System.String)
  nameWithType: AmqpTcpEndpoint.CloneWithHostname(String)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname*
  name: CloneWithHostname
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_CloneWithHostname_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname
  nameWithType: AmqpTcpEndpoint.CloneWithHostname
- uid: RabbitMQ.Client.AmqpTcpEndpoint.DefaultAmqpSslPort
  name: DefaultAmqpSslPort
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_DefaultAmqpSslPort
  commentId: F:RabbitMQ.Client.AmqpTcpEndpoint.DefaultAmqpSslPort
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.DefaultAmqpSslPort
  nameWithType: AmqpTcpEndpoint.DefaultAmqpSslPort
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Equals(System.Object)
  name: Equals(Object)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Equals_System_Object_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.Equals(System.Object)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Equals(System.Object)
  nameWithType: AmqpTcpEndpoint.Equals(Object)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Equals*
  name: Equals
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Equals_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Equals
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Equals
  nameWithType: AmqpTcpEndpoint.Equals
- uid: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  name: GetHashCode()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_GetHashCode
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode()
  nameWithType: AmqpTcpEndpoint.GetHashCode()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode*
  name: GetHashCode
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_GetHashCode_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  nameWithType: AmqpTcpEndpoint.GetHashCode
- uid: RabbitMQ.Client.AmqpTcpEndpoint.HostName
  name: HostName
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_HostName
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.HostName
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.HostName
  nameWithType: AmqpTcpEndpoint.HostName
- uid: RabbitMQ.Client.AmqpTcpEndpoint.HostName*
  name: HostName
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_HostName_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.HostName
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.HostName
  nameWithType: AmqpTcpEndpoint.HostName
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Parse(System.String)
  name: Parse(String)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Parse_System_String_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.Parse(System.String)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Parse(System.String)
  nameWithType: AmqpTcpEndpoint.Parse(String)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Parse*
  name: Parse
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Parse_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Parse
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Parse
  nameWithType: AmqpTcpEndpoint.Parse
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(System.String)
  name: ParseMultiple(String)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ParseMultiple_System_String_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(System.String)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(System.String)
  nameWithType: AmqpTcpEndpoint.ParseMultiple(String)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple*
  name: ParseMultiple
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ParseMultiple_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple
  nameWithType: AmqpTcpEndpoint.ParseMultiple
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Port
  name: Port
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Port
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.Port
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Port
  nameWithType: AmqpTcpEndpoint.Port
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Port*
  name: Port
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Port_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Port
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Port
  nameWithType: AmqpTcpEndpoint.Port
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  name: Protocol
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Protocol
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  nameWithType: AmqpTcpEndpoint.Protocol
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Protocol*
  name: Protocol
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Protocol_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  nameWithType: AmqpTcpEndpoint.Protocol
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  name: Ssl
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Ssl
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  nameWithType: AmqpTcpEndpoint.Ssl
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Ssl*
  name: Ssl
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Ssl_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  nameWithType: AmqpTcpEndpoint.Ssl
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ToString
  name: ToString()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ToString
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.ToString
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ToString()
  nameWithType: AmqpTcpEndpoint.ToString()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ToString*
  name: ToString
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ToString_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ToString
  nameWithType: AmqpTcpEndpoint.ToString
- uid: RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort
  name: UseDefaultPort
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_UseDefaultPort
  commentId: F:RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort
  nameWithType: AmqpTcpEndpoint.UseDefaultPort
- uid: RabbitMQ.Client.AmqpTimestamp
  name: AmqpTimestamp
  href: api/RabbitMQ.Client.AmqpTimestamp.html
  commentId: T:RabbitMQ.Client.AmqpTimestamp
  fullName: RabbitMQ.Client.AmqpTimestamp
  nameWithType: AmqpTimestamp
- uid: RabbitMQ.Client.AmqpTimestamp.#ctor(System.Int64)
  name: AmqpTimestamp(Int64)
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp__ctor_System_Int64_
  commentId: M:RabbitMQ.Client.AmqpTimestamp.#ctor(System.Int64)
  fullName: RabbitMQ.Client.AmqpTimestamp.AmqpTimestamp(System.Int64)
  nameWithType: AmqpTimestamp.AmqpTimestamp(Int64)
- uid: RabbitMQ.Client.AmqpTimestamp.#ctor*
  name: AmqpTimestamp
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp__ctor_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTimestamp.AmqpTimestamp
  nameWithType: AmqpTimestamp.AmqpTimestamp
- uid: RabbitMQ.Client.AmqpTimestamp.ToString
  name: ToString()
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_ToString
  commentId: M:RabbitMQ.Client.AmqpTimestamp.ToString
  fullName: RabbitMQ.Client.AmqpTimestamp.ToString()
  nameWithType: AmqpTimestamp.ToString()
- uid: RabbitMQ.Client.AmqpTimestamp.ToString*
  name: ToString
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_ToString_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTimestamp.ToString
  nameWithType: AmqpTimestamp.ToString
- uid: RabbitMQ.Client.AmqpTimestamp.UnixTime
  name: UnixTime
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_UnixTime
  commentId: P:RabbitMQ.Client.AmqpTimestamp.UnixTime
  fullName: RabbitMQ.Client.AmqpTimestamp.UnixTime
  nameWithType: AmqpTimestamp.UnixTime
- uid: RabbitMQ.Client.AmqpTimestamp.UnixTime*
  name: UnixTime
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_UnixTime_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.UnixTime
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTimestamp.UnixTime
  nameWithType: AmqpTimestamp.UnixTime
- uid: RabbitMQ.Client.Apigen
  name: RabbitMQ.Client.Apigen
  href: api/RabbitMQ.Client.Apigen.html
  commentId: N:RabbitMQ.Client.Apigen
  fullName: RabbitMQ.Client.Apigen
  nameWithType: RabbitMQ.Client.Apigen
- uid: RabbitMQ.Client.Apigen.AmqpClass
  name: AmqpClass
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html
  commentId: T:RabbitMQ.Client.Apigen.AmqpClass
  fullName: RabbitMQ.Client.Apigen.AmqpClass
  nameWithType: AmqpClass
- uid: RabbitMQ.Client.Apigen.AmqpClass.#ctor(System.Xml.XmlNode)
  name: AmqpClass(XmlNode)
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass__ctor_System_Xml_XmlNode_
  commentId: M:RabbitMQ.Client.Apigen.AmqpClass.#ctor(System.Xml.XmlNode)
  fullName: RabbitMQ.Client.Apigen.AmqpClass.AmqpClass(System.Xml.XmlNode)
  nameWithType: AmqpClass.AmqpClass(XmlNode)
- uid: RabbitMQ.Client.Apigen.AmqpClass.#ctor*
  name: AmqpClass
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass__ctor_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpClass.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpClass.AmqpClass
  nameWithType: AmqpClass.AmqpClass
- uid: RabbitMQ.Client.Apigen.AmqpClass.Index
  name: Index
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_Index
  commentId: P:RabbitMQ.Client.Apigen.AmqpClass.Index
  fullName: RabbitMQ.Client.Apigen.AmqpClass.Index
  nameWithType: AmqpClass.Index
- uid: RabbitMQ.Client.Apigen.AmqpClass.Index*
  name: Index
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_Index_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpClass.Index
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpClass.Index
  nameWithType: AmqpClass.Index
- uid: RabbitMQ.Client.Apigen.AmqpClass.m_Fields
  name: m_Fields
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_m_Fields
  commentId: F:RabbitMQ.Client.Apigen.AmqpClass.m_Fields
  fullName: RabbitMQ.Client.Apigen.AmqpClass.m_Fields
  nameWithType: AmqpClass.m_Fields
- uid: RabbitMQ.Client.Apigen.AmqpClass.m_Methods
  name: m_Methods
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_m_Methods
  commentId: F:RabbitMQ.Client.Apigen.AmqpClass.m_Methods
  fullName: RabbitMQ.Client.Apigen.AmqpClass.m_Methods
  nameWithType: AmqpClass.m_Methods
- uid: RabbitMQ.Client.Apigen.AmqpClass.MethodNamed(System.String)
  name: MethodNamed(String)
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_MethodNamed_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpClass.MethodNamed(System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpClass.MethodNamed(System.String)
  nameWithType: AmqpClass.MethodNamed(String)
- uid: RabbitMQ.Client.Apigen.AmqpClass.MethodNamed*
  name: MethodNamed
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_MethodNamed_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpClass.MethodNamed
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpClass.MethodNamed
  nameWithType: AmqpClass.MethodNamed
- uid: RabbitMQ.Client.Apigen.AmqpClass.NeedsProperties
  name: NeedsProperties
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_NeedsProperties
  commentId: P:RabbitMQ.Client.Apigen.AmqpClass.NeedsProperties
  fullName: RabbitMQ.Client.Apigen.AmqpClass.NeedsProperties
  nameWithType: AmqpClass.NeedsProperties
- uid: RabbitMQ.Client.Apigen.AmqpClass.NeedsProperties*
  name: NeedsProperties
  href: api/RabbitMQ.Client.Apigen.AmqpClass.html#RabbitMQ_Client_Apigen_AmqpClass_NeedsProperties_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpClass.NeedsProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpClass.NeedsProperties
  nameWithType: AmqpClass.NeedsProperties
- uid: RabbitMQ.Client.Apigen.AmqpEntity
  name: AmqpEntity
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html
  commentId: T:RabbitMQ.Client.Apigen.AmqpEntity
  fullName: RabbitMQ.Client.Apigen.AmqpEntity
  nameWithType: AmqpEntity
- uid: RabbitMQ.Client.Apigen.AmqpEntity.#ctor(System.Xml.XmlNode)
  name: AmqpEntity(XmlNode)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity__ctor_System_Xml_XmlNode_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.#ctor(System.Xml.XmlNode)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.AmqpEntity(System.Xml.XmlNode)
  nameWithType: AmqpEntity.AmqpEntity(XmlNode)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.#ctor*
  name: AmqpEntity
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity__ctor_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpEntity.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.AmqpEntity
  nameWithType: AmqpEntity.AmqpEntity
- uid: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String)
  name: DocumentationComment(String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_DocumentationComment_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String)
  nameWithType: AmqpEntity.DocumentationComment(String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String,System.String)
  name: DocumentationComment(String, String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_DocumentationComment_System_String_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String,System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String, System.String)
  nameWithType: AmqpEntity.DocumentationComment(String, String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String,System.String,System.String)
  name: DocumentationComment(String, String, String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_DocumentationComment_System_String_System_String_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String,System.String,System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment(System.String, System.String, System.String)
  nameWithType: AmqpEntity.DocumentationComment(String, String, String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment*
  name: DocumentationComment
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_DocumentationComment_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationComment
  nameWithType: AmqpEntity.DocumentationComment
- uid: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationCommentVariant(System.String,System.String)
  name: DocumentationCommentVariant(String, String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_DocumentationCommentVariant_System_String_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.DocumentationCommentVariant(System.String,System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationCommentVariant(System.String, System.String)
  nameWithType: AmqpEntity.DocumentationCommentVariant(String, String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationCommentVariant*
  name: DocumentationCommentVariant
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_DocumentationCommentVariant_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpEntity.DocumentationCommentVariant
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.DocumentationCommentVariant
  nameWithType: AmqpEntity.DocumentationCommentVariant
- uid: RabbitMQ.Client.Apigen.AmqpEntity.GetInt(System.String)
  name: GetInt(String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_GetInt_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.GetInt(System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.GetInt(System.String)
  nameWithType: AmqpEntity.GetInt(String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.GetInt*
  name: GetInt
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_GetInt_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpEntity.GetInt
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.GetInt
  nameWithType: AmqpEntity.GetInt
- uid: RabbitMQ.Client.Apigen.AmqpEntity.GetString(System.String)
  name: GetString(String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_GetString_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.GetString(System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.GetString(System.String)
  nameWithType: AmqpEntity.GetString(String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.GetString(System.String,System.String)
  name: GetString(String, String)
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_GetString_System_String_System_String_
  commentId: M:RabbitMQ.Client.Apigen.AmqpEntity.GetString(System.String,System.String)
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.GetString(System.String, System.String)
  nameWithType: AmqpEntity.GetString(String, String)
- uid: RabbitMQ.Client.Apigen.AmqpEntity.GetString*
  name: GetString
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_GetString_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpEntity.GetString
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.GetString
  nameWithType: AmqpEntity.GetString
- uid: RabbitMQ.Client.Apigen.AmqpEntity.m_node
  name: m_node
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_m_node
  commentId: F:RabbitMQ.Client.Apigen.AmqpEntity.m_node
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.m_node
  nameWithType: AmqpEntity.m_node
- uid: RabbitMQ.Client.Apigen.AmqpEntity.Name
  name: Name
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_Name
  commentId: P:RabbitMQ.Client.Apigen.AmqpEntity.Name
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.Name
  nameWithType: AmqpEntity.Name
- uid: RabbitMQ.Client.Apigen.AmqpEntity.Name*
  name: Name
  href: api/RabbitMQ.Client.Apigen.AmqpEntity.html#RabbitMQ_Client_Apigen_AmqpEntity_Name_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpEntity.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpEntity.Name
  nameWithType: AmqpEntity.Name
- uid: RabbitMQ.Client.Apigen.AmqpField
  name: AmqpField
  href: api/RabbitMQ.Client.Apigen.AmqpField.html
  commentId: T:RabbitMQ.Client.Apigen.AmqpField
  fullName: RabbitMQ.Client.Apigen.AmqpField
  nameWithType: AmqpField
- uid: RabbitMQ.Client.Apigen.AmqpField.#ctor(System.Xml.XmlNode)
  name: AmqpField(XmlNode)
  href: api/RabbitMQ.Client.Apigen.AmqpField.html#RabbitMQ_Client_Apigen_AmqpField__ctor_System_Xml_XmlNode_
  commentId: M:RabbitMQ.Client.Apigen.AmqpField.#ctor(System.Xml.XmlNode)
  fullName: RabbitMQ.Client.Apigen.AmqpField.AmqpField(System.Xml.XmlNode)
  nameWithType: AmqpField.AmqpField(XmlNode)
- uid: RabbitMQ.Client.Apigen.AmqpField.#ctor*
  name: AmqpField
  href: api/RabbitMQ.Client.Apigen.AmqpField.html#RabbitMQ_Client_Apigen_AmqpField__ctor_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpField.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpField.AmqpField
  nameWithType: AmqpField.AmqpField
- uid: RabbitMQ.Client.Apigen.AmqpField.Domain
  name: Domain
  href: api/RabbitMQ.Client.Apigen.AmqpField.html#RabbitMQ_Client_Apigen_AmqpField_Domain
  commentId: P:RabbitMQ.Client.Apigen.AmqpField.Domain
  fullName: RabbitMQ.Client.Apigen.AmqpField.Domain
  nameWithType: AmqpField.Domain
- uid: RabbitMQ.Client.Apigen.AmqpField.Domain*
  name: Domain
  href: api/RabbitMQ.Client.Apigen.AmqpField.html#RabbitMQ_Client_Apigen_AmqpField_Domain_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpField.Domain
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpField.Domain
  nameWithType: AmqpField.Domain
- uid: RabbitMQ.Client.Apigen.AmqpMethod
  name: AmqpMethod
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html
  commentId: T:RabbitMQ.Client.Apigen.AmqpMethod
  fullName: RabbitMQ.Client.Apigen.AmqpMethod
  nameWithType: AmqpMethod
- uid: RabbitMQ.Client.Apigen.AmqpMethod.#ctor(System.Xml.XmlNode)
  name: AmqpMethod(XmlNode)
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod__ctor_System_Xml_XmlNode_
  commentId: M:RabbitMQ.Client.Apigen.AmqpMethod.#ctor(System.Xml.XmlNode)
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.AmqpMethod(System.Xml.XmlNode)
  nameWithType: AmqpMethod.AmqpMethod(XmlNode)
- uid: RabbitMQ.Client.Apigen.AmqpMethod.#ctor*
  name: AmqpMethod
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod__ctor_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpMethod.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.AmqpMethod
  nameWithType: AmqpMethod.AmqpMethod
- uid: RabbitMQ.Client.Apigen.AmqpMethod.HasContent
  name: HasContent
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_HasContent
  commentId: P:RabbitMQ.Client.Apigen.AmqpMethod.HasContent
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.HasContent
  nameWithType: AmqpMethod.HasContent
- uid: RabbitMQ.Client.Apigen.AmqpMethod.HasContent*
  name: HasContent
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_HasContent_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpMethod.HasContent
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.HasContent
  nameWithType: AmqpMethod.HasContent
- uid: RabbitMQ.Client.Apigen.AmqpMethod.Index
  name: Index
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_Index
  commentId: P:RabbitMQ.Client.Apigen.AmqpMethod.Index
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.Index
  nameWithType: AmqpMethod.Index
- uid: RabbitMQ.Client.Apigen.AmqpMethod.Index*
  name: Index
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_Index_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpMethod.Index
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.Index
  nameWithType: AmqpMethod.Index
- uid: RabbitMQ.Client.Apigen.AmqpMethod.IsSimpleRpcRequest
  name: IsSimpleRpcRequest
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_IsSimpleRpcRequest
  commentId: P:RabbitMQ.Client.Apigen.AmqpMethod.IsSimpleRpcRequest
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.IsSimpleRpcRequest
  nameWithType: AmqpMethod.IsSimpleRpcRequest
- uid: RabbitMQ.Client.Apigen.AmqpMethod.IsSimpleRpcRequest*
  name: IsSimpleRpcRequest
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_IsSimpleRpcRequest_
  commentId: Overload:RabbitMQ.Client.Apigen.AmqpMethod.IsSimpleRpcRequest
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.IsSimpleRpcRequest
  nameWithType: AmqpMethod.IsSimpleRpcRequest
- uid: RabbitMQ.Client.Apigen.AmqpMethod.m_Fields
  name: m_Fields
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_m_Fields
  commentId: F:RabbitMQ.Client.Apigen.AmqpMethod.m_Fields
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.m_Fields
  nameWithType: AmqpMethod.m_Fields
- uid: RabbitMQ.Client.Apigen.AmqpMethod.m_ResponseMethods
  name: m_ResponseMethods
  href: api/RabbitMQ.Client.Apigen.AmqpMethod.html#RabbitMQ_Client_Apigen_AmqpMethod_m_ResponseMethods
  commentId: F:RabbitMQ.Client.Apigen.AmqpMethod.m_ResponseMethods
  fullName: RabbitMQ.Client.Apigen.AmqpMethod.m_ResponseMethods
  nameWithType: AmqpMethod.m_ResponseMethods
- uid: RabbitMQ.Client.Apigen.Apigen
  name: Apigen
  href: api/RabbitMQ.Client.Apigen.Apigen.html
  commentId: T:RabbitMQ.Client.Apigen.Apigen
  fullName: RabbitMQ.Client.Apigen.Apigen
  nameWithType: Apigen
- uid: RabbitMQ.Client.Apigen.Apigen.#ctor(System.Collections.Generic.IList{System.String})
  name: Apigen(IList<String>)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen__ctor_System_Collections_Generic_IList_System_String__
  commentId: M:RabbitMQ.Client.Apigen.Apigen.#ctor(System.Collections.Generic.IList{System.String})
  name.vb: Apigen(IList(Of String))
  fullName: RabbitMQ.Client.Apigen.Apigen.Apigen(System.Collections.Generic.IList<System.String>)
  fullName.vb: RabbitMQ.Client.Apigen.Apigen.Apigen(System.Collections.Generic.IList(Of System.String))
  nameWithType: Apigen.Apigen(IList<String>)
  nameWithType.vb: Apigen.Apigen(IList(Of String))
- uid: RabbitMQ.Client.Apigen.Apigen.#ctor*
  name: Apigen
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen__ctor_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.Apigen
  nameWithType: Apigen.Apigen
- uid: RabbitMQ.Client.Apigen.Apigen.ApiNamespaceBase
  name: ApiNamespaceBase
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ApiNamespaceBase
  commentId: P:RabbitMQ.Client.Apigen.Apigen.ApiNamespaceBase
  fullName: RabbitMQ.Client.Apigen.Apigen.ApiNamespaceBase
  nameWithType: Apigen.ApiNamespaceBase
- uid: RabbitMQ.Client.Apigen.Apigen.ApiNamespaceBase*
  name: ApiNamespaceBase
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ApiNamespaceBase_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.ApiNamespaceBase
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.ApiNamespaceBase
  nameWithType: Apigen.ApiNamespaceBase
- uid: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Collections.Generic.IEnumerable{System.Object},System.Type)
  name: Attribute(IEnumerable<Object>, Type)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Attribute_System_Collections_Generic_IEnumerable_System_Object__System_Type_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Attribute(System.Collections.Generic.IEnumerable{System.Object},System.Type)
  name.vb: Attribute(IEnumerable(Of Object), Type)
  fullName: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Collections.Generic.IEnumerable<System.Object>, System.Type)
  fullName.vb: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Collections.Generic.IEnumerable(Of System.Object), System.Type)
  nameWithType: Apigen.Attribute(IEnumerable<Object>, Type)
  nameWithType.vb: Apigen.Attribute(IEnumerable(Of Object), Type)
- uid: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.ICustomAttributeProvider,System.Type)
  name: Attribute(ICustomAttributeProvider, Type)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Attribute_System_Reflection_ICustomAttributeProvider_System_Type_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.ICustomAttributeProvider,System.Type)
  fullName: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.ICustomAttributeProvider, System.Type)
  nameWithType: Apigen.Attribute(ICustomAttributeProvider, Type)
- uid: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.MemberInfo,System.Type)
  name: Attribute(MemberInfo, Type)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Attribute_System_Reflection_MemberInfo_System_Type_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.MemberInfo,System.Type)
  fullName: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.MemberInfo, System.Type)
  nameWithType: Apigen.Attribute(MemberInfo, Type)
- uid: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.ParameterInfo,System.Type)
  name: Attribute(ParameterInfo, Type)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Attribute_System_Reflection_ParameterInfo_System_Type_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.ParameterInfo,System.Type)
  fullName: RabbitMQ.Client.Apigen.Apigen.Attribute(System.Reflection.ParameterInfo, System.Type)
  nameWithType: Apigen.Attribute(ParameterInfo, Type)
- uid: RabbitMQ.Client.Apigen.Apigen.Attribute*
  name: Attribute
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Attribute_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.Attribute
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.Attribute
  nameWithType: Apigen.Attribute
- uid: RabbitMQ.Client.Apigen.Apigen.Emit(System.Object)
  name: Emit(Object)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Emit_System_Object_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Emit(System.Object)
  fullName: RabbitMQ.Client.Apigen.Apigen.Emit(System.Object)
  nameWithType: Apigen.Emit(Object)
- uid: RabbitMQ.Client.Apigen.Apigen.Emit*
  name: Emit
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Emit_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.Emit
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.Emit
  nameWithType: Apigen.Emit
- uid: RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers(System.Collections.Generic.IList{System.Reflection.MethodInfo})
  name: EmitAsynchronousHandlers(IList<MethodInfo>)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitAsynchronousHandlers_System_Collections_Generic_IList_System_Reflection_MethodInfo__
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers(System.Collections.Generic.IList{System.Reflection.MethodInfo})
  name.vb: EmitAsynchronousHandlers(IList(Of MethodInfo))
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers(System.Collections.Generic.IList<System.Reflection.MethodInfo>)
  fullName.vb: RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers(System.Collections.Generic.IList(Of System.Reflection.MethodInfo))
  nameWithType: Apigen.EmitAsynchronousHandlers(IList<MethodInfo>)
  nameWithType.vb: Apigen.EmitAsynchronousHandlers(IList(Of MethodInfo))
- uid: RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers*
  name: EmitAsynchronousHandlers
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitAsynchronousHandlers_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitAsynchronousHandlers
  nameWithType: Apigen.EmitAsynchronousHandlers
- uid: RabbitMQ.Client.Apigen.Apigen.EmitAutogeneratedSummary(System.String,System.String)
  name: EmitAutogeneratedSummary(String, String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitAutogeneratedSummary_System_String_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitAutogeneratedSummary(System.String,System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitAutogeneratedSummary(System.String, System.String)
  nameWithType: Apigen.EmitAutogeneratedSummary(String, String)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitAutogeneratedSummary*
  name: EmitAutogeneratedSummary
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitAutogeneratedSummary_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitAutogeneratedSummary
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitAutogeneratedSummary
  nameWithType: Apigen.EmitAutogeneratedSummary
- uid: RabbitMQ.Client.Apigen.Apigen.EmitClassMethodImplementations(RabbitMQ.Client.Apigen.AmqpClass)
  name: EmitClassMethodImplementations(AmqpClass)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitClassMethodImplementations_RabbitMQ_Client_Apigen_AmqpClass_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitClassMethodImplementations(RabbitMQ.Client.Apigen.AmqpClass)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitClassMethodImplementations(RabbitMQ.Client.Apigen.AmqpClass)
  nameWithType: Apigen.EmitClassMethodImplementations(AmqpClass)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitClassMethodImplementations*
  name: EmitClassMethodImplementations
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitClassMethodImplementations_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitClassMethodImplementations
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitClassMethodImplementations
  nameWithType: Apigen.EmitClassMethodImplementations
- uid: RabbitMQ.Client.Apigen.Apigen.EmitClassMethods(RabbitMQ.Client.Apigen.AmqpClass)
  name: EmitClassMethods(AmqpClass)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitClassMethods_RabbitMQ_Client_Apigen_AmqpClass_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitClassMethods(RabbitMQ.Client.Apigen.AmqpClass)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitClassMethods(RabbitMQ.Client.Apigen.AmqpClass)
  nameWithType: Apigen.EmitClassMethods(AmqpClass)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitClassMethods*
  name: EmitClassMethods
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitClassMethods_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitClassMethods
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitClassMethods
  nameWithType: Apigen.EmitClassMethods
- uid: RabbitMQ.Client.Apigen.Apigen.EmitClassProperties(RabbitMQ.Client.Apigen.AmqpClass)
  name: EmitClassProperties(AmqpClass)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitClassProperties_RabbitMQ_Client_Apigen_AmqpClass_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitClassProperties(RabbitMQ.Client.Apigen.AmqpClass)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitClassProperties(RabbitMQ.Client.Apigen.AmqpClass)
  nameWithType: Apigen.EmitClassProperties(AmqpClass)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitClassProperties*
  name: EmitClassProperties
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitClassProperties_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitClassProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitClassProperties
  nameWithType: Apigen.EmitClassProperties
- uid: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderFactory(System.Reflection.MethodInfo)
  name: EmitContentHeaderFactory(MethodInfo)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitContentHeaderFactory_System_Reflection_MethodInfo_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderFactory(System.Reflection.MethodInfo)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderFactory(System.Reflection.MethodInfo)
  nameWithType: Apigen.EmitContentHeaderFactory(MethodInfo)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderFactory*
  name: EmitContentHeaderFactory
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitContentHeaderFactory_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderFactory
  nameWithType: Apigen.EmitContentHeaderFactory
- uid: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderReader
  name: EmitContentHeaderReader()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitContentHeaderReader
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderReader
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderReader()
  nameWithType: Apigen.EmitContentHeaderReader()
- uid: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderReader*
  name: EmitContentHeaderReader
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitContentHeaderReader_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderReader
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitContentHeaderReader
  nameWithType: Apigen.EmitContentHeaderReader
- uid: RabbitMQ.Client.Apigen.Apigen.EmitLine(System.Object)
  name: EmitLine(Object)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitLine_System_Object_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitLine(System.Object)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitLine(System.Object)
  nameWithType: Apigen.EmitLine(Object)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitLine*
  name: EmitLine
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitLine_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitLine
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitLine
  nameWithType: Apigen.EmitLine
- uid: RabbitMQ.Client.Apigen.Apigen.EmitMethodArgumentReader
  name: EmitMethodArgumentReader()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitMethodArgumentReader
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitMethodArgumentReader
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitMethodArgumentReader()
  nameWithType: Apigen.EmitMethodArgumentReader()
- uid: RabbitMQ.Client.Apigen.Apigen.EmitMethodArgumentReader*
  name: EmitMethodArgumentReader
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitMethodArgumentReader_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitMethodArgumentReader
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitMethodArgumentReader
  nameWithType: Apigen.EmitMethodArgumentReader
- uid: RabbitMQ.Client.Apigen.Apigen.EmitModelImplementation
  name: EmitModelImplementation()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitModelImplementation
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitModelImplementation
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitModelImplementation()
  nameWithType: Apigen.EmitModelImplementation()
- uid: RabbitMQ.Client.Apigen.Apigen.EmitModelImplementation*
  name: EmitModelImplementation
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitModelImplementation_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitModelImplementation
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitModelImplementation
  nameWithType: Apigen.EmitModelImplementation
- uid: RabbitMQ.Client.Apigen.Apigen.EmitModelMethod(System.Reflection.MethodInfo)
  name: EmitModelMethod(MethodInfo)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitModelMethod_System_Reflection_MethodInfo_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitModelMethod(System.Reflection.MethodInfo)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitModelMethod(System.Reflection.MethodInfo)
  nameWithType: Apigen.EmitModelMethod(MethodInfo)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitModelMethod*
  name: EmitModelMethod
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitModelMethod_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitModelMethod
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitModelMethod
  nameWithType: Apigen.EmitModelMethod
- uid: RabbitMQ.Client.Apigen.Apigen.EmitModelMethodPreamble(System.Reflection.MethodInfo)
  name: EmitModelMethodPreamble(MethodInfo)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitModelMethodPreamble_System_Reflection_MethodInfo_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitModelMethodPreamble(System.Reflection.MethodInfo)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitModelMethodPreamble(System.Reflection.MethodInfo)
  nameWithType: Apigen.EmitModelMethodPreamble(MethodInfo)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitModelMethodPreamble*
  name: EmitModelMethodPreamble
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitModelMethodPreamble_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitModelMethodPreamble
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitModelMethodPreamble
  nameWithType: Apigen.EmitModelMethodPreamble
- uid: RabbitMQ.Client.Apigen.Apigen.EmitPrelude
  name: EmitPrelude()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitPrelude
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitPrelude
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitPrelude()
  nameWithType: Apigen.EmitPrelude()
- uid: RabbitMQ.Client.Apigen.Apigen.EmitPrelude*
  name: EmitPrelude
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitPrelude_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitPrelude
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitPrelude
  nameWithType: Apigen.EmitPrelude
- uid: RabbitMQ.Client.Apigen.Apigen.EmitPrivate
  name: EmitPrivate()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitPrivate
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitPrivate
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitPrivate()
  nameWithType: Apigen.EmitPrivate()
- uid: RabbitMQ.Client.Apigen.Apigen.EmitPrivate*
  name: EmitPrivate
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitPrivate_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitPrivate
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitPrivate
  nameWithType: Apigen.EmitPrivate
- uid: RabbitMQ.Client.Apigen.Apigen.EmitPublic
  name: EmitPublic()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitPublic
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitPublic
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitPublic()
  nameWithType: Apigen.EmitPublic()
- uid: RabbitMQ.Client.Apigen.Apigen.EmitPublic*
  name: EmitPublic
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitPublic_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitPublic
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitPublic
  nameWithType: Apigen.EmitPublic
- uid: RabbitMQ.Client.Apigen.Apigen.EmitSpecComment(System.Object)
  name: EmitSpecComment(Object)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitSpecComment_System_Object_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.EmitSpecComment(System.Object)
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitSpecComment(System.Object)
  nameWithType: Apigen.EmitSpecComment(Object)
- uid: RabbitMQ.Client.Apigen.Apigen.EmitSpecComment*
  name: EmitSpecComment
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_EmitSpecComment_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.EmitSpecComment
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.EmitSpecComment
  nameWithType: Apigen.EmitSpecComment
- uid: RabbitMQ.Client.Apigen.Apigen.Generate
  name: Generate()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Generate
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Generate
  fullName: RabbitMQ.Client.Apigen.Apigen.Generate()
  nameWithType: Apigen.Generate()
- uid: RabbitMQ.Client.Apigen.Apigen.Generate*
  name: Generate
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Generate_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.Generate
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.Generate
  nameWithType: Apigen.Generate
- uid: RabbitMQ.Client.Apigen.Apigen.GenerateOutput
  name: GenerateOutput()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GenerateOutput
  commentId: M:RabbitMQ.Client.Apigen.Apigen.GenerateOutput
  fullName: RabbitMQ.Client.Apigen.Apigen.GenerateOutput()
  nameWithType: Apigen.GenerateOutput()
- uid: RabbitMQ.Client.Apigen.Apigen.GenerateOutput*
  name: GenerateOutput
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GenerateOutput_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.GenerateOutput
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.GenerateOutput
  nameWithType: Apigen.GenerateOutput
- uid: RabbitMQ.Client.Apigen.Apigen.GetInt(System.Xml.XmlNode,System.String)
  name: GetInt(XmlNode, String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetInt_System_Xml_XmlNode_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.GetInt(System.Xml.XmlNode,System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.GetInt(System.Xml.XmlNode, System.String)
  nameWithType: Apigen.GetInt(XmlNode, String)
- uid: RabbitMQ.Client.Apigen.Apigen.GetInt(System.Xml.XmlNode,System.String,System.Int32)
  name: GetInt(XmlNode, String, Int32)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetInt_System_Xml_XmlNode_System_String_System_Int32_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.GetInt(System.Xml.XmlNode,System.String,System.Int32)
  fullName: RabbitMQ.Client.Apigen.Apigen.GetInt(System.Xml.XmlNode, System.String, System.Int32)
  nameWithType: Apigen.GetInt(XmlNode, String, Int32)
- uid: RabbitMQ.Client.Apigen.Apigen.GetInt*
  name: GetInt
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetInt_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.GetInt
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.GetInt
  nameWithType: Apigen.GetInt
- uid: RabbitMQ.Client.Apigen.Apigen.GetNodes(System.Xml.XmlNode,System.String)
  name: GetNodes(XmlNode, String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetNodes_System_Xml_XmlNode_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.GetNodes(System.Xml.XmlNode,System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.GetNodes(System.Xml.XmlNode, System.String)
  nameWithType: Apigen.GetNodes(XmlNode, String)
- uid: RabbitMQ.Client.Apigen.Apigen.GetNodes*
  name: GetNodes
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetNodes_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.GetNodes
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.GetNodes
  nameWithType: Apigen.GetNodes
- uid: RabbitMQ.Client.Apigen.Apigen.GetString(System.Xml.XmlNode,System.String)
  name: GetString(XmlNode, String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetString_System_Xml_XmlNode_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.GetString(System.Xml.XmlNode,System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.GetString(System.Xml.XmlNode, System.String)
  nameWithType: Apigen.GetString(XmlNode, String)
- uid: RabbitMQ.Client.Apigen.Apigen.GetString(System.Xml.XmlNode,System.String,System.String)
  name: GetString(XmlNode, String, String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetString_System_Xml_XmlNode_System_String_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.GetString(System.Xml.XmlNode,System.String,System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.GetString(System.Xml.XmlNode, System.String, System.String)
  nameWithType: Apigen.GetString(XmlNode, String, String)
- uid: RabbitMQ.Client.Apigen.Apigen.GetString*
  name: GetString
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_GetString_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.GetString
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.GetString
  nameWithType: Apigen.GetString
- uid: RabbitMQ.Client.Apigen.Apigen.HandleOption(System.String)
  name: HandleOption(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_HandleOption_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.HandleOption(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.HandleOption(System.String)
  nameWithType: Apigen.HandleOption(String)
- uid: RabbitMQ.Client.Apigen.Apigen.HandleOption*
  name: HandleOption
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_HandleOption_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.HandleOption
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.HandleOption
  nameWithType: Apigen.HandleOption
- uid: RabbitMQ.Client.Apigen.Apigen.HasFactoryMethod(RabbitMQ.Client.Apigen.AmqpClass)
  name: HasFactoryMethod(AmqpClass)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_HasFactoryMethod_RabbitMQ_Client_Apigen_AmqpClass_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.HasFactoryMethod(RabbitMQ.Client.Apigen.AmqpClass)
  fullName: RabbitMQ.Client.Apigen.Apigen.HasFactoryMethod(RabbitMQ.Client.Apigen.AmqpClass)
  nameWithType: Apigen.HasFactoryMethod(AmqpClass)
- uid: RabbitMQ.Client.Apigen.Apigen.HasFactoryMethod*
  name: HasFactoryMethod
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_HasFactoryMethod_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.HasFactoryMethod
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.HasFactoryMethod
  nameWithType: Apigen.HasFactoryMethod
- uid: RabbitMQ.Client.Apigen.Apigen.IdentifierParts(System.String)
  name: IdentifierParts(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IdentifierParts_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.IdentifierParts(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.IdentifierParts(System.String)
  nameWithType: Apigen.IdentifierParts(String)
- uid: RabbitMQ.Client.Apigen.Apigen.IdentifierParts*
  name: IdentifierParts
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IdentifierParts_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.IdentifierParts
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.IdentifierParts
  nameWithType: Apigen.IdentifierParts
- uid: RabbitMQ.Client.Apigen.Apigen.ImplNamespaceBase
  name: ImplNamespaceBase
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ImplNamespaceBase
  commentId: P:RabbitMQ.Client.Apigen.Apigen.ImplNamespaceBase
  fullName: RabbitMQ.Client.Apigen.Apigen.ImplNamespaceBase
  nameWithType: Apigen.ImplNamespaceBase
- uid: RabbitMQ.Client.Apigen.Apigen.ImplNamespaceBase*
  name: ImplNamespaceBase
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ImplNamespaceBase_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.ImplNamespaceBase
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.ImplNamespaceBase
  nameWithType: Apigen.ImplNamespaceBase
- uid: RabbitMQ.Client.Apigen.Apigen.InitPrimitiveType(System.String,System.String,System.Boolean)
  name: InitPrimitiveType(String, String, Boolean)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_InitPrimitiveType_System_String_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.InitPrimitiveType(System.String,System.String,System.Boolean)
  fullName: RabbitMQ.Client.Apigen.Apigen.InitPrimitiveType(System.String, System.String, System.Boolean)
  nameWithType: Apigen.InitPrimitiveType(String, String, Boolean)
- uid: RabbitMQ.Client.Apigen.Apigen.InitPrimitiveType*
  name: InitPrimitiveType
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_InitPrimitiveType_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.InitPrimitiveType
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.InitPrimitiveType
  nameWithType: Apigen.InitPrimitiveType
- uid: RabbitMQ.Client.Apigen.Apigen.IsAmqpClass(System.Type)
  name: IsAmqpClass(Type)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IsAmqpClass_System_Type_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.IsAmqpClass(System.Type)
  fullName: RabbitMQ.Client.Apigen.Apigen.IsAmqpClass(System.Type)
  nameWithType: Apigen.IsAmqpClass(Type)
- uid: RabbitMQ.Client.Apigen.Apigen.IsAmqpClass*
  name: IsAmqpClass
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IsAmqpClass_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.IsAmqpClass
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.IsAmqpClass
  nameWithType: Apigen.IsAmqpClass
- uid: RabbitMQ.Client.Apigen.Apigen.IsBoolean(RabbitMQ.Client.Apigen.AmqpField)
  name: IsBoolean(AmqpField)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IsBoolean_RabbitMQ_Client_Apigen_AmqpField_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.IsBoolean(RabbitMQ.Client.Apigen.AmqpField)
  fullName: RabbitMQ.Client.Apigen.Apigen.IsBoolean(RabbitMQ.Client.Apigen.AmqpField)
  nameWithType: Apigen.IsBoolean(AmqpField)
- uid: RabbitMQ.Client.Apigen.Apigen.IsBoolean*
  name: IsBoolean
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IsBoolean_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.IsBoolean
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.IsBoolean
  nameWithType: Apigen.IsBoolean
- uid: RabbitMQ.Client.Apigen.Apigen.IsReferenceType(RabbitMQ.Client.Apigen.AmqpField)
  name: IsReferenceType(AmqpField)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IsReferenceType_RabbitMQ_Client_Apigen_AmqpField_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.IsReferenceType(RabbitMQ.Client.Apigen.AmqpField)
  fullName: RabbitMQ.Client.Apigen.Apigen.IsReferenceType(RabbitMQ.Client.Apigen.AmqpField)
  nameWithType: Apigen.IsReferenceType(AmqpField)
- uid: RabbitMQ.Client.Apigen.Apigen.IsReferenceType*
  name: IsReferenceType
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_IsReferenceType_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.IsReferenceType
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.IsReferenceType
  nameWithType: Apigen.IsReferenceType
- uid: RabbitMQ.Client.Apigen.Apigen.LoadSpec
  name: LoadSpec()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_LoadSpec
  commentId: M:RabbitMQ.Client.Apigen.Apigen.LoadSpec
  fullName: RabbitMQ.Client.Apigen.Apigen.LoadSpec()
  nameWithType: Apigen.LoadSpec()
- uid: RabbitMQ.Client.Apigen.Apigen.LoadSpec*
  name: LoadSpec
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_LoadSpec_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.LoadSpec
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.LoadSpec
  nameWithType: Apigen.LoadSpec
- uid: RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod(System.Reflection.MethodInfo,System.String,RabbitMQ.Client.Apigen.AmqpClass@,RabbitMQ.Client.Apigen.AmqpMethod@)
  name: LookupAmqpMethod(MethodInfo, String, out AmqpClass, out AmqpMethod)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_LookupAmqpMethod_System_Reflection_MethodInfo_System_String_RabbitMQ_Client_Apigen_AmqpClass__RabbitMQ_Client_Apigen_AmqpMethod__
  commentId: M:RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod(System.Reflection.MethodInfo,System.String,RabbitMQ.Client.Apigen.AmqpClass@,RabbitMQ.Client.Apigen.AmqpMethod@)
  name.vb: LookupAmqpMethod(MethodInfo, String, ByRef AmqpClass, ByRef AmqpMethod)
  fullName: RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod(System.Reflection.MethodInfo, System.String, out RabbitMQ.Client.Apigen.AmqpClass, out RabbitMQ.Client.Apigen.AmqpMethod)
  fullName.vb: RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod(System.Reflection.MethodInfo, System.String, ByRef RabbitMQ.Client.Apigen.AmqpClass, ByRef RabbitMQ.Client.Apigen.AmqpMethod)
  nameWithType: Apigen.LookupAmqpMethod(MethodInfo, String, out AmqpClass, out AmqpMethod)
  nameWithType.vb: Apigen.LookupAmqpMethod(MethodInfo, String, ByRef AmqpClass, ByRef AmqpMethod)
- uid: RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod*
  name: LookupAmqpMethod
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_LookupAmqpMethod_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.LookupAmqpMethod
  nameWithType: Apigen.LookupAmqpMethod
- uid: RabbitMQ.Client.Apigen.Apigen.m_apiName
  name: m_apiName
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_apiName
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_apiName
  fullName: RabbitMQ.Client.Apigen.Apigen.m_apiName
  nameWithType: Apigen.m_apiName
- uid: RabbitMQ.Client.Apigen.Apigen.m_classes
  name: m_classes
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_classes
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_classes
  fullName: RabbitMQ.Client.Apigen.Apigen.m_classes
  nameWithType: Apigen.m_classes
- uid: RabbitMQ.Client.Apigen.Apigen.m_constants
  name: m_constants
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_constants
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_constants
  fullName: RabbitMQ.Client.Apigen.Apigen.m_constants
  nameWithType: Apigen.m_constants
- uid: RabbitMQ.Client.Apigen.Apigen.m_domains
  name: m_domains
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_domains
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_domains
  fullName: RabbitMQ.Client.Apigen.Apigen.m_domains
  nameWithType: Apigen.m_domains
- uid: RabbitMQ.Client.Apigen.Apigen.m_emitComments
  name: m_emitComments
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_emitComments
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_emitComments
  fullName: RabbitMQ.Client.Apigen.Apigen.m_emitComments
  nameWithType: Apigen.m_emitComments
- uid: RabbitMQ.Client.Apigen.Apigen.m_inputXmlFilename
  name: m_inputXmlFilename
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_inputXmlFilename
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_inputXmlFilename
  fullName: RabbitMQ.Client.Apigen.Apigen.m_inputXmlFilename
  nameWithType: Apigen.m_inputXmlFilename
- uid: RabbitMQ.Client.Apigen.Apigen.m_majorVersion
  name: m_majorVersion
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_majorVersion
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_majorVersion
  fullName: RabbitMQ.Client.Apigen.Apigen.m_majorVersion
  nameWithType: Apigen.m_majorVersion
- uid: RabbitMQ.Client.Apigen.Apigen.m_minorVersion
  name: m_minorVersion
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_minorVersion
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_minorVersion
  fullName: RabbitMQ.Client.Apigen.Apigen.m_minorVersion
  nameWithType: Apigen.m_minorVersion
- uid: RabbitMQ.Client.Apigen.Apigen.m_modelType
  name: m_modelType
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_modelType
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_modelType
  fullName: RabbitMQ.Client.Apigen.Apigen.m_modelType
  nameWithType: Apigen.m_modelType
- uid: RabbitMQ.Client.Apigen.Apigen.m_modelTypes
  name: m_modelTypes
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_modelTypes
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_modelTypes
  fullName: RabbitMQ.Client.Apigen.Apigen.m_modelTypes
  nameWithType: Apigen.m_modelTypes
- uid: RabbitMQ.Client.Apigen.Apigen.m_outputFile
  name: m_outputFile
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_outputFile
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_outputFile
  fullName: RabbitMQ.Client.Apigen.Apigen.m_outputFile
  nameWithType: Apigen.m_outputFile
- uid: RabbitMQ.Client.Apigen.Apigen.m_outputFilename
  name: m_outputFilename
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_outputFilename
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_outputFilename
  fullName: RabbitMQ.Client.Apigen.Apigen.m_outputFilename
  nameWithType: Apigen.m_outputFilename
- uid: RabbitMQ.Client.Apigen.Apigen.m_primitiveTypeFlagMap
  name: m_primitiveTypeFlagMap
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_primitiveTypeFlagMap
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_primitiveTypeFlagMap
  fullName: RabbitMQ.Client.Apigen.Apigen.m_primitiveTypeFlagMap
  nameWithType: Apigen.m_primitiveTypeFlagMap
- uid: RabbitMQ.Client.Apigen.Apigen.m_primitiveTypeMap
  name: m_primitiveTypeMap
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_primitiveTypeMap
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_primitiveTypeMap
  fullName: RabbitMQ.Client.Apigen.Apigen.m_primitiveTypeMap
  nameWithType: Apigen.m_primitiveTypeMap
- uid: RabbitMQ.Client.Apigen.Apigen.m_revision
  name: m_revision
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_revision
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_revision
  fullName: RabbitMQ.Client.Apigen.Apigen.m_revision
  nameWithType: Apigen.m_revision
- uid: RabbitMQ.Client.Apigen.Apigen.m_spec
  name: m_spec
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_m_spec
  commentId: F:RabbitMQ.Client.Apigen.Apigen.m_spec
  fullName: RabbitMQ.Client.Apigen.Apigen.m_spec
  nameWithType: Apigen.m_spec
- uid: RabbitMQ.Client.Apigen.Apigen.Main(System.String[])
  name: Main(String[])
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Main_System_String___
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Main(System.String[])
  name.vb: Main(String())
  fullName: RabbitMQ.Client.Apigen.Apigen.Main(System.String[])
  fullName.vb: RabbitMQ.Client.Apigen.Apigen.Main(System.String())
  nameWithType: Apigen.Main(String[])
  nameWithType.vb: Apigen.Main(String())
- uid: RabbitMQ.Client.Apigen.Apigen.Main*
  name: Main
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Main_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.Main
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.Main
  nameWithType: Apigen.Main
- uid: RabbitMQ.Client.Apigen.Apigen.MangleClass(System.String)
  name: MangleClass(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleClass_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.MangleClass(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleClass(System.String)
  nameWithType: Apigen.MangleClass(String)
- uid: RabbitMQ.Client.Apigen.Apigen.MangleClass*
  name: MangleClass
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleClass_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.MangleClass
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleClass
  nameWithType: Apigen.MangleClass
- uid: RabbitMQ.Client.Apigen.Apigen.MangleConstant(System.String)
  name: MangleConstant(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleConstant_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.MangleConstant(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleConstant(System.String)
  nameWithType: Apigen.MangleConstant(String)
- uid: RabbitMQ.Client.Apigen.Apigen.MangleConstant*
  name: MangleConstant
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleConstant_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.MangleConstant
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleConstant
  nameWithType: Apigen.MangleConstant
- uid: RabbitMQ.Client.Apigen.Apigen.MangleMethod(System.String)
  name: MangleMethod(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleMethod_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.MangleMethod(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleMethod(System.String)
  nameWithType: Apigen.MangleMethod(String)
- uid: RabbitMQ.Client.Apigen.Apigen.MangleMethod*
  name: MangleMethod
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleMethod_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.MangleMethod
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleMethod
  nameWithType: Apigen.MangleMethod
- uid: RabbitMQ.Client.Apigen.Apigen.MangleMethodClass(RabbitMQ.Client.Apigen.AmqpClass,RabbitMQ.Client.Apigen.AmqpMethod)
  name: MangleMethodClass(AmqpClass, AmqpMethod)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleMethodClass_RabbitMQ_Client_Apigen_AmqpClass_RabbitMQ_Client_Apigen_AmqpMethod_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.MangleMethodClass(RabbitMQ.Client.Apigen.AmqpClass,RabbitMQ.Client.Apigen.AmqpMethod)
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleMethodClass(RabbitMQ.Client.Apigen.AmqpClass, RabbitMQ.Client.Apigen.AmqpMethod)
  nameWithType: Apigen.MangleMethodClass(AmqpClass, AmqpMethod)
- uid: RabbitMQ.Client.Apigen.Apigen.MangleMethodClass*
  name: MangleMethodClass
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MangleMethodClass_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.MangleMethodClass
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.MangleMethodClass
  nameWithType: Apigen.MangleMethodClass
- uid: RabbitMQ.Client.Apigen.Apigen.MapDomain(System.String)
  name: MapDomain(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MapDomain_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.MapDomain(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.MapDomain(System.String)
  nameWithType: Apigen.MapDomain(String)
- uid: RabbitMQ.Client.Apigen.Apigen.MapDomain*
  name: MapDomain
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MapDomain_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.MapDomain
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.MapDomain
  nameWithType: Apigen.MapDomain
- uid: RabbitMQ.Client.Apigen.Apigen.MaybeEmitModelMethod(System.Reflection.MethodInfo)
  name: MaybeEmitModelMethod(MethodInfo)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MaybeEmitModelMethod_System_Reflection_MethodInfo_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.MaybeEmitModelMethod(System.Reflection.MethodInfo)
  fullName: RabbitMQ.Client.Apigen.Apigen.MaybeEmitModelMethod(System.Reflection.MethodInfo)
  nameWithType: Apigen.MaybeEmitModelMethod(MethodInfo)
- uid: RabbitMQ.Client.Apigen.Apigen.MaybeEmitModelMethod*
  name: MaybeEmitModelMethod
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_MaybeEmitModelMethod_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.MaybeEmitModelMethod
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.MaybeEmitModelMethod
  nameWithType: Apigen.MaybeEmitModelMethod
- uid: RabbitMQ.Client.Apigen.Apigen.ParseSpec
  name: ParseSpec()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ParseSpec
  commentId: M:RabbitMQ.Client.Apigen.Apigen.ParseSpec
  fullName: RabbitMQ.Client.Apigen.Apigen.ParseSpec()
  nameWithType: Apigen.ParseSpec()
- uid: RabbitMQ.Client.Apigen.Apigen.ParseSpec*
  name: ParseSpec
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ParseSpec_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.ParseSpec
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.ParseSpec
  nameWithType: Apigen.ParseSpec
- uid: RabbitMQ.Client.Apigen.Apigen.ReflectModel
  name: ReflectModel()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ReflectModel
  commentId: M:RabbitMQ.Client.Apigen.Apigen.ReflectModel
  fullName: RabbitMQ.Client.Apigen.Apigen.ReflectModel()
  nameWithType: Apigen.ReflectModel()
- uid: RabbitMQ.Client.Apigen.Apigen.ReflectModel*
  name: ReflectModel
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ReflectModel_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.ReflectModel
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.ReflectModel
  nameWithType: Apigen.ReflectModel
- uid: RabbitMQ.Client.Apigen.Apigen.ResolveDomain(System.String)
  name: ResolveDomain(String)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ResolveDomain_System_String_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.ResolveDomain(System.String)
  fullName: RabbitMQ.Client.Apigen.Apigen.ResolveDomain(System.String)
  nameWithType: Apigen.ResolveDomain(String)
- uid: RabbitMQ.Client.Apigen.Apigen.ResolveDomain*
  name: ResolveDomain
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_ResolveDomain_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.ResolveDomain
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.ResolveDomain
  nameWithType: Apigen.ResolveDomain
- uid: RabbitMQ.Client.Apigen.Apigen.SanitisedFullName(System.Type)
  name: SanitisedFullName(Type)
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_SanitisedFullName_System_Type_
  commentId: M:RabbitMQ.Client.Apigen.Apigen.SanitisedFullName(System.Type)
  fullName: RabbitMQ.Client.Apigen.Apigen.SanitisedFullName(System.Type)
  nameWithType: Apigen.SanitisedFullName(Type)
- uid: RabbitMQ.Client.Apigen.Apigen.SanitisedFullName*
  name: SanitisedFullName
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_SanitisedFullName_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.SanitisedFullName
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.SanitisedFullName
  nameWithType: Apigen.SanitisedFullName
- uid: RabbitMQ.Client.Apigen.Apigen.Usage
  name: Usage()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Usage
  commentId: M:RabbitMQ.Client.Apigen.Apigen.Usage
  fullName: RabbitMQ.Client.Apigen.Apigen.Usage()
  nameWithType: Apigen.Usage()
- uid: RabbitMQ.Client.Apigen.Apigen.Usage*
  name: Usage
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_Usage_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.Usage
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.Usage
  nameWithType: Apigen.Usage
- uid: RabbitMQ.Client.Apigen.Apigen.VersionToken
  name: VersionToken()
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_VersionToken
  commentId: M:RabbitMQ.Client.Apigen.Apigen.VersionToken
  fullName: RabbitMQ.Client.Apigen.Apigen.VersionToken()
  nameWithType: Apigen.VersionToken()
- uid: RabbitMQ.Client.Apigen.Apigen.VersionToken*
  name: VersionToken
  href: api/RabbitMQ.Client.Apigen.Apigen.html#RabbitMQ_Client_Apigen_Apigen_VersionToken_
  commentId: Overload:RabbitMQ.Client.Apigen.Apigen.VersionToken
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.Apigen.VersionToken
  nameWithType: Apigen.VersionToken
- uid: RabbitMQ.Client.Apigen.ApigenExtensions
  name: ApigenExtensions
  href: api/RabbitMQ.Client.Apigen.ApigenExtensions.html
  commentId: T:RabbitMQ.Client.Apigen.ApigenExtensions
  fullName: RabbitMQ.Client.Apigen.ApigenExtensions
  nameWithType: ApigenExtensions
- uid: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute*
  name: Attribute
  href: api/RabbitMQ.Client.Apigen.ApigenExtensions.html#RabbitMQ_Client_Apigen_ApigenExtensions_Attribute_
  commentId: Overload:RabbitMQ.Client.Apigen.ApigenExtensions.Attribute
  isSpec: "True"
  fullName: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute
  nameWithType: ApigenExtensions.Attribute
- uid: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute``1(System.Reflection.ICustomAttributeProvider)
  name: Attribute<T>(ICustomAttributeProvider)
  href: api/RabbitMQ.Client.Apigen.ApigenExtensions.html#RabbitMQ_Client_Apigen_ApigenExtensions_Attribute__1_System_Reflection_ICustomAttributeProvider_
  commentId: M:RabbitMQ.Client.Apigen.ApigenExtensions.Attribute``1(System.Reflection.ICustomAttributeProvider)
  name.vb: Attribute(Of T)(ICustomAttributeProvider)
  fullName: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute<T>(System.Reflection.ICustomAttributeProvider)
  fullName.vb: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute(Of T)(System.Reflection.ICustomAttributeProvider)
  nameWithType: ApigenExtensions.Attribute<T>(ICustomAttributeProvider)
  nameWithType.vb: ApigenExtensions.Attribute(Of T)(ICustomAttributeProvider)
- uid: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute``1(System.Reflection.MemberInfo)
  name: Attribute<T>(MemberInfo)
  href: api/RabbitMQ.Client.Apigen.ApigenExtensions.html#RabbitMQ_Client_Apigen_ApigenExtensions_Attribute__1_System_Reflection_MemberInfo_
  commentId: M:RabbitMQ.Client.Apigen.ApigenExtensions.Attribute``1(System.Reflection.MemberInfo)
  name.vb: Attribute(Of T)(MemberInfo)
  fullName: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute<T>(System.Reflection.MemberInfo)
  fullName.vb: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute(Of T)(System.Reflection.MemberInfo)
  nameWithType: ApigenExtensions.Attribute<T>(MemberInfo)
  nameWithType.vb: ApigenExtensions.Attribute(Of T)(MemberInfo)
- uid: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute``1(System.Reflection.ParameterInfo)
  name: Attribute<T>(ParameterInfo)
  href: api/RabbitMQ.Client.Apigen.ApigenExtensions.html#RabbitMQ_Client_Apigen_ApigenExtensions_Attribute__1_System_Reflection_ParameterInfo_
  commentId: M:RabbitMQ.Client.Apigen.ApigenExtensions.Attribute``1(System.Reflection.ParameterInfo)
  name.vb: Attribute(Of T)(ParameterInfo)
  fullName: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute<T>(System.Reflection.ParameterInfo)
  fullName.vb: RabbitMQ.Client.Apigen.ApigenExtensions.Attribute(Of T)(System.Reflection.ParameterInfo)
  nameWithType: ApigenExtensions.Attribute<T>(ParameterInfo)
  nameWithType.vb: ApigenExtensions.Attribute(Of T)(ParameterInfo)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer
  name: AsyncDefaultBasicConsumer
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html
  commentId: T:RabbitMQ.Client.AsyncDefaultBasicConsumer
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer
  nameWithType: AsyncDefaultBasicConsumer
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor
  name: AsyncDefaultBasicConsumer()
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer__ctor
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer()
  nameWithType: AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer()
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  name: AsyncDefaultBasicConsumer(IModel)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer__ctor_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer(RabbitMQ.Client.IModel)
  nameWithType: AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer(IModel)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor*
  name: AsyncDefaultBasicConsumer
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer
  nameWithType: AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerCancelled
  name: ConsumerCancelled
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ConsumerCancelled
  commentId: E:RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerCancelled
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerCancelled
  nameWithType: AsyncDefaultBasicConsumer.ConsumerCancelled
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  name: ConsumerTags
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ConsumerTags
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  nameWithType: AsyncDefaultBasicConsumer.ConsumerTags
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags*
  name: ConsumerTags
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ConsumerTags_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  nameWithType: AsyncDefaultBasicConsumer.ConsumerTags
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancel(System.String)
  name: HandleBasicCancel(String)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancel_System_String_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancel(System.String)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancel(System.String)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancel(String)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancel*
  name: HandleBasicCancel
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancel_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancel
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancel
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOk(System.String)
  name: HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOk(System.String)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOk*
  name: HandleBasicCancelOk
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOk
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOk
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  name: HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOk*
  name: HandleBasicConsumeOk
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOk
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOk
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: AsyncDefaultBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliver
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: AsyncDefaultBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleModelShutdown*
  name: HandleModelShutdown
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleModelShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleModelShutdown
  nameWithType: AsyncDefaultBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  name: IsRunning
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_IsRunning
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  nameWithType: AsyncDefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning*
  name: IsRunning
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_IsRunning_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  nameWithType: AsyncDefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.Model
  name: Model
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_Model
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.Model
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.Model
  nameWithType: AsyncDefaultBasicConsumer.Model
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.Model*
  name: Model
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_Model_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.Model
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.Model
  nameWithType: AsyncDefaultBasicConsumer.Model
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel(System.String[])
  name: OnCancel(String[])
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_OnCancel_System_String___
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel(System.String[])
  name.vb: OnCancel(String())
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel(System.String[])
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel(System.String())
  nameWithType: AsyncDefaultBasicConsumer.OnCancel(String[])
  nameWithType.vb: AsyncDefaultBasicConsumer.OnCancel(String())
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel*
  name: OnCancel
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_OnCancel_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancel
  nameWithType: AsyncDefaultBasicConsumer.OnCancel
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#ConsumerCancelled
  name: IBasicConsumer.ConsumerCancelled
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_ConsumerCancelled
  commentId: E:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#ConsumerCancelled
  name.vb: RabbitMQ.Client.IBasicConsumer.ConsumerCancelled
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.ConsumerCancelled
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.ConsumerCancelled
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.ConsumerCancelled
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancel(System.String)
  name: IBasicConsumer.HandleBasicCancel(String)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicCancel_System_String_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancel(System.String)
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicCancel(String)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancel(System.String)
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicCancel(String)
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancel(String)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancel*
  name: IBasicConsumer.HandleBasicCancel
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicCancel_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancel
  isSpec: "True"
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicCancel
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancel
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicCancel
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancel
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancelOk(System.String)
  name: IBasicConsumer.HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancelOk(System.String)
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk(String)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicCancelOk(String)
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancelOk*
  name: IBasicConsumer.HandleBasicCancelOk
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicCancelOk
  isSpec: "True"
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicCancelOk
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicConsumeOk(System.String)
  name: IBasicConsumer.HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicConsumeOk(System.String)
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk(String)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicConsumeOk(String)
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicConsumeOk*
  name: IBasicConsumer.HandleBasicConsumeOk
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicConsumeOk
  isSpec: "True"
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicConsumeOk
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: IBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicDeliver*
  name: IBasicConsumer.HandleBasicDeliver
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleBasicDeliver
  isSpec: "True"
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleBasicDeliver
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: IBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleModelShutdown*
  name: IBasicConsumer.HandleModelShutdown
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_RabbitMQ_Client_IBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ#Client#IBasicConsumer#HandleModelShutdown
  isSpec: "True"
  name.vb: RabbitMQ.Client.IBasicConsumer.HandleModelShutdown
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleModelShutdown
  nameWithType: AsyncDefaultBasicConsumer.IBasicConsumer.HandleModelShutdown
  nameWithType.vb: AsyncDefaultBasicConsumer.RabbitMQ.Client.IBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ShutdownReason
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  nameWithType: AsyncDefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  nameWithType: AsyncDefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.BasicGetResult
  name: BasicGetResult
  href: api/RabbitMQ.Client.BasicGetResult.html
  commentId: T:RabbitMQ.Client.BasicGetResult
  fullName: RabbitMQ.Client.BasicGetResult
  nameWithType: BasicGetResult
- uid: RabbitMQ.Client.BasicGetResult.#ctor(System.UInt64,System.Boolean,System.String,System.String,System.UInt32,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicGetResult(UInt64, Boolean, String, String, UInt32, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult__ctor_System_UInt64_System_Boolean_System_String_System_String_System_UInt32_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.BasicGetResult.#ctor(System.UInt64,System.Boolean,System.String,System.String,System.UInt32,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: BasicGetResult(UInt64, Boolean, String, String, UInt32, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.BasicGetResult.BasicGetResult(System.UInt64, System.Boolean, System.String, System.String, System.UInt32, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.BasicGetResult.BasicGetResult(System.UInt64, System.Boolean, System.String, System.String, System.UInt32, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: BasicGetResult.BasicGetResult(UInt64, Boolean, String, String, UInt32, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: BasicGetResult.BasicGetResult(UInt64, Boolean, String, String, UInt32, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.BasicGetResult.#ctor*
  name: BasicGetResult
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult__ctor_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.BasicGetResult
  nameWithType: BasicGetResult.BasicGetResult
- uid: RabbitMQ.Client.BasicGetResult.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_BasicProperties
  commentId: P:RabbitMQ.Client.BasicGetResult.BasicProperties
  fullName: RabbitMQ.Client.BasicGetResult.BasicProperties
  nameWithType: BasicGetResult.BasicProperties
- uid: RabbitMQ.Client.BasicGetResult.BasicProperties*
  name: BasicProperties
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_BasicProperties_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.BasicProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.BasicProperties
  nameWithType: BasicGetResult.BasicProperties
- uid: RabbitMQ.Client.BasicGetResult.Body
  name: Body
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Body
  commentId: P:RabbitMQ.Client.BasicGetResult.Body
  fullName: RabbitMQ.Client.BasicGetResult.Body
  nameWithType: BasicGetResult.Body
- uid: RabbitMQ.Client.BasicGetResult.Body*
  name: Body
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Body_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.Body
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.Body
  nameWithType: BasicGetResult.Body
- uid: RabbitMQ.Client.BasicGetResult.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_DeliveryTag
  commentId: P:RabbitMQ.Client.BasicGetResult.DeliveryTag
  fullName: RabbitMQ.Client.BasicGetResult.DeliveryTag
  nameWithType: BasicGetResult.DeliveryTag
- uid: RabbitMQ.Client.BasicGetResult.DeliveryTag*
  name: DeliveryTag
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_DeliveryTag_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.DeliveryTag
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.DeliveryTag
  nameWithType: BasicGetResult.DeliveryTag
- uid: RabbitMQ.Client.BasicGetResult.Exchange
  name: Exchange
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Exchange
  commentId: P:RabbitMQ.Client.BasicGetResult.Exchange
  fullName: RabbitMQ.Client.BasicGetResult.Exchange
  nameWithType: BasicGetResult.Exchange
- uid: RabbitMQ.Client.BasicGetResult.Exchange*
  name: Exchange
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Exchange_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.Exchange
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.Exchange
  nameWithType: BasicGetResult.Exchange
- uid: RabbitMQ.Client.BasicGetResult.MessageCount
  name: MessageCount
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_MessageCount
  commentId: P:RabbitMQ.Client.BasicGetResult.MessageCount
  fullName: RabbitMQ.Client.BasicGetResult.MessageCount
  nameWithType: BasicGetResult.MessageCount
- uid: RabbitMQ.Client.BasicGetResult.MessageCount*
  name: MessageCount
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_MessageCount_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.MessageCount
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.MessageCount
  nameWithType: BasicGetResult.MessageCount
- uid: RabbitMQ.Client.BasicGetResult.Redelivered
  name: Redelivered
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Redelivered
  commentId: P:RabbitMQ.Client.BasicGetResult.Redelivered
  fullName: RabbitMQ.Client.BasicGetResult.Redelivered
  nameWithType: BasicGetResult.Redelivered
- uid: RabbitMQ.Client.BasicGetResult.Redelivered*
  name: Redelivered
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Redelivered_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.Redelivered
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.Redelivered
  nameWithType: BasicGetResult.Redelivered
- uid: RabbitMQ.Client.BasicGetResult.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_RoutingKey
  commentId: P:RabbitMQ.Client.BasicGetResult.RoutingKey
  fullName: RabbitMQ.Client.BasicGetResult.RoutingKey
  nameWithType: BasicGetResult.RoutingKey
- uid: RabbitMQ.Client.BasicGetResult.RoutingKey*
  name: RoutingKey
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_RoutingKey_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.RoutingKey
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicGetResult.RoutingKey
  nameWithType: BasicGetResult.RoutingKey
- uid: RabbitMQ.Client.BasicPublishBatchExtensions
  name: BasicPublishBatchExtensions
  href: api/RabbitMQ.Client.BasicPublishBatchExtensions.html
  commentId: T:RabbitMQ.Client.BasicPublishBatchExtensions
  fullName: RabbitMQ.Client.BasicPublishBatchExtensions
  nameWithType: BasicPublishBatchExtensions
- uid: RabbitMQ.Client.BasicPublishBatchExtensions.Add(RabbitMQ.Client.IBasicPublishBatch,System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: Add(IBasicPublishBatch, String, String, Boolean, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.BasicPublishBatchExtensions.html#RabbitMQ_Client_BasicPublishBatchExtensions_Add_RabbitMQ_Client_IBasicPublishBatch_System_String_System_String_System_Boolean_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.BasicPublishBatchExtensions.Add(RabbitMQ.Client.IBasicPublishBatch,System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: Add(IBasicPublishBatch, String, String, Boolean, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.BasicPublishBatchExtensions.Add(RabbitMQ.Client.IBasicPublishBatch, System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.BasicPublishBatchExtensions.Add(RabbitMQ.Client.IBasicPublishBatch, System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: BasicPublishBatchExtensions.Add(IBasicPublishBatch, String, String, Boolean, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: BasicPublishBatchExtensions.Add(IBasicPublishBatch, String, String, Boolean, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.BasicPublishBatchExtensions.Add*
  name: Add
  href: api/RabbitMQ.Client.BasicPublishBatchExtensions.html#RabbitMQ_Client_BasicPublishBatchExtensions_Add_
  commentId: Overload:RabbitMQ.Client.BasicPublishBatchExtensions.Add
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicPublishBatchExtensions.Add
  nameWithType: BasicPublishBatchExtensions.Add
- uid: RabbitMQ.Client.BinaryTableValue
  name: BinaryTableValue
  href: api/RabbitMQ.Client.BinaryTableValue.html
  commentId: T:RabbitMQ.Client.BinaryTableValue
  fullName: RabbitMQ.Client.BinaryTableValue
  nameWithType: BinaryTableValue
- uid: RabbitMQ.Client.BinaryTableValue.#ctor
  name: BinaryTableValue()
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue__ctor
  commentId: M:RabbitMQ.Client.BinaryTableValue.#ctor
  fullName: RabbitMQ.Client.BinaryTableValue.BinaryTableValue()
  nameWithType: BinaryTableValue.BinaryTableValue()
- uid: RabbitMQ.Client.BinaryTableValue.#ctor(System.Byte[])
  name: BinaryTableValue(Byte[])
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue__ctor_System_Byte___
  commentId: M:RabbitMQ.Client.BinaryTableValue.#ctor(System.Byte[])
  name.vb: BinaryTableValue(Byte())
  fullName: RabbitMQ.Client.BinaryTableValue.BinaryTableValue(System.Byte[])
  fullName.vb: RabbitMQ.Client.BinaryTableValue.BinaryTableValue(System.Byte())
  nameWithType: BinaryTableValue.BinaryTableValue(Byte[])
  nameWithType.vb: BinaryTableValue.BinaryTableValue(Byte())
- uid: RabbitMQ.Client.BinaryTableValue.#ctor*
  name: BinaryTableValue
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue__ctor_
  commentId: Overload:RabbitMQ.Client.BinaryTableValue.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.BinaryTableValue.BinaryTableValue
  nameWithType: BinaryTableValue.BinaryTableValue
- uid: RabbitMQ.Client.BinaryTableValue.Bytes
  name: Bytes
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue_Bytes
  commentId: P:RabbitMQ.Client.BinaryTableValue.Bytes
  fullName: RabbitMQ.Client.BinaryTableValue.Bytes
  nameWithType: BinaryTableValue.Bytes
- uid: RabbitMQ.Client.BinaryTableValue.Bytes*
  name: Bytes
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue_Bytes_
  commentId: Overload:RabbitMQ.Client.BinaryTableValue.Bytes
  isSpec: "True"
  fullName: RabbitMQ.Client.BinaryTableValue.Bytes
  nameWithType: BinaryTableValue.Bytes
- uid: RabbitMQ.Client.ConnectionFactory
  name: ConnectionFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html
  commentId: T:RabbitMQ.Client.ConnectionFactory
  fullName: RabbitMQ.Client.ConnectionFactory
  nameWithType: ConnectionFactory
- uid: RabbitMQ.Client.ConnectionFactory.#ctor
  name: ConnectionFactory()
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory__ctor
  commentId: M:RabbitMQ.Client.ConnectionFactory.#ctor
  fullName: RabbitMQ.Client.ConnectionFactory.ConnectionFactory()
  nameWithType: ConnectionFactory.ConnectionFactory()
- uid: RabbitMQ.Client.ConnectionFactory.#ctor*
  name: ConnectionFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory__ctor_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ConnectionFactory
  nameWithType: ConnectionFactory.ConnectionFactory
- uid: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  name: AmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AmqpUriSslProtocols
  commentId: P:RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  fullName: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  nameWithType: ConnectionFactory.AmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols*
  name: AmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AmqpUriSslProtocols_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  nameWithType: ConnectionFactory.AmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList{System.String})
  name: AuthMechanismFactory(IList<String>)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanismFactory_System_Collections_Generic_IList_System_String__
  commentId: M:RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList{System.String})
  name.vb: AuthMechanismFactory(IList(Of String))
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList<System.String>)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList(Of System.String))
  nameWithType: ConnectionFactory.AuthMechanismFactory(IList<String>)
  nameWithType.vb: ConnectionFactory.AuthMechanismFactory(IList(Of String))
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory*
  name: AuthMechanismFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanismFactory_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory
  nameWithType: ConnectionFactory.AuthMechanismFactory
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  name: AuthMechanisms
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanisms
  commentId: P:RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  nameWithType: ConnectionFactory.AuthMechanisms
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanisms*
  name: AuthMechanisms
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanisms_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  nameWithType: ConnectionFactory.AuthMechanisms
- uid: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  name: AutomaticRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AutomaticRecoveryEnabled
  commentId: P:RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  fullName: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  nameWithType: ConnectionFactory.AutomaticRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled*
  name: AutomaticRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AutomaticRecoveryEnabled_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  nameWithType: ConnectionFactory.AutomaticRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProperties
  commentId: P:RabbitMQ.Client.ConnectionFactory.ClientProperties
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProperties
  nameWithType: ConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.ConnectionFactory.ClientProperties*
  name: ClientProperties
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProperties_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ClientProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProperties
  nameWithType: ConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProvidedName
  commentId: P:RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  nameWithType: ConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.ConnectionFactory.ClientProvidedName*
  name: ClientProvidedName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProvidedName_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  nameWithType: ConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ConsumerDispatchConcurrency
  commentId: P:RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  fullName: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  nameWithType: ConnectionFactory.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency*
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ConsumerDispatchConcurrency_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  nameWithType: ConnectionFactory.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ContinuationTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  nameWithType: ConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout*
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  nameWithType: ConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection
  name: CreateConnection()
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection()
  nameWithType: ConnectionFactory.CreateConnection()
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection(RabbitMQ.Client.IEndpointResolver,System.String)
  name: CreateConnection(IEndpointResolver, String)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_RabbitMQ_Client_IEndpointResolver_System_String_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection(RabbitMQ.Client.IEndpointResolver,System.String)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection(RabbitMQ.Client.IEndpointResolver, System.String)
  nameWithType: ConnectionFactory.CreateConnection(IEndpointResolver, String)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint})
  name: CreateConnection(IList<AmqpTcpEndpoint>)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_System_Collections_Generic_IList_RabbitMQ_Client_AmqpTcpEndpoint__
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint})
  name.vb: CreateConnection(IList(Of AmqpTcpEndpoint))
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList<RabbitMQ.Client.AmqpTcpEndpoint>)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of RabbitMQ.Client.AmqpTcpEndpoint))
  nameWithType: ConnectionFactory.CreateConnection(IList<AmqpTcpEndpoint>)
  nameWithType.vb: ConnectionFactory.CreateConnection(IList(Of AmqpTcpEndpoint))
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint},System.String)
  name: CreateConnection(IList<AmqpTcpEndpoint>, String)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_System_Collections_Generic_IList_RabbitMQ_Client_AmqpTcpEndpoint__System_String_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint},System.String)
  name.vb: CreateConnection(IList(Of AmqpTcpEndpoint), String)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList<RabbitMQ.Client.AmqpTcpEndpoint>, System.String)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of RabbitMQ.Client.AmqpTcpEndpoint), System.String)
  nameWithType: ConnectionFactory.CreateConnection(IList<AmqpTcpEndpoint>, String)
  nameWithType.vb: ConnectionFactory.CreateConnection(IList(Of AmqpTcpEndpoint), String)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String})
  name: CreateConnection(IList<String>)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_System_Collections_Generic_IList_System_String__
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String})
  name.vb: CreateConnection(IList(Of String))
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList<System.String>)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of System.String))
  nameWithType: ConnectionFactory.CreateConnection(IList<String>)
  nameWithType.vb: ConnectionFactory.CreateConnection(IList(Of String))
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String},System.String)
  name: CreateConnection(IList<String>, String)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_System_Collections_Generic_IList_System_String__System_String_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String},System.String)
  name.vb: CreateConnection(IList(Of String), String)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList<System.String>, System.String)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of System.String), System.String)
  nameWithType: ConnectionFactory.CreateConnection(IList<String>, String)
  nameWithType.vb: ConnectionFactory.CreateConnection(IList(Of String), String)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.String)
  name: CreateConnection(String)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_System_String_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnection(System.String)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection(System.String)
  nameWithType: ConnectionFactory.CreateConnection(String)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnection*
  name: CreateConnection
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnection_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.CreateConnection
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnection
  nameWithType: ConnectionFactory.CreateConnection
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  name: DefaultAddressFamily
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAddressFamily
  commentId: P:RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  nameWithType: ConnectionFactory.DefaultAddressFamily
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily*
  name: DefaultAddressFamily
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAddressFamily_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  nameWithType: ConnectionFactory.DefaultAddressFamily
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  name: DefaultAmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAmqpUriSslProtocols
  commentId: P:RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  nameWithType: ConnectionFactory.DefaultAmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols*
  name: DefaultAmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAmqpUriSslProtocols_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  nameWithType: ConnectionFactory.DefaultAmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAuthMechanisms
  name: DefaultAuthMechanisms
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAuthMechanisms
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultAuthMechanisms
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAuthMechanisms
  nameWithType: ConnectionFactory.DefaultAuthMechanisms
- uid: RabbitMQ.Client.ConnectionFactory.DefaultChannelMax
  name: DefaultChannelMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultChannelMax
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultChannelMax
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultChannelMax
  nameWithType: ConnectionFactory.DefaultChannelMax
- uid: RabbitMQ.Client.ConnectionFactory.DefaultConnectionTimeout
  name: DefaultConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultConnectionTimeout
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultConnectionTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultConnectionTimeout
  nameWithType: ConnectionFactory.DefaultConnectionTimeout
- uid: RabbitMQ.Client.ConnectionFactory.DefaultFrameMax
  name: DefaultFrameMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultFrameMax
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultFrameMax
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultFrameMax
  nameWithType: ConnectionFactory.DefaultFrameMax
- uid: RabbitMQ.Client.ConnectionFactory.DefaultHeartbeat
  name: DefaultHeartbeat
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultHeartbeat
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultHeartbeat
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultHeartbeat
  nameWithType: ConnectionFactory.DefaultHeartbeat
- uid: RabbitMQ.Client.ConnectionFactory.DefaultPass
  name: DefaultPass
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultPass
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultPass
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultPass
  nameWithType: ConnectionFactory.DefaultPass
- uid: RabbitMQ.Client.ConnectionFactory.DefaultUser
  name: DefaultUser
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultUser
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultUser
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultUser
  nameWithType: ConnectionFactory.DefaultUser
- uid: RabbitMQ.Client.ConnectionFactory.DefaultVHost
  name: DefaultVHost
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultVHost
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultVHost
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultVHost
  nameWithType: ConnectionFactory.DefaultVHost
- uid: RabbitMQ.Client.ConnectionFactory.DispatchConsumersAsync
  name: DispatchConsumersAsync
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DispatchConsumersAsync
  commentId: P:RabbitMQ.Client.ConnectionFactory.DispatchConsumersAsync
  fullName: RabbitMQ.Client.ConnectionFactory.DispatchConsumersAsync
  nameWithType: ConnectionFactory.DispatchConsumersAsync
- uid: RabbitMQ.Client.ConnectionFactory.DispatchConsumersAsync*
  name: DispatchConsumersAsync
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DispatchConsumersAsync_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.DispatchConsumersAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.DispatchConsumersAsync
  nameWithType: ConnectionFactory.DispatchConsumersAsync
- uid: RabbitMQ.Client.ConnectionFactory.Endpoint
  name: Endpoint
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Endpoint
  commentId: P:RabbitMQ.Client.ConnectionFactory.Endpoint
  fullName: RabbitMQ.Client.ConnectionFactory.Endpoint
  nameWithType: ConnectionFactory.Endpoint
- uid: RabbitMQ.Client.ConnectionFactory.Endpoint*
  name: Endpoint
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Endpoint_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Endpoint
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Endpoint
  nameWithType: ConnectionFactory.Endpoint
- uid: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  name: EndpointResolverFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_EndpointResolverFactory
  commentId: P:RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  fullName: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  nameWithType: ConnectionFactory.EndpointResolverFactory
- uid: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory*
  name: EndpointResolverFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_EndpointResolverFactory_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  nameWithType: ConnectionFactory.EndpointResolverFactory
- uid: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HandshakeContinuationTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  nameWithType: ConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout*
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HandshakeContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  nameWithType: ConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.HostName
  name: HostName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HostName
  commentId: P:RabbitMQ.Client.ConnectionFactory.HostName
  fullName: RabbitMQ.Client.ConnectionFactory.HostName
  nameWithType: ConnectionFactory.HostName
- uid: RabbitMQ.Client.ConnectionFactory.HostName*
  name: HostName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HostName_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.HostName
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.HostName
  nameWithType: ConnectionFactory.HostName
- uid: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  name: NetworkRecoveryInterval
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_NetworkRecoveryInterval
  commentId: P:RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  fullName: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  nameWithType: ConnectionFactory.NetworkRecoveryInterval
- uid: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval*
  name: NetworkRecoveryInterval
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_NetworkRecoveryInterval_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  nameWithType: ConnectionFactory.NetworkRecoveryInterval
- uid: RabbitMQ.Client.ConnectionFactory.Password
  name: Password
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Password
  commentId: P:RabbitMQ.Client.ConnectionFactory.Password
  fullName: RabbitMQ.Client.ConnectionFactory.Password
  nameWithType: ConnectionFactory.Password
- uid: RabbitMQ.Client.ConnectionFactory.Password*
  name: Password
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Password_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Password
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Password
  nameWithType: ConnectionFactory.Password
- uid: RabbitMQ.Client.ConnectionFactory.Port
  name: Port
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Port
  commentId: P:RabbitMQ.Client.ConnectionFactory.Port
  fullName: RabbitMQ.Client.ConnectionFactory.Port
  nameWithType: ConnectionFactory.Port
- uid: RabbitMQ.Client.ConnectionFactory.Port*
  name: Port
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Port_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Port
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Port
  nameWithType: ConnectionFactory.Port
- uid: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedChannelMax
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  nameWithType: ConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax*
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedChannelMax_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  nameWithType: ConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  name: RequestedConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedConnectionTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  nameWithType: ConnectionFactory.RequestedConnectionTimeout
- uid: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout*
  name: RequestedConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedConnectionTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  nameWithType: ConnectionFactory.RequestedConnectionTimeout
- uid: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedFrameMax
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  nameWithType: ConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax*
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedFrameMax_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  nameWithType: ConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedHeartbeat
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  nameWithType: ConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat*
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedHeartbeat_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  nameWithType: ConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  name: SocketReadTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketReadTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  nameWithType: ConnectionFactory.SocketReadTimeout
- uid: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout*
  name: SocketReadTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketReadTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  nameWithType: ConnectionFactory.SocketReadTimeout
- uid: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  name: SocketWriteTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketWriteTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  nameWithType: ConnectionFactory.SocketWriteTimeout
- uid: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout*
  name: SocketWriteTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketWriteTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  nameWithType: ConnectionFactory.SocketWriteTimeout
- uid: RabbitMQ.Client.ConnectionFactory.Ssl
  name: Ssl
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Ssl
  commentId: P:RabbitMQ.Client.ConnectionFactory.Ssl
  fullName: RabbitMQ.Client.ConnectionFactory.Ssl
  nameWithType: ConnectionFactory.Ssl
- uid: RabbitMQ.Client.ConnectionFactory.Ssl*
  name: Ssl
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Ssl_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Ssl
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Ssl
  nameWithType: ConnectionFactory.Ssl
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  name: TopologyRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryEnabled
  commentId: P:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  nameWithType: ConnectionFactory.TopologyRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled*
  name: TopologyRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryEnabled_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  nameWithType: ConnectionFactory.TopologyRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.Uri
  name: Uri
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Uri
  commentId: P:RabbitMQ.Client.ConnectionFactory.Uri
  fullName: RabbitMQ.Client.ConnectionFactory.Uri
  nameWithType: ConnectionFactory.Uri
- uid: RabbitMQ.Client.ConnectionFactory.Uri*
  name: Uri
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Uri_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Uri
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Uri
  nameWithType: ConnectionFactory.Uri
- uid: RabbitMQ.Client.ConnectionFactory.UseBackgroundThreadsForIO
  name: UseBackgroundThreadsForIO
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_UseBackgroundThreadsForIO
  commentId: P:RabbitMQ.Client.ConnectionFactory.UseBackgroundThreadsForIO
  fullName: RabbitMQ.Client.ConnectionFactory.UseBackgroundThreadsForIO
  nameWithType: ConnectionFactory.UseBackgroundThreadsForIO
- uid: RabbitMQ.Client.ConnectionFactory.UseBackgroundThreadsForIO*
  name: UseBackgroundThreadsForIO
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_UseBackgroundThreadsForIO_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.UseBackgroundThreadsForIO
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.UseBackgroundThreadsForIO
  nameWithType: ConnectionFactory.UseBackgroundThreadsForIO
- uid: RabbitMQ.Client.ConnectionFactory.UserName
  name: UserName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_UserName
  commentId: P:RabbitMQ.Client.ConnectionFactory.UserName
  fullName: RabbitMQ.Client.ConnectionFactory.UserName
  nameWithType: ConnectionFactory.UserName
- uid: RabbitMQ.Client.ConnectionFactory.UserName*
  name: UserName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_UserName_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.UserName
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.UserName
  nameWithType: ConnectionFactory.UserName
- uid: RabbitMQ.Client.ConnectionFactory.VirtualHost
  name: VirtualHost
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_VirtualHost
  commentId: P:RabbitMQ.Client.ConnectionFactory.VirtualHost
  fullName: RabbitMQ.Client.ConnectionFactory.VirtualHost
  nameWithType: ConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.ConnectionFactory.VirtualHost*
  name: VirtualHost
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_VirtualHost_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.VirtualHost
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.VirtualHost
  nameWithType: ConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.ConnectionFactoryBase
  name: ConnectionFactoryBase
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html
  commentId: T:RabbitMQ.Client.ConnectionFactoryBase
  fullName: RabbitMQ.Client.ConnectionFactoryBase
  nameWithType: ConnectionFactoryBase
- uid: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory(System.Net.Sockets.AddressFamily)
  name: DefaultSocketFactory(AddressFamily)
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html#RabbitMQ_Client_ConnectionFactoryBase_DefaultSocketFactory_System_Net_Sockets_AddressFamily_
  commentId: M:RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory(System.Net.Sockets.AddressFamily)
  fullName: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory(System.Net.Sockets.AddressFamily)
  nameWithType: ConnectionFactoryBase.DefaultSocketFactory(AddressFamily)
- uid: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory*
  name: DefaultSocketFactory
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html#RabbitMQ_Client_ConnectionFactoryBase_DefaultSocketFactory_
  commentId: Overload:RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory
  nameWithType: ConnectionFactoryBase.DefaultSocketFactory
- uid: RabbitMQ.Client.ConnectionFactoryBase.SocketFactory
  name: SocketFactory
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html#RabbitMQ_Client_ConnectionFactoryBase_SocketFactory
  commentId: F:RabbitMQ.Client.ConnectionFactoryBase.SocketFactory
  fullName: RabbitMQ.Client.ConnectionFactoryBase.SocketFactory
  nameWithType: ConnectionFactoryBase.SocketFactory
- uid: RabbitMQ.Client.Constants
  name: Constants
  href: api/RabbitMQ.Client.Constants.html
  commentId: T:RabbitMQ.Client.Constants
  fullName: RabbitMQ.Client.Constants
  nameWithType: Constants
- uid: RabbitMQ.Client.Constants.AccessRefused
  name: AccessRefused
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_AccessRefused
  commentId: F:RabbitMQ.Client.Constants.AccessRefused
  fullName: RabbitMQ.Client.Constants.AccessRefused
  nameWithType: Constants.AccessRefused
- uid: RabbitMQ.Client.Constants.ChannelError
  name: ChannelError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ChannelError
  commentId: F:RabbitMQ.Client.Constants.ChannelError
  fullName: RabbitMQ.Client.Constants.ChannelError
  nameWithType: Constants.ChannelError
- uid: RabbitMQ.Client.Constants.CommandInvalid
  name: CommandInvalid
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_CommandInvalid
  commentId: F:RabbitMQ.Client.Constants.CommandInvalid
  fullName: RabbitMQ.Client.Constants.CommandInvalid
  nameWithType: Constants.CommandInvalid
- uid: RabbitMQ.Client.Constants.ConnectionForced
  name: ConnectionForced
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ConnectionForced
  commentId: F:RabbitMQ.Client.Constants.ConnectionForced
  fullName: RabbitMQ.Client.Constants.ConnectionForced
  nameWithType: Constants.ConnectionForced
- uid: RabbitMQ.Client.Constants.ContentTooLarge
  name: ContentTooLarge
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ContentTooLarge
  commentId: F:RabbitMQ.Client.Constants.ContentTooLarge
  fullName: RabbitMQ.Client.Constants.ContentTooLarge
  nameWithType: Constants.ContentTooLarge
- uid: RabbitMQ.Client.Constants.FrameBody
  name: FrameBody
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameBody
  commentId: F:RabbitMQ.Client.Constants.FrameBody
  fullName: RabbitMQ.Client.Constants.FrameBody
  nameWithType: Constants.FrameBody
- uid: RabbitMQ.Client.Constants.FrameEnd
  name: FrameEnd
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameEnd
  commentId: F:RabbitMQ.Client.Constants.FrameEnd
  fullName: RabbitMQ.Client.Constants.FrameEnd
  nameWithType: Constants.FrameEnd
- uid: RabbitMQ.Client.Constants.FrameError
  name: FrameError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameError
  commentId: F:RabbitMQ.Client.Constants.FrameError
  fullName: RabbitMQ.Client.Constants.FrameError
  nameWithType: Constants.FrameError
- uid: RabbitMQ.Client.Constants.FrameHeader
  name: FrameHeader
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameHeader
  commentId: F:RabbitMQ.Client.Constants.FrameHeader
  fullName: RabbitMQ.Client.Constants.FrameHeader
  nameWithType: Constants.FrameHeader
- uid: RabbitMQ.Client.Constants.FrameHeartbeat
  name: FrameHeartbeat
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameHeartbeat
  commentId: F:RabbitMQ.Client.Constants.FrameHeartbeat
  fullName: RabbitMQ.Client.Constants.FrameHeartbeat
  nameWithType: Constants.FrameHeartbeat
- uid: RabbitMQ.Client.Constants.FrameMethod
  name: FrameMethod
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameMethod
  commentId: F:RabbitMQ.Client.Constants.FrameMethod
  fullName: RabbitMQ.Client.Constants.FrameMethod
  nameWithType: Constants.FrameMethod
- uid: RabbitMQ.Client.Constants.FrameMinSize
  name: FrameMinSize
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameMinSize
  commentId: F:RabbitMQ.Client.Constants.FrameMinSize
  fullName: RabbitMQ.Client.Constants.FrameMinSize
  nameWithType: Constants.FrameMinSize
- uid: RabbitMQ.Client.Constants.InternalError
  name: InternalError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_InternalError
  commentId: F:RabbitMQ.Client.Constants.InternalError
  fullName: RabbitMQ.Client.Constants.InternalError
  nameWithType: Constants.InternalError
- uid: RabbitMQ.Client.Constants.InvalidPath
  name: InvalidPath
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_InvalidPath
  commentId: F:RabbitMQ.Client.Constants.InvalidPath
  fullName: RabbitMQ.Client.Constants.InvalidPath
  nameWithType: Constants.InvalidPath
- uid: RabbitMQ.Client.Constants.NoConsumers
  name: NoConsumers
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NoConsumers
  commentId: F:RabbitMQ.Client.Constants.NoConsumers
  fullName: RabbitMQ.Client.Constants.NoConsumers
  nameWithType: Constants.NoConsumers
- uid: RabbitMQ.Client.Constants.NotAllowed
  name: NotAllowed
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NotAllowed
  commentId: F:RabbitMQ.Client.Constants.NotAllowed
  fullName: RabbitMQ.Client.Constants.NotAllowed
  nameWithType: Constants.NotAllowed
- uid: RabbitMQ.Client.Constants.NotFound
  name: NotFound
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NotFound
  commentId: F:RabbitMQ.Client.Constants.NotFound
  fullName: RabbitMQ.Client.Constants.NotFound
  nameWithType: Constants.NotFound
- uid: RabbitMQ.Client.Constants.NotImplemented
  name: NotImplemented
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NotImplemented
  commentId: F:RabbitMQ.Client.Constants.NotImplemented
  fullName: RabbitMQ.Client.Constants.NotImplemented
  nameWithType: Constants.NotImplemented
- uid: RabbitMQ.Client.Constants.PreconditionFailed
  name: PreconditionFailed
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_PreconditionFailed
  commentId: F:RabbitMQ.Client.Constants.PreconditionFailed
  fullName: RabbitMQ.Client.Constants.PreconditionFailed
  nameWithType: Constants.PreconditionFailed
- uid: RabbitMQ.Client.Constants.ReplySuccess
  name: ReplySuccess
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ReplySuccess
  commentId: F:RabbitMQ.Client.Constants.ReplySuccess
  fullName: RabbitMQ.Client.Constants.ReplySuccess
  nameWithType: Constants.ReplySuccess
- uid: RabbitMQ.Client.Constants.ResourceError
  name: ResourceError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ResourceError
  commentId: F:RabbitMQ.Client.Constants.ResourceError
  fullName: RabbitMQ.Client.Constants.ResourceError
  nameWithType: Constants.ResourceError
- uid: RabbitMQ.Client.Constants.ResourceLocked
  name: ResourceLocked
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ResourceLocked
  commentId: F:RabbitMQ.Client.Constants.ResourceLocked
  fullName: RabbitMQ.Client.Constants.ResourceLocked
  nameWithType: Constants.ResourceLocked
- uid: RabbitMQ.Client.Constants.SyntaxError
  name: SyntaxError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_SyntaxError
  commentId: F:RabbitMQ.Client.Constants.SyntaxError
  fullName: RabbitMQ.Client.Constants.SyntaxError
  nameWithType: Constants.SyntaxError
- uid: RabbitMQ.Client.Constants.UnexpectedFrame
  name: UnexpectedFrame
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_UnexpectedFrame
  commentId: F:RabbitMQ.Client.Constants.UnexpectedFrame
  fullName: RabbitMQ.Client.Constants.UnexpectedFrame
  nameWithType: Constants.UnexpectedFrame
- uid: RabbitMQ.Client.DefaultBasicConsumer
  name: DefaultBasicConsumer
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html
  commentId: T:RabbitMQ.Client.DefaultBasicConsumer
  fullName: RabbitMQ.Client.DefaultBasicConsumer
  nameWithType: DefaultBasicConsumer
- uid: RabbitMQ.Client.DefaultBasicConsumer.#ctor
  name: DefaultBasicConsumer()
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer__ctor
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.#ctor
  fullName: RabbitMQ.Client.DefaultBasicConsumer.DefaultBasicConsumer()
  nameWithType: DefaultBasicConsumer.DefaultBasicConsumer()
- uid: RabbitMQ.Client.DefaultBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  name: DefaultBasicConsumer(IModel)
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer__ctor_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.DefaultBasicConsumer(RabbitMQ.Client.IModel)
  nameWithType: DefaultBasicConsumer.DefaultBasicConsumer(IModel)
- uid: RabbitMQ.Client.DefaultBasicConsumer.#ctor*
  name: DefaultBasicConsumer
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.DefaultBasicConsumer
  nameWithType: DefaultBasicConsumer.DefaultBasicConsumer
- uid: RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
  name: ConsumerCancelled
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_ConsumerCancelled
  commentId: E:RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
  nameWithType: DefaultBasicConsumer.ConsumerCancelled
- uid: RabbitMQ.Client.DefaultBasicConsumer.ConsumerTags
  name: ConsumerTags
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_ConsumerTags
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.ConsumerTags
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ConsumerTags
  nameWithType: DefaultBasicConsumer.ConsumerTags
- uid: RabbitMQ.Client.DefaultBasicConsumer.ConsumerTags*
  name: ConsumerTags
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_ConsumerTags_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.ConsumerTags
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ConsumerTags
  nameWithType: DefaultBasicConsumer.ConsumerTags
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  name: HandleBasicCancel(String)
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicCancel_System_String_
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  nameWithType: DefaultBasicConsumer.HandleBasicCancel(String)
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel*
  name: HandleBasicCancel
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicCancel_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel
  nameWithType: DefaultBasicConsumer.HandleBasicCancel
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  name: HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: DefaultBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk*
  name: HandleBasicCancelOk
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk
  nameWithType: DefaultBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  name: HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: DefaultBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk*
  name: HandleBasicConsumeOk
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk
  nameWithType: DefaultBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: DefaultBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: DefaultBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver
  nameWithType: DefaultBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: DefaultBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown*
  name: HandleModelShutdown
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown
  nameWithType: DefaultBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  name: IsRunning
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_IsRunning
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  fullName: RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  nameWithType: DefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.DefaultBasicConsumer.IsRunning*
  name: IsRunning
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_IsRunning_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  nameWithType: DefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.DefaultBasicConsumer.Model
  name: Model
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_Model
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.Model
  fullName: RabbitMQ.Client.DefaultBasicConsumer.Model
  nameWithType: DefaultBasicConsumer.Model
- uid: RabbitMQ.Client.DefaultBasicConsumer.Model*
  name: Model
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_Model_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.Model
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.Model
  nameWithType: DefaultBasicConsumer.Model
- uid: RabbitMQ.Client.DefaultBasicConsumer.OnCancel(System.String[])
  name: OnCancel(String[])
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_OnCancel_System_String___
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.OnCancel(System.String[])
  name.vb: OnCancel(String())
  fullName: RabbitMQ.Client.DefaultBasicConsumer.OnCancel(System.String[])
  fullName.vb: RabbitMQ.Client.DefaultBasicConsumer.OnCancel(System.String())
  nameWithType: DefaultBasicConsumer.OnCancel(String[])
  nameWithType.vb: DefaultBasicConsumer.OnCancel(String())
- uid: RabbitMQ.Client.DefaultBasicConsumer.OnCancel*
  name: OnCancel
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_OnCancel_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.OnCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.OnCancel
  nameWithType: DefaultBasicConsumer.OnCancel
- uid: RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_ShutdownReason
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  nameWithType: DefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.DefaultBasicConsumer.html#RabbitMQ_Client_DefaultBasicConsumer_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  nameWithType: DefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.DefaultEndpointResolver
  name: DefaultEndpointResolver
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html
  commentId: T:RabbitMQ.Client.DefaultEndpointResolver
  fullName: RabbitMQ.Client.DefaultEndpointResolver
  nameWithType: DefaultEndpointResolver
- uid: RabbitMQ.Client.DefaultEndpointResolver.#ctor(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint})
  name: DefaultEndpointResolver(IEnumerable<AmqpTcpEndpoint>)
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver__ctor_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__
  commentId: M:RabbitMQ.Client.DefaultEndpointResolver.#ctor(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint})
  name.vb: DefaultEndpointResolver(IEnumerable(Of AmqpTcpEndpoint))
  fullName: RabbitMQ.Client.DefaultEndpointResolver.DefaultEndpointResolver(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>)
  fullName.vb: RabbitMQ.Client.DefaultEndpointResolver.DefaultEndpointResolver(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint))
  nameWithType: DefaultEndpointResolver.DefaultEndpointResolver(IEnumerable<AmqpTcpEndpoint>)
  nameWithType.vb: DefaultEndpointResolver.DefaultEndpointResolver(IEnumerable(Of AmqpTcpEndpoint))
- uid: RabbitMQ.Client.DefaultEndpointResolver.#ctor*
  name: DefaultEndpointResolver
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver__ctor_
  commentId: Overload:RabbitMQ.Client.DefaultEndpointResolver.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultEndpointResolver.DefaultEndpointResolver
  nameWithType: DefaultEndpointResolver.DefaultEndpointResolver
- uid: RabbitMQ.Client.DefaultEndpointResolver.All
  name: All()
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver_All
  commentId: M:RabbitMQ.Client.DefaultEndpointResolver.All
  fullName: RabbitMQ.Client.DefaultEndpointResolver.All()
  nameWithType: DefaultEndpointResolver.All()
- uid: RabbitMQ.Client.DefaultEndpointResolver.All*
  name: All
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver_All_
  commentId: Overload:RabbitMQ.Client.DefaultEndpointResolver.All
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultEndpointResolver.All
  nameWithType: DefaultEndpointResolver.All
- uid: RabbitMQ.Client.EndpointResolverExtensions
  name: EndpointResolverExtensions
  href: api/RabbitMQ.Client.EndpointResolverExtensions.html
  commentId: T:RabbitMQ.Client.EndpointResolverExtensions
  fullName: RabbitMQ.Client.EndpointResolverExtensions
  nameWithType: EndpointResolverExtensions
- uid: RabbitMQ.Client.EndpointResolverExtensions.SelectOne*
  name: SelectOne
  href: api/RabbitMQ.Client.EndpointResolverExtensions.html#RabbitMQ_Client_EndpointResolverExtensions_SelectOne_
  commentId: Overload:RabbitMQ.Client.EndpointResolverExtensions.SelectOne
  isSpec: "True"
  fullName: RabbitMQ.Client.EndpointResolverExtensions.SelectOne
  nameWithType: EndpointResolverExtensions.SelectOne
- uid: RabbitMQ.Client.EndpointResolverExtensions.SelectOne``1(RabbitMQ.Client.IEndpointResolver,System.Func{RabbitMQ.Client.AmqpTcpEndpoint,``0})
  name: SelectOne<T>(IEndpointResolver, Func<AmqpTcpEndpoint, T>)
  href: api/RabbitMQ.Client.EndpointResolverExtensions.html#RabbitMQ_Client_EndpointResolverExtensions_SelectOne__1_RabbitMQ_Client_IEndpointResolver_System_Func_RabbitMQ_Client_AmqpTcpEndpoint___0__
  commentId: M:RabbitMQ.Client.EndpointResolverExtensions.SelectOne``1(RabbitMQ.Client.IEndpointResolver,System.Func{RabbitMQ.Client.AmqpTcpEndpoint,``0})
  name.vb: SelectOne(Of T)(IEndpointResolver, Func(Of AmqpTcpEndpoint, T))
  fullName: RabbitMQ.Client.EndpointResolverExtensions.SelectOne<T>(RabbitMQ.Client.IEndpointResolver, System.Func<RabbitMQ.Client.AmqpTcpEndpoint, T>)
  fullName.vb: RabbitMQ.Client.EndpointResolverExtensions.SelectOne(Of T)(RabbitMQ.Client.IEndpointResolver, System.Func(Of RabbitMQ.Client.AmqpTcpEndpoint, T))
  nameWithType: EndpointResolverExtensions.SelectOne<T>(IEndpointResolver, Func<AmqpTcpEndpoint, T>)
  nameWithType.vb: EndpointResolverExtensions.SelectOne(Of T)(IEndpointResolver, Func(Of AmqpTcpEndpoint, T))
- uid: RabbitMQ.Client.Events
  name: RabbitMQ.Client.Events
  href: api/RabbitMQ.Client.Events.html
  commentId: N:RabbitMQ.Client.Events
  fullName: RabbitMQ.Client.Events
  nameWithType: RabbitMQ.Client.Events
- uid: RabbitMQ.Client.Events.AsyncEventHandler`1
  name: AsyncEventHandler<TEvent>
  href: api/RabbitMQ.Client.Events.AsyncEventHandler-1.html
  commentId: T:RabbitMQ.Client.Events.AsyncEventHandler`1
  name.vb: AsyncEventHandler(Of TEvent)
  fullName: RabbitMQ.Client.Events.AsyncEventHandler<TEvent>
  fullName.vb: RabbitMQ.Client.Events.AsyncEventHandler(Of TEvent)
  nameWithType: AsyncEventHandler<TEvent>
  nameWithType.vb: AsyncEventHandler(Of TEvent)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer
  name: AsyncEventingBasicConsumer
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html
  commentId: T:RabbitMQ.Client.Events.AsyncEventingBasicConsumer
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer
  nameWithType: AsyncEventingBasicConsumer
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  name: AsyncEventingBasicConsumer(IModel)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer__ctor_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.AsyncEventingBasicConsumer(RabbitMQ.Client.IModel)
  nameWithType: AsyncEventingBasicConsumer.AsyncEventingBasicConsumer(IModel)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor*
  name: AsyncEventingBasicConsumer
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.AsyncEventingBasicConsumer
  nameWithType: AsyncEventingBasicConsumer.AsyncEventingBasicConsumer
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicCancelOk(System.String)
  name: HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicCancelOk(System.String)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: AsyncEventingBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicCancelOk*
  name: HandleBasicCancelOk
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicCancelOk
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicCancelOk
  nameWithType: AsyncEventingBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOk(System.String)
  name: HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOk(System.String)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: AsyncEventingBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOk*
  name: HandleBasicConsumeOk
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOk
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOk
  nameWithType: AsyncEventingBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: AsyncEventingBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: AsyncEventingBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliver
  nameWithType: AsyncEventingBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: AsyncEventingBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleModelShutdown*
  name: HandleModelShutdown
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleModelShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleModelShutdown
  nameWithType: AsyncEventingBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Received
  name: Received
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_Received
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Received
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Received
  nameWithType: AsyncEventingBasicConsumer.Received
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Registered
  name: Registered
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_Registered
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Registered
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Registered
  nameWithType: AsyncEventingBasicConsumer.Registered
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Shutdown
  name: Shutdown
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_Shutdown
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Shutdown
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Shutdown
  nameWithType: AsyncEventingBasicConsumer.Shutdown
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Unregistered
  name: Unregistered
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_Unregistered
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Unregistered
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.Unregistered
  nameWithType: AsyncEventingBasicConsumer.Unregistered
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs
  name: BaseExceptionEventArgs
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BaseExceptionEventArgs
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs
  nameWithType: BaseExceptionEventArgs
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor(System.Exception)
  name: BaseExceptionEventArgs(Exception)
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor(System.Exception)
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.BaseExceptionEventArgs(System.Exception)
  nameWithType: BaseExceptionEventArgs.BaseExceptionEventArgs(Exception)
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor*
  name: BaseExceptionEventArgs
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.BaseExceptionEventArgs
  nameWithType: BaseExceptionEventArgs.BaseExceptionEventArgs
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  name: Detail
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_Detail
  commentId: P:RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  nameWithType: BaseExceptionEventArgs.Detail
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail*
  name: Detail
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_Detail_
  commentId: Overload:RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  nameWithType: BaseExceptionEventArgs.Detail
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  name: Exception
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_Exception
  commentId: P:RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  nameWithType: BaseExceptionEventArgs.Exception
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception*
  name: Exception
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_Exception_
  commentId: Overload:RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  nameWithType: BaseExceptionEventArgs.Exception
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: UpdateDetails(IDictionary<String, Object>)
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_UpdateDetails_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails(System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: UpdateDetails(IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails(System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: BaseExceptionEventArgs.UpdateDetails(IDictionary<String, Object>)
  nameWithType.vb: BaseExceptionEventArgs.UpdateDetails(IDictionary(Of String, Object))
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails*
  name: UpdateDetails
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_UpdateDetails_
  commentId: Overload:RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.UpdateDetails
  nameWithType: BaseExceptionEventArgs.UpdateDetails
- uid: RabbitMQ.Client.Events.BasicAckEventArgs
  name: BasicAckEventArgs
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicAckEventArgs
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs
  nameWithType: BasicAckEventArgs
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs_DeliveryTag
  commentId: P:RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  nameWithType: BasicAckEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag*
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs_DeliveryTag_
  commentId: Overload:RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  nameWithType: BasicAckEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  name: Multiple
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs_Multiple
  commentId: P:RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  nameWithType: BasicAckEventArgs.Multiple
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.Multiple*
  name: Multiple
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs_Multiple_
  commentId: Overload:RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  nameWithType: BasicAckEventArgs.Multiple
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs
  name: BasicDeliverEventArgs
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicDeliverEventArgs
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs
  nameWithType: BasicDeliverEventArgs
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor
  name: BasicDeliverEventArgs()
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs__ctor
  commentId: M:RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicDeliverEventArgs()
  nameWithType: BasicDeliverEventArgs.BasicDeliverEventArgs()
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicDeliverEventArgs(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs__ctor_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: BasicDeliverEventArgs(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicDeliverEventArgs(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicDeliverEventArgs(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: BasicDeliverEventArgs.BasicDeliverEventArgs(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: BasicDeliverEventArgs.BasicDeliverEventArgs(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor*
  name: BasicDeliverEventArgs
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicDeliverEventArgs
  nameWithType: BasicDeliverEventArgs.BasicDeliverEventArgs
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_BasicProperties
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  nameWithType: BasicDeliverEventArgs.BasicProperties
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties*
  name: BasicProperties
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_BasicProperties_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  nameWithType: BasicDeliverEventArgs.BasicProperties
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  name: Body
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Body
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  nameWithType: BasicDeliverEventArgs.Body
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Body*
  name: Body
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Body_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  nameWithType: BasicDeliverEventArgs.Body
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  name: ConsumerTag
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_ConsumerTag
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  nameWithType: BasicDeliverEventArgs.ConsumerTag
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag*
  name: ConsumerTag
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_ConsumerTag_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  nameWithType: BasicDeliverEventArgs.ConsumerTag
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_DeliveryTag
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  nameWithType: BasicDeliverEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag*
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_DeliveryTag_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  nameWithType: BasicDeliverEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  name: Exchange
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Exchange
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  nameWithType: BasicDeliverEventArgs.Exchange
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange*
  name: Exchange
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Exchange_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  nameWithType: BasicDeliverEventArgs.Exchange
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  name: Redelivered
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Redelivered
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  nameWithType: BasicDeliverEventArgs.Redelivered
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered*
  name: Redelivered
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Redelivered_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  nameWithType: BasicDeliverEventArgs.Redelivered
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_RoutingKey
  commentId: P:RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  nameWithType: BasicDeliverEventArgs.RoutingKey
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey*
  name: RoutingKey
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_RoutingKey_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  nameWithType: BasicDeliverEventArgs.RoutingKey
- uid: RabbitMQ.Client.Events.BasicNackEventArgs
  name: BasicNackEventArgs
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicNackEventArgs
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs
  nameWithType: BasicNackEventArgs
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_DeliveryTag
  commentId: P:RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  nameWithType: BasicNackEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag*
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_DeliveryTag_
  commentId: Overload:RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  nameWithType: BasicNackEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  name: Multiple
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_Multiple
  commentId: P:RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  nameWithType: BasicNackEventArgs.Multiple
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.Multiple*
  name: Multiple
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_Multiple_
  commentId: Overload:RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  nameWithType: BasicNackEventArgs.Multiple
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  name: Requeue
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_Requeue
  commentId: P:RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  nameWithType: BasicNackEventArgs.Requeue
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.Requeue*
  name: Requeue
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_Requeue_
  commentId: Overload:RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  nameWithType: BasicNackEventArgs.Requeue
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs
  name: BasicReturnEventArgs
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicReturnEventArgs
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs
  nameWithType: BasicReturnEventArgs
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_BasicProperties
  commentId: P:RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  nameWithType: BasicReturnEventArgs.BasicProperties
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties*
  name: BasicProperties
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_BasicProperties_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  nameWithType: BasicReturnEventArgs.BasicProperties
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  name: Body
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_Body
  commentId: P:RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  nameWithType: BasicReturnEventArgs.Body
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.Body*
  name: Body
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_Body_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  nameWithType: BasicReturnEventArgs.Body
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  name: Exchange
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_Exchange
  commentId: P:RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  nameWithType: BasicReturnEventArgs.Exchange
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange*
  name: Exchange
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_Exchange_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  nameWithType: BasicReturnEventArgs.Exchange
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_ReplyCode
  commentId: P:RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  nameWithType: BasicReturnEventArgs.ReplyCode
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  nameWithType: BasicReturnEventArgs.ReplyCode
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  name: ReplyText
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_ReplyText
  commentId: P:RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  nameWithType: BasicReturnEventArgs.ReplyText
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText*
  name: ReplyText
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_ReplyText_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  nameWithType: BasicReturnEventArgs.ReplyText
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_RoutingKey
  commentId: P:RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  nameWithType: BasicReturnEventArgs.RoutingKey
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey*
  name: RoutingKey
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_RoutingKey_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  nameWithType: BasicReturnEventArgs.RoutingKey
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs
  name: CallbackExceptionEventArgs
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html
  commentId: T:RabbitMQ.Client.Events.CallbackExceptionEventArgs
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs
  nameWithType: CallbackExceptionEventArgs
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor(System.Exception)
  name: CallbackExceptionEventArgs(Exception)
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor(System.Exception)
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.CallbackExceptionEventArgs(System.Exception)
  nameWithType: CallbackExceptionEventArgs.CallbackExceptionEventArgs(Exception)
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor*
  name: CallbackExceptionEventArgs
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.CallbackExceptionEventArgs
  nameWithType: CallbackExceptionEventArgs.CallbackExceptionEventArgs
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: Build(Exception, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs_Build_System_Exception_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: Build(Exception, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: CallbackExceptionEventArgs.Build(Exception, IDictionary<String, Object>)
  nameWithType.vb: CallbackExceptionEventArgs.Build(Exception, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.String)
  name: Build(Exception, String)
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs_Build_System_Exception_System_String_
  commentId: M:RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.String)
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, System.String)
  nameWithType: CallbackExceptionEventArgs.Build(Exception, String)
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build*
  name: Build
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs_Build_
  commentId: Overload:RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build
  nameWithType: CallbackExceptionEventArgs.Build
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  name: ConnectionBlockedEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  nameWithType: ConnectionBlockedEventArgs
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor(System.String)
  name: ConnectionBlockedEventArgs(String)
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs__ctor_System_String_
  commentId: M:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor(System.String)
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.ConnectionBlockedEventArgs(System.String)
  nameWithType: ConnectionBlockedEventArgs.ConnectionBlockedEventArgs(String)
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor*
  name: ConnectionBlockedEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.ConnectionBlockedEventArgs
  nameWithType: ConnectionBlockedEventArgs.ConnectionBlockedEventArgs
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  name: Reason
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs_Reason
  commentId: P:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  nameWithType: ConnectionBlockedEventArgs.Reason
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason*
  name: Reason
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs_Reason_
  commentId: Overload:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  nameWithType: ConnectionBlockedEventArgs.Reason
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs
  name: ConnectionRecoveryErrorEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs
  nameWithType: ConnectionRecoveryErrorEventArgs
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor(System.Exception)
  name: ConnectionRecoveryErrorEventArgs(Exception)
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor(System.Exception)
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs(System.Exception)
  nameWithType: ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs(Exception)
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor*
  name: ConnectionRecoveryErrorEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs
  nameWithType: ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  name: Exception
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs_Exception
  commentId: P:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  nameWithType: ConnectionRecoveryErrorEventArgs.Exception
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception*
  name: Exception
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs_Exception_
  commentId: Overload:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  nameWithType: ConnectionRecoveryErrorEventArgs.Exception
- uid: RabbitMQ.Client.Events.ConsumerEventArgs
  name: ConsumerEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConsumerEventArgs
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs
  nameWithType: ConsumerEventArgs
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.#ctor(System.String[])
  name: ConsumerEventArgs(String[])
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs__ctor_System_String___
  commentId: M:RabbitMQ.Client.Events.ConsumerEventArgs.#ctor(System.String[])
  name.vb: ConsumerEventArgs(String())
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerEventArgs(System.String[])
  fullName.vb: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerEventArgs(System.String())
  nameWithType: ConsumerEventArgs.ConsumerEventArgs(String[])
  nameWithType.vb: ConsumerEventArgs.ConsumerEventArgs(String())
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.#ctor*
  name: ConsumerEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerEventArgs
  nameWithType: ConsumerEventArgs.ConsumerEventArgs
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  name: ConsumerTags
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs_ConsumerTags
  commentId: P:RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  nameWithType: ConsumerEventArgs.ConsumerTags
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags*
  name: ConsumerTags
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs_ConsumerTags_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  nameWithType: ConsumerEventArgs.ConsumerTags
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs
  name: ConsumerTagChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor(System.String,System.String)
  name: ConsumerTagChangedAfterRecoveryEventArgs(String, String)
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs__ctor_System_String_System_String_
  commentId: M:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor(System.String,System.String)
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs(System.String, System.String)
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs(String, String)
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor*
  name: ConsumerTagChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  name: TagAfter
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs_TagAfter
  commentId: P:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter*
  name: TagAfter
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs_TagAfter_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  name: TagBefore
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs_TagBefore
  commentId: P:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore*
  name: TagBefore
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs_TagBefore_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
- uid: RabbitMQ.Client.Events.EventingBasicConsumer
  name: EventingBasicConsumer
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html
  commentId: T:RabbitMQ.Client.Events.EventingBasicConsumer
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer
  nameWithType: EventingBasicConsumer
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  name: EventingBasicConsumer(IModel)
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer__ctor_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.Events.EventingBasicConsumer.#ctor(RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.EventingBasicConsumer(RabbitMQ.Client.IModel)
  nameWithType: EventingBasicConsumer.EventingBasicConsumer(IModel)
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.#ctor*
  name: EventingBasicConsumer
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Events.EventingBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.EventingBasicConsumer
  nameWithType: EventingBasicConsumer.EventingBasicConsumer
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicCancelOk(System.String)
  name: HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicCancelOk(System.String)
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: EventingBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicCancelOk*
  name: HandleBasicCancelOk
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicCancelOk
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicCancelOk
  nameWithType: EventingBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicConsumeOk(System.String)
  name: HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicConsumeOk(System.String)
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: EventingBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicConsumeOk*
  name: HandleBasicConsumeOk
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicConsumeOk
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicConsumeOk
  nameWithType: EventingBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: EventingBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: EventingBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleBasicDeliver
  nameWithType: EventingBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Events.EventingBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: EventingBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.HandleModelShutdown*
  name: HandleModelShutdown
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.Events.EventingBasicConsumer.HandleModelShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.HandleModelShutdown
  nameWithType: EventingBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.Received
  name: Received
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_Received
  commentId: E:RabbitMQ.Client.Events.EventingBasicConsumer.Received
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.Received
  nameWithType: EventingBasicConsumer.Received
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.Registered
  name: Registered
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_Registered
  commentId: E:RabbitMQ.Client.Events.EventingBasicConsumer.Registered
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.Registered
  nameWithType: EventingBasicConsumer.Registered
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.Shutdown
  name: Shutdown
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_Shutdown
  commentId: E:RabbitMQ.Client.Events.EventingBasicConsumer.Shutdown
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.Shutdown
  nameWithType: EventingBasicConsumer.Shutdown
- uid: RabbitMQ.Client.Events.EventingBasicConsumer.Unregistered
  name: Unregistered
  href: api/RabbitMQ.Client.Events.EventingBasicConsumer.html#RabbitMQ_Client_Events_EventingBasicConsumer_Unregistered
  commentId: E:RabbitMQ.Client.Events.EventingBasicConsumer.Unregistered
  fullName: RabbitMQ.Client.Events.EventingBasicConsumer.Unregistered
  nameWithType: EventingBasicConsumer.Unregistered
- uid: RabbitMQ.Client.Events.FlowControlEventArgs
  name: FlowControlEventArgs
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html
  commentId: T:RabbitMQ.Client.Events.FlowControlEventArgs
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs
  nameWithType: FlowControlEventArgs
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.#ctor(System.Boolean)
  name: FlowControlEventArgs(Boolean)
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs__ctor_System_Boolean_
  commentId: M:RabbitMQ.Client.Events.FlowControlEventArgs.#ctor(System.Boolean)
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.FlowControlEventArgs(System.Boolean)
  nameWithType: FlowControlEventArgs.FlowControlEventArgs(Boolean)
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.#ctor*
  name: FlowControlEventArgs
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.FlowControlEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.FlowControlEventArgs
  nameWithType: FlowControlEventArgs.FlowControlEventArgs
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.Active
  name: Active
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs_Active
  commentId: P:RabbitMQ.Client.Events.FlowControlEventArgs.Active
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.Active
  nameWithType: FlowControlEventArgs.Active
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.Active*
  name: Active
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs_Active_
  commentId: Overload:RabbitMQ.Client.Events.FlowControlEventArgs.Active
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.Active
  nameWithType: FlowControlEventArgs.Active
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs
  name: QueueNameChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html
  commentId: T:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs
  nameWithType: QueueNameChangedAfterRecoveryEventArgs
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor(System.String,System.String)
  name: QueueNameChangedAfterRecoveryEventArgs(String, String)
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs__ctor_System_String_System_String_
  commentId: M:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor(System.String,System.String)
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs(System.String, System.String)
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs(String, String)
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor*
  name: QueueNameChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  name: NameAfter
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs_NameAfter
  commentId: P:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.NameAfter
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter*
  name: NameAfter
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs_NameAfter_
  commentId: Overload:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.NameAfter
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  name: NameBefore
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs_NameBefore
  commentId: P:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.NameBefore
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore*
  name: NameBefore
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs_NameBefore_
  commentId: Overload:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.NameBefore
- uid: RabbitMQ.Client.Events.RecoveryExceptionEventArgs
  name: RecoveryExceptionEventArgs
  href: api/RabbitMQ.Client.Events.RecoveryExceptionEventArgs.html
  commentId: T:RabbitMQ.Client.Events.RecoveryExceptionEventArgs
  fullName: RabbitMQ.Client.Events.RecoveryExceptionEventArgs
  nameWithType: RecoveryExceptionEventArgs
- uid: RabbitMQ.Client.Events.RecoveryExceptionEventArgs.#ctor(System.Exception)
  name: RecoveryExceptionEventArgs(Exception)
  href: api/RabbitMQ.Client.Events.RecoveryExceptionEventArgs.html#RabbitMQ_Client_Events_RecoveryExceptionEventArgs__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Events.RecoveryExceptionEventArgs.#ctor(System.Exception)
  fullName: RabbitMQ.Client.Events.RecoveryExceptionEventArgs.RecoveryExceptionEventArgs(System.Exception)
  nameWithType: RecoveryExceptionEventArgs.RecoveryExceptionEventArgs(Exception)
- uid: RabbitMQ.Client.Events.RecoveryExceptionEventArgs.#ctor*
  name: RecoveryExceptionEventArgs
  href: api/RabbitMQ.Client.Events.RecoveryExceptionEventArgs.html#RabbitMQ_Client_Events_RecoveryExceptionEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.RecoveryExceptionEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.RecoveryExceptionEventArgs.RecoveryExceptionEventArgs
  nameWithType: RecoveryExceptionEventArgs.RecoveryExceptionEventArgs
- uid: RabbitMQ.Client.Exceptions
  name: RabbitMQ.Client.Exceptions
  href: api/RabbitMQ.Client.Exceptions.html
  commentId: N:RabbitMQ.Client.Exceptions
  fullName: RabbitMQ.Client.Exceptions
  nameWithType: RabbitMQ.Client.Exceptions
- uid: RabbitMQ.Client.Exceptions.AlreadyClosedException
  name: AlreadyClosedException
  href: api/RabbitMQ.Client.Exceptions.AlreadyClosedException.html
  commentId: T:RabbitMQ.Client.Exceptions.AlreadyClosedException
  fullName: RabbitMQ.Client.Exceptions.AlreadyClosedException
  nameWithType: AlreadyClosedException
- uid: RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor(RabbitMQ.Client.ShutdownEventArgs)
  name: AlreadyClosedException(ShutdownEventArgs)
  href: api/RabbitMQ.Client.Exceptions.AlreadyClosedException.html#RabbitMQ_Client_Exceptions_AlreadyClosedException__ctor_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor(RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.Exceptions.AlreadyClosedException.AlreadyClosedException(RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: AlreadyClosedException.AlreadyClosedException(ShutdownEventArgs)
- uid: RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor*
  name: AlreadyClosedException
  href: api/RabbitMQ.Client.Exceptions.AlreadyClosedException.html#RabbitMQ_Client_Exceptions_AlreadyClosedException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.AlreadyClosedException.AlreadyClosedException
  nameWithType: AlreadyClosedException.AlreadyClosedException
- uid: RabbitMQ.Client.Exceptions.AuthenticationFailureException
  name: AuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.AuthenticationFailureException.html
  commentId: T:RabbitMQ.Client.Exceptions.AuthenticationFailureException
  fullName: RabbitMQ.Client.Exceptions.AuthenticationFailureException
  nameWithType: AuthenticationFailureException
- uid: RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor(System.String)
  name: AuthenticationFailureException(String)
  href: api/RabbitMQ.Client.Exceptions.AuthenticationFailureException.html#RabbitMQ_Client_Exceptions_AuthenticationFailureException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.AuthenticationFailureException.AuthenticationFailureException(System.String)
  nameWithType: AuthenticationFailureException.AuthenticationFailureException(String)
- uid: RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor*
  name: AuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.AuthenticationFailureException.html#RabbitMQ_Client_Exceptions_AuthenticationFailureException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.AuthenticationFailureException.AuthenticationFailureException
  nameWithType: AuthenticationFailureException.AuthenticationFailureException
- uid: RabbitMQ.Client.Exceptions.BrokerUnreachableException
  name: BrokerUnreachableException
  href: api/RabbitMQ.Client.Exceptions.BrokerUnreachableException.html
  commentId: T:RabbitMQ.Client.Exceptions.BrokerUnreachableException
  fullName: RabbitMQ.Client.Exceptions.BrokerUnreachableException
  nameWithType: BrokerUnreachableException
- uid: RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor(System.Exception)
  name: BrokerUnreachableException(Exception)
  href: api/RabbitMQ.Client.Exceptions.BrokerUnreachableException.html#RabbitMQ_Client_Exceptions_BrokerUnreachableException__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor(System.Exception)
  fullName: RabbitMQ.Client.Exceptions.BrokerUnreachableException.BrokerUnreachableException(System.Exception)
  nameWithType: BrokerUnreachableException.BrokerUnreachableException(Exception)
- uid: RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor*
  name: BrokerUnreachableException
  href: api/RabbitMQ.Client.Exceptions.BrokerUnreachableException.html#RabbitMQ_Client_Exceptions_BrokerUnreachableException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.BrokerUnreachableException.BrokerUnreachableException
  nameWithType: BrokerUnreachableException.BrokerUnreachableException
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException
  name: ChannelAllocationException
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html
  commentId: T:RabbitMQ.Client.Exceptions.ChannelAllocationException
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException
  nameWithType: ChannelAllocationException
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor
  name: ChannelAllocationException()
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.ChannelAllocationException()
  nameWithType: ChannelAllocationException.ChannelAllocationException()
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor(System.Int32)
  name: ChannelAllocationException(Int32)
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException__ctor_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor(System.Int32)
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.ChannelAllocationException(System.Int32)
  nameWithType: ChannelAllocationException.ChannelAllocationException(Int32)
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor*
  name: ChannelAllocationException
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.ChannelAllocationException
  nameWithType: ChannelAllocationException.ChannelAllocationException
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException_Channel
  commentId: P:RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  nameWithType: ChannelAllocationException.Channel
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel*
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException_Channel_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  nameWithType: ChannelAllocationException.Channel
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException
  name: ChannelErrorException
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html
  commentId: T:RabbitMQ.Client.Exceptions.ChannelErrorException
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException
  nameWithType: ChannelErrorException
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException.#ctor(System.Int32)
  name: ChannelErrorException(Int32)
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html#RabbitMQ_Client_Exceptions_ChannelErrorException__ctor_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.ChannelErrorException.#ctor(System.Int32)
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException.ChannelErrorException(System.Int32)
  nameWithType: ChannelErrorException.ChannelErrorException(Int32)
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException.#ctor*
  name: ChannelErrorException
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html#RabbitMQ_Client_Exceptions_ChannelErrorException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelErrorException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException.ChannelErrorException
  nameWithType: ChannelErrorException.ChannelErrorException
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException.Channel
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html#RabbitMQ_Client_Exceptions_ChannelErrorException_Channel
  commentId: P:RabbitMQ.Client.Exceptions.ChannelErrorException.Channel
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException.Channel
  nameWithType: ChannelErrorException.Channel
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException.Channel*
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html#RabbitMQ_Client_Exceptions_ChannelErrorException_Channel_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelErrorException.Channel
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException.Channel
  nameWithType: ChannelErrorException.Channel
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html#RabbitMQ_Client_Exceptions_ChannelErrorException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.ChannelErrorException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException.ReplyCode
  nameWithType: ChannelErrorException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.ChannelErrorException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.ChannelErrorException.html#RabbitMQ_Client_Exceptions_ChannelErrorException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelErrorException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ChannelErrorException.ReplyCode
  nameWithType: ChannelErrorException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.ConnectFailureException
  name: ConnectFailureException
  href: api/RabbitMQ.Client.Exceptions.ConnectFailureException.html
  commentId: T:RabbitMQ.Client.Exceptions.ConnectFailureException
  fullName: RabbitMQ.Client.Exceptions.ConnectFailureException
  nameWithType: ConnectFailureException
- uid: RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor(System.String,System.Exception)
  name: ConnectFailureException(String, Exception)
  href: api/RabbitMQ.Client.Exceptions.ConnectFailureException.html#RabbitMQ_Client_Exceptions_ConnectFailureException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.Exceptions.ConnectFailureException.ConnectFailureException(System.String, System.Exception)
  nameWithType: ConnectFailureException.ConnectFailureException(String, Exception)
- uid: RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor*
  name: ConnectFailureException
  href: api/RabbitMQ.Client.Exceptions.ConnectFailureException.html#RabbitMQ_Client_Exceptions_ConnectFailureException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ConnectFailureException.ConnectFailureException
  nameWithType: ConnectFailureException.ConnectFailureException
- uid: RabbitMQ.Client.Exceptions.HardProtocolException
  name: HardProtocolException
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html
  commentId: T:RabbitMQ.Client.Exceptions.HardProtocolException
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException
  nameWithType: HardProtocolException
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.#ctor(System.String)
  name: HardProtocolException(String)
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.HardProtocolException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.HardProtocolException(System.String)
  nameWithType: HardProtocolException.HardProtocolException(String)
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.#ctor*
  name: HardProtocolException
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.HardProtocolException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.HardProtocolException
  nameWithType: HardProtocolException.HardProtocolException
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException
  name: MalformedFrameException
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html
  commentId: T:RabbitMQ.Client.Exceptions.MalformedFrameException
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException
  nameWithType: MalformedFrameException
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor(System.String)
  name: MalformedFrameException(String)
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.MalformedFrameException(System.String)
  nameWithType: MalformedFrameException.MalformedFrameException(String)
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor*
  name: MalformedFrameException
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.MalformedFrameException
  nameWithType: MalformedFrameException.MalformedFrameException
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  nameWithType: MalformedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  nameWithType: MalformedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException
  name: OperationInterruptedException
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html
  commentId: T:RabbitMQ.Client.Exceptions.OperationInterruptedException
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException
  nameWithType: OperationInterruptedException
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor
  name: OperationInterruptedException()
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException()
  nameWithType: OperationInterruptedException.OperationInterruptedException()
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.ShutdownEventArgs)
  name: OperationInterruptedException(ShutdownEventArgs)
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException(RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: OperationInterruptedException.OperationInterruptedException(ShutdownEventArgs)
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.ShutdownEventArgs,System.String)
  name: OperationInterruptedException(ShutdownEventArgs, String)
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_RabbitMQ_Client_ShutdownEventArgs_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.ShutdownEventArgs,System.String)
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException(RabbitMQ.Client.ShutdownEventArgs, System.String)
  nameWithType: OperationInterruptedException.OperationInterruptedException(ShutdownEventArgs, String)
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(System.String)
  name: OperationInterruptedException(String)
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException(System.String)
  nameWithType: OperationInterruptedException.OperationInterruptedException(String)
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(System.String,System.Exception)
  name: OperationInterruptedException(String, Exception)
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException(System.String, System.Exception)
  nameWithType: OperationInterruptedException.OperationInterruptedException(String, Exception)
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor*
  name: OperationInterruptedException
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException
  nameWithType: OperationInterruptedException.OperationInterruptedException
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException_ShutdownReason
  commentId: P:RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  nameWithType: OperationInterruptedException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  nameWithType: OperationInterruptedException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException
  name: PacketNotRecognizedException
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html
  commentId: T:RabbitMQ.Client.Exceptions.PacketNotRecognizedException
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException
  nameWithType: PacketNotRecognizedException
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: PacketNotRecognizedException(Int32, Int32, Int32, Int32)
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.PacketNotRecognizedException(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: PacketNotRecognizedException.PacketNotRecognizedException(Int32, Int32, Int32, Int32)
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor*
  name: PacketNotRecognizedException
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.PacketNotRecognizedException
  nameWithType: PacketNotRecognizedException.PacketNotRecognizedException
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMajor
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  nameWithType: PacketNotRecognizedException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor*
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMajor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  nameWithType: PacketNotRecognizedException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMinor
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  nameWithType: PacketNotRecognizedException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor*
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMinor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  nameWithType: PacketNotRecognizedException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  name: TransportHigh
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportHigh
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  nameWithType: PacketNotRecognizedException.TransportHigh
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh*
  name: TransportHigh
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportHigh_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  nameWithType: PacketNotRecognizedException.TransportHigh
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  name: TransportLow
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportLow
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  nameWithType: PacketNotRecognizedException.TransportLow
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow*
  name: TransportLow
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportLow_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  nameWithType: PacketNotRecognizedException.TransportLow
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException
  name: PossibleAuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html
  commentId: T:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException
  nameWithType: PossibleAuthenticationFailureException
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String)
  name: PossibleAuthenticationFailureException(String)
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html#RabbitMQ_Client_Exceptions_PossibleAuthenticationFailureException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(System.String)
  nameWithType: PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(String)
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String,System.Exception)
  name: PossibleAuthenticationFailureException(String, Exception)
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html#RabbitMQ_Client_Exceptions_PossibleAuthenticationFailureException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(System.String, System.Exception)
  nameWithType: PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(String, Exception)
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor*
  name: PossibleAuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html#RabbitMQ_Client_Exceptions_PossibleAuthenticationFailureException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.PossibleAuthenticationFailureException
  nameWithType: PossibleAuthenticationFailureException.PossibleAuthenticationFailureException
- uid: RabbitMQ.Client.Exceptions.ProtocolException
  name: ProtocolException
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html
  commentId: T:RabbitMQ.Client.Exceptions.ProtocolException
  fullName: RabbitMQ.Client.Exceptions.ProtocolException
  nameWithType: ProtocolException
- uid: RabbitMQ.Client.Exceptions.ProtocolException.#ctor(System.String)
  name: ProtocolException(String)
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ProtocolException(System.String)
  nameWithType: ProtocolException.ProtocolException(String)
- uid: RabbitMQ.Client.Exceptions.ProtocolException.#ctor*
  name: ProtocolException
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ProtocolException
  nameWithType: ProtocolException.ProtocolException
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  nameWithType: ProtocolException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  nameWithType: ProtocolException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ShutdownReason
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  nameWithType: ProtocolException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  nameWithType: ProtocolException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException
  name: ProtocolVersionMismatchException
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html
  commentId: T:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException
  nameWithType: ProtocolVersionMismatchException
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: ProtocolVersionMismatchException(Int32, Int32, Int32, Int32)
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ProtocolVersionMismatchException(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: ProtocolVersionMismatchException.ProtocolVersionMismatchException(Int32, Int32, Int32, Int32)
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor*
  name: ProtocolVersionMismatchException
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ProtocolVersionMismatchException
  nameWithType: ProtocolVersionMismatchException.ProtocolVersionMismatchException
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  name: ClientMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMajor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  nameWithType: ProtocolVersionMismatchException.ClientMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor*
  name: ClientMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMajor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  nameWithType: ProtocolVersionMismatchException.ClientMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  name: ClientMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMinor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  nameWithType: ProtocolVersionMismatchException.ClientMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor*
  name: ClientMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMinor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  nameWithType: ProtocolVersionMismatchException.ClientMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMajor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  nameWithType: ProtocolVersionMismatchException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor*
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMajor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  nameWithType: ProtocolVersionMismatchException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMinor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  nameWithType: ProtocolVersionMismatchException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor*
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMinor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  nameWithType: ProtocolVersionMismatchException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException
  name: ProtocolViolationException
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html
  commentId: T:RabbitMQ.Client.Exceptions.ProtocolViolationException
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException
  nameWithType: ProtocolViolationException
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor
  name: ProtocolViolationException()
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException()
  nameWithType: ProtocolViolationException.ProtocolViolationException()
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String)
  name: ProtocolViolationException(String)
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException(System.String)
  nameWithType: ProtocolViolationException.ProtocolViolationException(String)
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String,System.Exception)
  name: ProtocolViolationException(String, Exception)
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException(System.String, System.Exception)
  nameWithType: ProtocolViolationException.ProtocolViolationException(String, Exception)
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor*
  name: ProtocolViolationException
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException
  nameWithType: ProtocolViolationException.ProtocolViolationException
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException
  name: RabbitMQClientException
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html
  commentId: T:RabbitMQ.Client.Exceptions.RabbitMQClientException
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException
  nameWithType: RabbitMQClientException
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor
  name: RabbitMQClientException()
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException()
  nameWithType: RabbitMQClientException.RabbitMQClientException()
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String)
  name: RabbitMQClientException(String)
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException(System.String)
  nameWithType: RabbitMQClientException.RabbitMQClientException(String)
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String,System.Exception)
  name: RabbitMQClientException(String, Exception)
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException(System.String, System.Exception)
  nameWithType: RabbitMQClientException.RabbitMQClientException(String, Exception)
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor*
  name: RabbitMQClientException
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException
  nameWithType: RabbitMQClientException.RabbitMQClientException
- uid: RabbitMQ.Client.Exceptions.SoftProtocolException
  name: SoftProtocolException
  href: api/RabbitMQ.Client.Exceptions.SoftProtocolException.html
  commentId: T:RabbitMQ.Client.Exceptions.SoftProtocolException
  fullName: RabbitMQ.Client.Exceptions.SoftProtocolException
  nameWithType: SoftProtocolException
- uid: RabbitMQ.Client.Exceptions.SoftProtocolException.#ctor(System.Int32,System.String)
  name: SoftProtocolException(Int32, String)
  href: api/RabbitMQ.Client.Exceptions.SoftProtocolException.html#RabbitMQ_Client_Exceptions_SoftProtocolException__ctor_System_Int32_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.SoftProtocolException.#ctor(System.Int32,System.String)
  fullName: RabbitMQ.Client.Exceptions.SoftProtocolException.SoftProtocolException(System.Int32, System.String)
  nameWithType: SoftProtocolException.SoftProtocolException(Int32, String)
- uid: RabbitMQ.Client.Exceptions.SoftProtocolException.#ctor*
  name: SoftProtocolException
  href: api/RabbitMQ.Client.Exceptions.SoftProtocolException.html#RabbitMQ_Client_Exceptions_SoftProtocolException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.SoftProtocolException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.SoftProtocolException.SoftProtocolException
  nameWithType: SoftProtocolException.SoftProtocolException
- uid: RabbitMQ.Client.Exceptions.SoftProtocolException.Channel
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.SoftProtocolException.html#RabbitMQ_Client_Exceptions_SoftProtocolException_Channel
  commentId: P:RabbitMQ.Client.Exceptions.SoftProtocolException.Channel
  fullName: RabbitMQ.Client.Exceptions.SoftProtocolException.Channel
  nameWithType: SoftProtocolException.Channel
- uid: RabbitMQ.Client.Exceptions.SoftProtocolException.Channel*
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.SoftProtocolException.html#RabbitMQ_Client_Exceptions_SoftProtocolException_Channel_
  commentId: Overload:RabbitMQ.Client.Exceptions.SoftProtocolException.Channel
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.SoftProtocolException.Channel
  nameWithType: SoftProtocolException.Channel
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException
  name: SyntaxErrorException
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html
  commentId: T:RabbitMQ.Client.Exceptions.SyntaxErrorException
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException
  nameWithType: SyntaxErrorException
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor(System.String)
  name: SyntaxErrorException(String)
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.SyntaxErrorException(System.String)
  nameWithType: SyntaxErrorException.SyntaxErrorException(String)
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor*
  name: SyntaxErrorException
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.SyntaxErrorException
  nameWithType: SyntaxErrorException.SyntaxErrorException
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  nameWithType: SyntaxErrorException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  nameWithType: SyntaxErrorException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.TopologyRecoveryException
  name: TopologyRecoveryException
  href: api/RabbitMQ.Client.Exceptions.TopologyRecoveryException.html
  commentId: T:RabbitMQ.Client.Exceptions.TopologyRecoveryException
  fullName: RabbitMQ.Client.Exceptions.TopologyRecoveryException
  nameWithType: TopologyRecoveryException
- uid: RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor(System.String,System.Exception)
  name: TopologyRecoveryException(String, Exception)
  href: api/RabbitMQ.Client.Exceptions.TopologyRecoveryException.html#RabbitMQ_Client_Exceptions_TopologyRecoveryException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.Exceptions.TopologyRecoveryException.TopologyRecoveryException(System.String, System.Exception)
  nameWithType: TopologyRecoveryException.TopologyRecoveryException(String, Exception)
- uid: RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor*
  name: TopologyRecoveryException
  href: api/RabbitMQ.Client.Exceptions.TopologyRecoveryException.html#RabbitMQ_Client_Exceptions_TopologyRecoveryException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.TopologyRecoveryException.TopologyRecoveryException
  nameWithType: TopologyRecoveryException.TopologyRecoveryException
- uid: RabbitMQ.Client.Exceptions.UnexpectedFrameException
  name: UnexpectedFrameException
  href: api/RabbitMQ.Client.Exceptions.UnexpectedFrameException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnexpectedFrameException
  fullName: RabbitMQ.Client.Exceptions.UnexpectedFrameException
  nameWithType: UnexpectedFrameException
- uid: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnexpectedFrameException.html#RabbitMQ_Client_Exceptions_UnexpectedFrameException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  nameWithType: UnexpectedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnexpectedFrameException.html#RabbitMQ_Client_Exceptions_UnexpectedFrameException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  nameWithType: UnexpectedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException
  name: UnexpectedMethodException
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnexpectedMethodException
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException
  nameWithType: UnexpectedMethodException
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.#ctor(RabbitMQ.Client.IMethod)
  name: UnexpectedMethodException(IMethod)
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException__ctor_RabbitMQ_Client_IMethod_
  commentId: M:RabbitMQ.Client.Exceptions.UnexpectedMethodException.#ctor(RabbitMQ.Client.IMethod)
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.UnexpectedMethodException(RabbitMQ.Client.IMethod)
  nameWithType: UnexpectedMethodException.UnexpectedMethodException(IMethod)
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.#ctor*
  name: UnexpectedMethodException
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.UnexpectedMethodException
  nameWithType: UnexpectedMethodException.UnexpectedMethodException
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.Method
  name: Method
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_Method
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.Method
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.Method
  nameWithType: UnexpectedMethodException.Method
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.Method*
  name: Method
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_Method_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.Method
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.Method
  nameWithType: UnexpectedMethodException.Method
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException
  name: UnknownClassOrMethodException
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException
  nameWithType: UnknownClassOrMethodException
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor(System.UInt16,System.UInt16)
  name: UnknownClassOrMethodException(UInt16, UInt16)
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException__ctor_System_UInt16_System_UInt16_
  commentId: M:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor(System.UInt16,System.UInt16)
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.UnknownClassOrMethodException(System.UInt16, System.UInt16)
  nameWithType: UnknownClassOrMethodException.UnknownClassOrMethodException(UInt16, UInt16)
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor*
  name: UnknownClassOrMethodException
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.UnknownClassOrMethodException
  nameWithType: UnknownClassOrMethodException.UnknownClassOrMethodException
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  name: ClassId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ClassId
  commentId: P:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  nameWithType: UnknownClassOrMethodException.ClassId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId*
  name: ClassId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ClassId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  nameWithType: UnknownClassOrMethodException.ClassId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  name: MethodId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_MethodId
  commentId: P:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  nameWithType: UnknownClassOrMethodException.MethodId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId*
  name: MethodId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_MethodId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  nameWithType: UnknownClassOrMethodException.MethodId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  nameWithType: UnknownClassOrMethodException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  nameWithType: UnknownClassOrMethodException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  name: ToString()
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ToString
  commentId: M:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString()
  nameWithType: UnknownClassOrMethodException.ToString()
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString*
  name: ToString
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ToString_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  nameWithType: UnknownClassOrMethodException.ToString
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodException
  name: UnsupportedMethodException
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnsupportedMethodException
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodException
  nameWithType: UnsupportedMethodException
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodException.#ctor(System.String)
  name: UnsupportedMethodException(String)
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.UnsupportedMethodException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodException.UnsupportedMethodException(System.String)
  nameWithType: UnsupportedMethodException.UnsupportedMethodException(String)
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodException.#ctor*
  name: UnsupportedMethodException
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnsupportedMethodException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodException.UnsupportedMethodException
  nameWithType: UnsupportedMethodException.UnsupportedMethodException
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodException.MethodName
  name: MethodName
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodException_MethodName
  commentId: P:RabbitMQ.Client.Exceptions.UnsupportedMethodException.MethodName
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodException.MethodName
  nameWithType: UnsupportedMethodException.MethodName
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodException.MethodName*
  name: MethodName
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodException_MethodName_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnsupportedMethodException.MethodName
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodException.MethodName
  nameWithType: UnsupportedMethodException.MethodName
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException
  name: UnsupportedMethodFieldException
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException
  nameWithType: UnsupportedMethodFieldException
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.#ctor(System.String,System.String)
  name: UnsupportedMethodFieldException(String, String)
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodFieldException__ctor_System_String_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.#ctor(System.String,System.String)
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.UnsupportedMethodFieldException(System.String, System.String)
  nameWithType: UnsupportedMethodFieldException.UnsupportedMethodFieldException(String, String)
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.#ctor*
  name: UnsupportedMethodFieldException
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodFieldException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.UnsupportedMethodFieldException
  nameWithType: UnsupportedMethodFieldException.UnsupportedMethodFieldException
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.FieldName
  name: FieldName
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodFieldException_FieldName
  commentId: P:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.FieldName
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.FieldName
  nameWithType: UnsupportedMethodFieldException.FieldName
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.FieldName*
  name: FieldName
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodFieldException_FieldName_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.FieldName
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.FieldName
  nameWithType: UnsupportedMethodFieldException.FieldName
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.MethodName
  name: MethodName
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodFieldException_MethodName
  commentId: P:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.MethodName
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.MethodName
  nameWithType: UnsupportedMethodFieldException.MethodName
- uid: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.MethodName*
  name: MethodName
  href: api/RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.html#RabbitMQ_Client_Exceptions_UnsupportedMethodFieldException_MethodName_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.MethodName
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnsupportedMethodFieldException.MethodName
  nameWithType: UnsupportedMethodFieldException.MethodName
- uid: RabbitMQ.Client.Exceptions.WireFormattingException
  name: WireFormattingException
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html
  commentId: T:RabbitMQ.Client.Exceptions.WireFormattingException
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException
  nameWithType: WireFormattingException
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String)
  name: WireFormattingException(String)
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String)
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.WireFormattingException(System.String)
  nameWithType: WireFormattingException.WireFormattingException(String)
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String,System.Object)
  name: WireFormattingException(String, Object)
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException__ctor_System_String_System_Object_
  commentId: M:RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String,System.Object)
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.WireFormattingException(System.String, System.Object)
  nameWithType: WireFormattingException.WireFormattingException(String, Object)
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.#ctor*
  name: WireFormattingException
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.WireFormattingException.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.WireFormattingException
  nameWithType: WireFormattingException.WireFormattingException
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  name: Offender
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException_Offender
  commentId: P:RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  nameWithType: WireFormattingException.Offender
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.Offender*
  name: Offender
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException_Offender_
  commentId: Overload:RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  nameWithType: WireFormattingException.Offender
- uid: RabbitMQ.Client.ExchangeType
  name: ExchangeType
  href: api/RabbitMQ.Client.ExchangeType.html
  commentId: T:RabbitMQ.Client.ExchangeType
  fullName: RabbitMQ.Client.ExchangeType
  nameWithType: ExchangeType
- uid: RabbitMQ.Client.ExchangeType.All
  name: All()
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_All
  commentId: M:RabbitMQ.Client.ExchangeType.All
  fullName: RabbitMQ.Client.ExchangeType.All()
  nameWithType: ExchangeType.All()
- uid: RabbitMQ.Client.ExchangeType.All*
  name: All
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_All_
  commentId: Overload:RabbitMQ.Client.ExchangeType.All
  isSpec: "True"
  fullName: RabbitMQ.Client.ExchangeType.All
  nameWithType: ExchangeType.All
- uid: RabbitMQ.Client.ExchangeType.Direct
  name: Direct
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Direct
  commentId: F:RabbitMQ.Client.ExchangeType.Direct
  fullName: RabbitMQ.Client.ExchangeType.Direct
  nameWithType: ExchangeType.Direct
- uid: RabbitMQ.Client.ExchangeType.Fanout
  name: Fanout
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Fanout
  commentId: F:RabbitMQ.Client.ExchangeType.Fanout
  fullName: RabbitMQ.Client.ExchangeType.Fanout
  nameWithType: ExchangeType.Fanout
- uid: RabbitMQ.Client.ExchangeType.Headers
  name: Headers
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Headers
  commentId: F:RabbitMQ.Client.ExchangeType.Headers
  fullName: RabbitMQ.Client.ExchangeType.Headers
  nameWithType: ExchangeType.Headers
- uid: RabbitMQ.Client.ExchangeType.Topic
  name: Topic
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Topic
  commentId: F:RabbitMQ.Client.ExchangeType.Topic
  fullName: RabbitMQ.Client.ExchangeType.Topic
  nameWithType: ExchangeType.Topic
- uid: RabbitMQ.Client.ExternalMechanism
  name: ExternalMechanism
  href: api/RabbitMQ.Client.ExternalMechanism.html
  commentId: T:RabbitMQ.Client.ExternalMechanism
  fullName: RabbitMQ.Client.ExternalMechanism
  nameWithType: ExternalMechanism
- uid: RabbitMQ.Client.ExternalMechanism.handleChallenge(System.Byte[],RabbitMQ.Client.IConnectionFactory)
  name: handleChallenge(Byte[], IConnectionFactory)
  href: api/RabbitMQ.Client.ExternalMechanism.html#RabbitMQ_Client_ExternalMechanism_handleChallenge_System_Byte___RabbitMQ_Client_IConnectionFactory_
  commentId: M:RabbitMQ.Client.ExternalMechanism.handleChallenge(System.Byte[],RabbitMQ.Client.IConnectionFactory)
  name.vb: handleChallenge(Byte(), IConnectionFactory)
  fullName: RabbitMQ.Client.ExternalMechanism.handleChallenge(System.Byte[], RabbitMQ.Client.IConnectionFactory)
  fullName.vb: RabbitMQ.Client.ExternalMechanism.handleChallenge(System.Byte(), RabbitMQ.Client.IConnectionFactory)
  nameWithType: ExternalMechanism.handleChallenge(Byte[], IConnectionFactory)
  nameWithType.vb: ExternalMechanism.handleChallenge(Byte(), IConnectionFactory)
- uid: RabbitMQ.Client.ExternalMechanism.handleChallenge*
  name: handleChallenge
  href: api/RabbitMQ.Client.ExternalMechanism.html#RabbitMQ_Client_ExternalMechanism_handleChallenge_
  commentId: Overload:RabbitMQ.Client.ExternalMechanism.handleChallenge
  isSpec: "True"
  fullName: RabbitMQ.Client.ExternalMechanism.handleChallenge
  nameWithType: ExternalMechanism.handleChallenge
- uid: RabbitMQ.Client.ExternalMechanismFactory
  name: ExternalMechanismFactory
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html
  commentId: T:RabbitMQ.Client.ExternalMechanismFactory
  fullName: RabbitMQ.Client.ExternalMechanismFactory
  nameWithType: ExternalMechanismFactory
- uid: RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  name: GetInstance()
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_GetInstance
  commentId: M:RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  fullName: RabbitMQ.Client.ExternalMechanismFactory.GetInstance()
  nameWithType: ExternalMechanismFactory.GetInstance()
- uid: RabbitMQ.Client.ExternalMechanismFactory.GetInstance*
  name: GetInstance
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_GetInstance_
  commentId: Overload:RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  isSpec: "True"
  fullName: RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  nameWithType: ExternalMechanismFactory.GetInstance
- uid: RabbitMQ.Client.ExternalMechanismFactory.Name
  name: Name
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_Name
  commentId: P:RabbitMQ.Client.ExternalMechanismFactory.Name
  fullName: RabbitMQ.Client.ExternalMechanismFactory.Name
  nameWithType: ExternalMechanismFactory.Name
- uid: RabbitMQ.Client.ExternalMechanismFactory.Name*
  name: Name
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_Name_
  commentId: Overload:RabbitMQ.Client.ExternalMechanismFactory.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.ExternalMechanismFactory.Name
  nameWithType: ExternalMechanismFactory.Name
- uid: RabbitMQ.Client.Headers
  name: Headers
  href: api/RabbitMQ.Client.Headers.html
  commentId: T:RabbitMQ.Client.Headers
  fullName: RabbitMQ.Client.Headers
  nameWithType: Headers
- uid: RabbitMQ.Client.Headers.AlternateExchange
  name: AlternateExchange
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_AlternateExchange
  commentId: F:RabbitMQ.Client.Headers.AlternateExchange
  fullName: RabbitMQ.Client.Headers.AlternateExchange
  nameWithType: Headers.AlternateExchange
- uid: RabbitMQ.Client.Headers.XDeadLetterExchange
  name: XDeadLetterExchange
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XDeadLetterExchange
  commentId: F:RabbitMQ.Client.Headers.XDeadLetterExchange
  fullName: RabbitMQ.Client.Headers.XDeadLetterExchange
  nameWithType: Headers.XDeadLetterExchange
- uid: RabbitMQ.Client.Headers.XDeadLetterRoutingKey
  name: XDeadLetterRoutingKey
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XDeadLetterRoutingKey
  commentId: F:RabbitMQ.Client.Headers.XDeadLetterRoutingKey
  fullName: RabbitMQ.Client.Headers.XDeadLetterRoutingKey
  nameWithType: Headers.XDeadLetterRoutingKey
- uid: RabbitMQ.Client.Headers.XExpires
  name: XExpires
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XExpires
  commentId: F:RabbitMQ.Client.Headers.XExpires
  fullName: RabbitMQ.Client.Headers.XExpires
  nameWithType: Headers.XExpires
- uid: RabbitMQ.Client.Headers.XMaxLength
  name: XMaxLength
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxLength
  commentId: F:RabbitMQ.Client.Headers.XMaxLength
  fullName: RabbitMQ.Client.Headers.XMaxLength
  nameWithType: Headers.XMaxLength
- uid: RabbitMQ.Client.Headers.XMaxLengthInBytes
  name: XMaxLengthInBytes
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxLengthInBytes
  commentId: F:RabbitMQ.Client.Headers.XMaxLengthInBytes
  fullName: RabbitMQ.Client.Headers.XMaxLengthInBytes
  nameWithType: Headers.XMaxLengthInBytes
- uid: RabbitMQ.Client.Headers.XMaxPriority
  name: XMaxPriority
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxPriority
  commentId: F:RabbitMQ.Client.Headers.XMaxPriority
  fullName: RabbitMQ.Client.Headers.XMaxPriority
  nameWithType: Headers.XMaxPriority
- uid: RabbitMQ.Client.Headers.XMessageTTL
  name: XMessageTTL
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMessageTTL
  commentId: F:RabbitMQ.Client.Headers.XMessageTTL
  fullName: RabbitMQ.Client.Headers.XMessageTTL
  nameWithType: Headers.XMessageTTL
- uid: RabbitMQ.Client.Headers.XOverflow
  name: XOverflow
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XOverflow
  commentId: F:RabbitMQ.Client.Headers.XOverflow
  fullName: RabbitMQ.Client.Headers.XOverflow
  nameWithType: Headers.XOverflow
- uid: RabbitMQ.Client.Headers.XPriority
  name: XPriority
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XPriority
  commentId: F:RabbitMQ.Client.Headers.XPriority
  fullName: RabbitMQ.Client.Headers.XPriority
  nameWithType: Headers.XPriority
- uid: RabbitMQ.Client.Headers.XQueueMode
  name: XQueueMode
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XQueueMode
  commentId: F:RabbitMQ.Client.Headers.XQueueMode
  fullName: RabbitMQ.Client.Headers.XQueueMode
  nameWithType: Headers.XQueueMode
- uid: RabbitMQ.Client.Headers.XQueueType
  name: XQueueType
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XQueueType
  commentId: F:RabbitMQ.Client.Headers.XQueueType
  fullName: RabbitMQ.Client.Headers.XQueueType
  nameWithType: Headers.XQueueType
- uid: RabbitMQ.Client.Headers.XQuorumInitialGroupSize
  name: XQuorumInitialGroupSize
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XQuorumInitialGroupSize
  commentId: F:RabbitMQ.Client.Headers.XQuorumInitialGroupSize
  fullName: RabbitMQ.Client.Headers.XQuorumInitialGroupSize
  nameWithType: Headers.XQuorumInitialGroupSize
- uid: RabbitMQ.Client.Headers.XSingleActiveConsumer
  name: XSingleActiveConsumer
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XSingleActiveConsumer
  commentId: F:RabbitMQ.Client.Headers.XSingleActiveConsumer
  fullName: RabbitMQ.Client.Headers.XSingleActiveConsumer
  nameWithType: Headers.XSingleActiveConsumer
- uid: RabbitMQ.Client.IAsyncBasicConsumer
  name: IAsyncBasicConsumer
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html
  commentId: T:RabbitMQ.Client.IAsyncBasicConsumer
  fullName: RabbitMQ.Client.IAsyncBasicConsumer
  nameWithType: IAsyncBasicConsumer
- uid: RabbitMQ.Client.IAsyncBasicConsumer.ConsumerCancelled
  name: ConsumerCancelled
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_ConsumerCancelled
  commentId: E:RabbitMQ.Client.IAsyncBasicConsumer.ConsumerCancelled
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.ConsumerCancelled
  nameWithType: IAsyncBasicConsumer.ConsumerCancelled
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancel(System.String)
  name: HandleBasicCancel(String)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancel_System_String_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancel(System.String)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancel(System.String)
  nameWithType: IAsyncBasicConsumer.HandleBasicCancel(String)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancel*
  name: HandleBasicCancel
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancel_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancel
  nameWithType: IAsyncBasicConsumer.HandleBasicCancel
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOk(System.String)
  name: HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOk(System.String)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: IAsyncBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOk*
  name: HandleBasicCancelOk
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOk
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOk
  nameWithType: IAsyncBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOk(System.String)
  name: HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOk(System.String)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: IAsyncBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOk*
  name: HandleBasicConsumeOk
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOk
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOk
  nameWithType: IAsyncBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: IAsyncBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: IAsyncBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliver
  nameWithType: IAsyncBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: IAsyncBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleModelShutdown*
  name: HandleModelShutdown
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleModelShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleModelShutdown
  nameWithType: IAsyncBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.IAsyncBasicConsumer.Model
  name: Model
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_Model
  commentId: P:RabbitMQ.Client.IAsyncBasicConsumer.Model
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.Model
  nameWithType: IAsyncBasicConsumer.Model
- uid: RabbitMQ.Client.IAsyncBasicConsumer.Model*
  name: Model
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_Model_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.Model
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.Model
  nameWithType: IAsyncBasicConsumer.Model
- uid: RabbitMQ.Client.IAsyncConnectionFactory
  name: IAsyncConnectionFactory
  href: api/RabbitMQ.Client.IAsyncConnectionFactory.html
  commentId: T:RabbitMQ.Client.IAsyncConnectionFactory
  fullName: RabbitMQ.Client.IAsyncConnectionFactory
  nameWithType: IAsyncConnectionFactory
- uid: RabbitMQ.Client.IAsyncConnectionFactory.DispatchConsumersAsync
  name: DispatchConsumersAsync
  href: api/RabbitMQ.Client.IAsyncConnectionFactory.html#RabbitMQ_Client_IAsyncConnectionFactory_DispatchConsumersAsync
  commentId: P:RabbitMQ.Client.IAsyncConnectionFactory.DispatchConsumersAsync
  fullName: RabbitMQ.Client.IAsyncConnectionFactory.DispatchConsumersAsync
  nameWithType: IAsyncConnectionFactory.DispatchConsumersAsync
- uid: RabbitMQ.Client.IAsyncConnectionFactory.DispatchConsumersAsync*
  name: DispatchConsumersAsync
  href: api/RabbitMQ.Client.IAsyncConnectionFactory.html#RabbitMQ_Client_IAsyncConnectionFactory_DispatchConsumersAsync_
  commentId: Overload:RabbitMQ.Client.IAsyncConnectionFactory.DispatchConsumersAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncConnectionFactory.DispatchConsumersAsync
  nameWithType: IAsyncConnectionFactory.DispatchConsumersAsync
- uid: RabbitMQ.Client.IAuthMechanism
  name: IAuthMechanism
  href: api/RabbitMQ.Client.IAuthMechanism.html
  commentId: T:RabbitMQ.Client.IAuthMechanism
  fullName: RabbitMQ.Client.IAuthMechanism
  nameWithType: IAuthMechanism
- uid: RabbitMQ.Client.IAuthMechanism.handleChallenge(System.Byte[],RabbitMQ.Client.IConnectionFactory)
  name: handleChallenge(Byte[], IConnectionFactory)
  href: api/RabbitMQ.Client.IAuthMechanism.html#RabbitMQ_Client_IAuthMechanism_handleChallenge_System_Byte___RabbitMQ_Client_IConnectionFactory_
  commentId: M:RabbitMQ.Client.IAuthMechanism.handleChallenge(System.Byte[],RabbitMQ.Client.IConnectionFactory)
  name.vb: handleChallenge(Byte(), IConnectionFactory)
  fullName: RabbitMQ.Client.IAuthMechanism.handleChallenge(System.Byte[], RabbitMQ.Client.IConnectionFactory)
  fullName.vb: RabbitMQ.Client.IAuthMechanism.handleChallenge(System.Byte(), RabbitMQ.Client.IConnectionFactory)
  nameWithType: IAuthMechanism.handleChallenge(Byte[], IConnectionFactory)
  nameWithType.vb: IAuthMechanism.handleChallenge(Byte(), IConnectionFactory)
- uid: RabbitMQ.Client.IAuthMechanism.handleChallenge*
  name: handleChallenge
  href: api/RabbitMQ.Client.IAuthMechanism.html#RabbitMQ_Client_IAuthMechanism_handleChallenge_
  commentId: Overload:RabbitMQ.Client.IAuthMechanism.handleChallenge
  isSpec: "True"
  fullName: RabbitMQ.Client.IAuthMechanism.handleChallenge
  nameWithType: IAuthMechanism.handleChallenge
- uid: RabbitMQ.Client.IAuthMechanismFactory
  name: IAuthMechanismFactory
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html
  commentId: T:RabbitMQ.Client.IAuthMechanismFactory
  fullName: RabbitMQ.Client.IAuthMechanismFactory
  nameWithType: IAuthMechanismFactory
- uid: RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  name: GetInstance()
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_GetInstance
  commentId: M:RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  fullName: RabbitMQ.Client.IAuthMechanismFactory.GetInstance()
  nameWithType: IAuthMechanismFactory.GetInstance()
- uid: RabbitMQ.Client.IAuthMechanismFactory.GetInstance*
  name: GetInstance
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_GetInstance_
  commentId: Overload:RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  isSpec: "True"
  fullName: RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  nameWithType: IAuthMechanismFactory.GetInstance
- uid: RabbitMQ.Client.IAuthMechanismFactory.Name
  name: Name
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_Name
  commentId: P:RabbitMQ.Client.IAuthMechanismFactory.Name
  fullName: RabbitMQ.Client.IAuthMechanismFactory.Name
  nameWithType: IAuthMechanismFactory.Name
- uid: RabbitMQ.Client.IAuthMechanismFactory.Name*
  name: Name
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_Name_
  commentId: Overload:RabbitMQ.Client.IAuthMechanismFactory.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.IAuthMechanismFactory.Name
  nameWithType: IAuthMechanismFactory.Name
- uid: RabbitMQ.Client.IAutorecoveringConnection
  name: IAutorecoveringConnection
  href: api/RabbitMQ.Client.IAutorecoveringConnection.html
  commentId: T:RabbitMQ.Client.IAutorecoveringConnection
  fullName: RabbitMQ.Client.IAutorecoveringConnection
  nameWithType: IAutorecoveringConnection
- uid: RabbitMQ.Client.IAutorecoveringConnection.ConnectionRecoveryError
  name: ConnectionRecoveryError
  href: api/RabbitMQ.Client.IAutorecoveringConnection.html#RabbitMQ_Client_IAutorecoveringConnection_ConnectionRecoveryError
  commentId: E:RabbitMQ.Client.IAutorecoveringConnection.ConnectionRecoveryError
  fullName: RabbitMQ.Client.IAutorecoveringConnection.ConnectionRecoveryError
  nameWithType: IAutorecoveringConnection.ConnectionRecoveryError
- uid: RabbitMQ.Client.IAutorecoveringConnection.ConsumerTagChangeAfterRecovery
  name: ConsumerTagChangeAfterRecovery
  href: api/RabbitMQ.Client.IAutorecoveringConnection.html#RabbitMQ_Client_IAutorecoveringConnection_ConsumerTagChangeAfterRecovery
  commentId: E:RabbitMQ.Client.IAutorecoveringConnection.ConsumerTagChangeAfterRecovery
  fullName: RabbitMQ.Client.IAutorecoveringConnection.ConsumerTagChangeAfterRecovery
  nameWithType: IAutorecoveringConnection.ConsumerTagChangeAfterRecovery
- uid: RabbitMQ.Client.IAutorecoveringConnection.QueueNameChangeAfterRecovery
  name: QueueNameChangeAfterRecovery
  href: api/RabbitMQ.Client.IAutorecoveringConnection.html#RabbitMQ_Client_IAutorecoveringConnection_QueueNameChangeAfterRecovery
  commentId: E:RabbitMQ.Client.IAutorecoveringConnection.QueueNameChangeAfterRecovery
  fullName: RabbitMQ.Client.IAutorecoveringConnection.QueueNameChangeAfterRecovery
  nameWithType: IAutorecoveringConnection.QueueNameChangeAfterRecovery
- uid: RabbitMQ.Client.IAutorecoveringConnection.RecoverySucceeded
  name: RecoverySucceeded
  href: api/RabbitMQ.Client.IAutorecoveringConnection.html#RabbitMQ_Client_IAutorecoveringConnection_RecoverySucceeded
  commentId: E:RabbitMQ.Client.IAutorecoveringConnection.RecoverySucceeded
  fullName: RabbitMQ.Client.IAutorecoveringConnection.RecoverySucceeded
  nameWithType: IAutorecoveringConnection.RecoverySucceeded
- uid: RabbitMQ.Client.IBasicConsumer
  name: IBasicConsumer
  href: api/RabbitMQ.Client.IBasicConsumer.html
  commentId: T:RabbitMQ.Client.IBasicConsumer
  fullName: RabbitMQ.Client.IBasicConsumer
  nameWithType: IBasicConsumer
- uid: RabbitMQ.Client.IBasicConsumer.ConsumerCancelled
  name: ConsumerCancelled
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_ConsumerCancelled
  commentId: E:RabbitMQ.Client.IBasicConsumer.ConsumerCancelled
  fullName: RabbitMQ.Client.IBasicConsumer.ConsumerCancelled
  nameWithType: IBasicConsumer.ConsumerCancelled
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicCancel(System.String)
  name: HandleBasicCancel(String)
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicCancel_System_String_
  commentId: M:RabbitMQ.Client.IBasicConsumer.HandleBasicCancel(System.String)
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicCancel(System.String)
  nameWithType: IBasicConsumer.HandleBasicCancel(String)
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicCancel*
  name: HandleBasicCancel
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicCancel_
  commentId: Overload:RabbitMQ.Client.IBasicConsumer.HandleBasicCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicCancel
  nameWithType: IBasicConsumer.HandleBasicCancel
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk(System.String)
  name: HandleBasicCancelOk(String)
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicCancelOk_System_String_
  commentId: M:RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk(System.String)
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk(System.String)
  nameWithType: IBasicConsumer.HandleBasicCancelOk(String)
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk*
  name: HandleBasicCancelOk
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicCancelOk_
  commentId: Overload:RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicCancelOk
  nameWithType: IBasicConsumer.HandleBasicCancelOk
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk(System.String)
  name: HandleBasicConsumeOk(String)
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicConsumeOk_System_String_
  commentId: M:RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk(System.String)
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk(System.String)
  nameWithType: IBasicConsumer.HandleBasicConsumeOk(String)
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk*
  name: HandleBasicConsumeOk
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicConsumeOk_
  commentId: Overload:RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicConsumeOk
  nameWithType: IBasicConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: IBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: IBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicConsumer.HandleBasicDeliver
  nameWithType: IBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.IBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleModelShutdown_System_Object_RabbitMQ_Client_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.IBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  fullName: RabbitMQ.Client.IBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  nameWithType: IBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.IBasicConsumer.HandleModelShutdown*
  name: HandleModelShutdown
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_HandleModelShutdown_
  commentId: Overload:RabbitMQ.Client.IBasicConsumer.HandleModelShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicConsumer.HandleModelShutdown
  nameWithType: IBasicConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.IBasicConsumer.Model
  name: Model
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_Model
  commentId: P:RabbitMQ.Client.IBasicConsumer.Model
  fullName: RabbitMQ.Client.IBasicConsumer.Model
  nameWithType: IBasicConsumer.Model
- uid: RabbitMQ.Client.IBasicConsumer.Model*
  name: Model
  href: api/RabbitMQ.Client.IBasicConsumer.html#RabbitMQ_Client_IBasicConsumer_Model_
  commentId: Overload:RabbitMQ.Client.IBasicConsumer.Model
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicConsumer.Model
  nameWithType: IBasicConsumer.Model
- uid: RabbitMQ.Client.IBasicProperties
  name: IBasicProperties
  href: api/RabbitMQ.Client.IBasicProperties.html
  commentId: T:RabbitMQ.Client.IBasicProperties
  fullName: RabbitMQ.Client.IBasicProperties
  nameWithType: IBasicProperties
- uid: RabbitMQ.Client.IBasicProperties.AppId
  name: AppId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_AppId
  commentId: P:RabbitMQ.Client.IBasicProperties.AppId
  fullName: RabbitMQ.Client.IBasicProperties.AppId
  nameWithType: IBasicProperties.AppId
- uid: RabbitMQ.Client.IBasicProperties.AppId*
  name: AppId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_AppId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.AppId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.AppId
  nameWithType: IBasicProperties.AppId
- uid: RabbitMQ.Client.IBasicProperties.ClearAppId
  name: ClearAppId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearAppId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearAppId
  fullName: RabbitMQ.Client.IBasicProperties.ClearAppId()
  nameWithType: IBasicProperties.ClearAppId()
- uid: RabbitMQ.Client.IBasicProperties.ClearAppId*
  name: ClearAppId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearAppId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearAppId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearAppId
  nameWithType: IBasicProperties.ClearAppId
- uid: RabbitMQ.Client.IBasicProperties.ClearClusterId
  name: ClearClusterId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearClusterId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearClusterId
  fullName: RabbitMQ.Client.IBasicProperties.ClearClusterId()
  nameWithType: IBasicProperties.ClearClusterId()
- uid: RabbitMQ.Client.IBasicProperties.ClearClusterId*
  name: ClearClusterId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearClusterId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearClusterId
  nameWithType: IBasicProperties.ClearClusterId
- uid: RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  name: ClearContentEncoding()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentEncoding
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentEncoding()
  nameWithType: IBasicProperties.ClearContentEncoding()
- uid: RabbitMQ.Client.IBasicProperties.ClearContentEncoding*
  name: ClearContentEncoding
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentEncoding_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  nameWithType: IBasicProperties.ClearContentEncoding
- uid: RabbitMQ.Client.IBasicProperties.ClearContentType
  name: ClearContentType()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentType
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearContentType
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentType()
  nameWithType: IBasicProperties.ClearContentType()
- uid: RabbitMQ.Client.IBasicProperties.ClearContentType*
  name: ClearContentType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentType_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentType
  nameWithType: IBasicProperties.ClearContentType
- uid: RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  name: ClearCorrelationId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearCorrelationId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  fullName: RabbitMQ.Client.IBasicProperties.ClearCorrelationId()
  nameWithType: IBasicProperties.ClearCorrelationId()
- uid: RabbitMQ.Client.IBasicProperties.ClearCorrelationId*
  name: ClearCorrelationId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearCorrelationId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  nameWithType: IBasicProperties.ClearCorrelationId
- uid: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  name: ClearDeliveryMode()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearDeliveryMode
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  fullName: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode()
  nameWithType: IBasicProperties.ClearDeliveryMode()
- uid: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode*
  name: ClearDeliveryMode
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearDeliveryMode_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  nameWithType: IBasicProperties.ClearDeliveryMode
- uid: RabbitMQ.Client.IBasicProperties.ClearExpiration
  name: ClearExpiration()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearExpiration
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearExpiration
  fullName: RabbitMQ.Client.IBasicProperties.ClearExpiration()
  nameWithType: IBasicProperties.ClearExpiration()
- uid: RabbitMQ.Client.IBasicProperties.ClearExpiration*
  name: ClearExpiration
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearExpiration_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearExpiration
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearExpiration
  nameWithType: IBasicProperties.ClearExpiration
- uid: RabbitMQ.Client.IBasicProperties.ClearHeaders
  name: ClearHeaders()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearHeaders
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearHeaders
  fullName: RabbitMQ.Client.IBasicProperties.ClearHeaders()
  nameWithType: IBasicProperties.ClearHeaders()
- uid: RabbitMQ.Client.IBasicProperties.ClearHeaders*
  name: ClearHeaders
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearHeaders_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearHeaders
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearHeaders
  nameWithType: IBasicProperties.ClearHeaders
- uid: RabbitMQ.Client.IBasicProperties.ClearMessageId
  name: ClearMessageId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearMessageId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearMessageId
  fullName: RabbitMQ.Client.IBasicProperties.ClearMessageId()
  nameWithType: IBasicProperties.ClearMessageId()
- uid: RabbitMQ.Client.IBasicProperties.ClearMessageId*
  name: ClearMessageId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearMessageId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearMessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearMessageId
  nameWithType: IBasicProperties.ClearMessageId
- uid: RabbitMQ.Client.IBasicProperties.ClearPriority
  name: ClearPriority()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearPriority
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearPriority
  fullName: RabbitMQ.Client.IBasicProperties.ClearPriority()
  nameWithType: IBasicProperties.ClearPriority()
- uid: RabbitMQ.Client.IBasicProperties.ClearPriority*
  name: ClearPriority
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearPriority_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearPriority
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearPriority
  nameWithType: IBasicProperties.ClearPriority
- uid: RabbitMQ.Client.IBasicProperties.ClearReplyTo
  name: ClearReplyTo()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearReplyTo
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearReplyTo
  fullName: RabbitMQ.Client.IBasicProperties.ClearReplyTo()
  nameWithType: IBasicProperties.ClearReplyTo()
- uid: RabbitMQ.Client.IBasicProperties.ClearReplyTo*
  name: ClearReplyTo
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearReplyTo_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearReplyTo
  nameWithType: IBasicProperties.ClearReplyTo
- uid: RabbitMQ.Client.IBasicProperties.ClearTimestamp
  name: ClearTimestamp()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearTimestamp
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearTimestamp
  fullName: RabbitMQ.Client.IBasicProperties.ClearTimestamp()
  nameWithType: IBasicProperties.ClearTimestamp()
- uid: RabbitMQ.Client.IBasicProperties.ClearTimestamp*
  name: ClearTimestamp
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearTimestamp_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearTimestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearTimestamp
  nameWithType: IBasicProperties.ClearTimestamp
- uid: RabbitMQ.Client.IBasicProperties.ClearType
  name: ClearType()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearType
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearType
  fullName: RabbitMQ.Client.IBasicProperties.ClearType()
  nameWithType: IBasicProperties.ClearType()
- uid: RabbitMQ.Client.IBasicProperties.ClearType*
  name: ClearType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearType_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearType
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearType
  nameWithType: IBasicProperties.ClearType
- uid: RabbitMQ.Client.IBasicProperties.ClearUserId
  name: ClearUserId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearUserId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearUserId
  fullName: RabbitMQ.Client.IBasicProperties.ClearUserId()
  nameWithType: IBasicProperties.ClearUserId()
- uid: RabbitMQ.Client.IBasicProperties.ClearUserId*
  name: ClearUserId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearUserId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearUserId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearUserId
  nameWithType: IBasicProperties.ClearUserId
- uid: RabbitMQ.Client.IBasicProperties.ClusterId
  name: ClusterId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClusterId
  commentId: P:RabbitMQ.Client.IBasicProperties.ClusterId
  fullName: RabbitMQ.Client.IBasicProperties.ClusterId
  nameWithType: IBasicProperties.ClusterId
- uid: RabbitMQ.Client.IBasicProperties.ClusterId*
  name: ClusterId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClusterId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClusterId
  nameWithType: IBasicProperties.ClusterId
- uid: RabbitMQ.Client.IBasicProperties.ContentEncoding
  name: ContentEncoding
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentEncoding
  commentId: P:RabbitMQ.Client.IBasicProperties.ContentEncoding
  fullName: RabbitMQ.Client.IBasicProperties.ContentEncoding
  nameWithType: IBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.IBasicProperties.ContentEncoding*
  name: ContentEncoding
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentEncoding_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ContentEncoding
  nameWithType: IBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.IBasicProperties.ContentType
  name: ContentType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentType
  commentId: P:RabbitMQ.Client.IBasicProperties.ContentType
  fullName: RabbitMQ.Client.IBasicProperties.ContentType
  nameWithType: IBasicProperties.ContentType
- uid: RabbitMQ.Client.IBasicProperties.ContentType*
  name: ContentType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentType_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ContentType
  nameWithType: IBasicProperties.ContentType
- uid: RabbitMQ.Client.IBasicProperties.CorrelationId
  name: CorrelationId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_CorrelationId
  commentId: P:RabbitMQ.Client.IBasicProperties.CorrelationId
  fullName: RabbitMQ.Client.IBasicProperties.CorrelationId
  nameWithType: IBasicProperties.CorrelationId
- uid: RabbitMQ.Client.IBasicProperties.CorrelationId*
  name: CorrelationId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_CorrelationId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.CorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.CorrelationId
  nameWithType: IBasicProperties.CorrelationId
- uid: RabbitMQ.Client.IBasicProperties.DeliveryMode
  name: DeliveryMode
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_DeliveryMode
  commentId: P:RabbitMQ.Client.IBasicProperties.DeliveryMode
  fullName: RabbitMQ.Client.IBasicProperties.DeliveryMode
  nameWithType: IBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.IBasicProperties.DeliveryMode*
  name: DeliveryMode
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_DeliveryMode_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.DeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.DeliveryMode
  nameWithType: IBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.IBasicProperties.Expiration
  name: Expiration
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Expiration
  commentId: P:RabbitMQ.Client.IBasicProperties.Expiration
  fullName: RabbitMQ.Client.IBasicProperties.Expiration
  nameWithType: IBasicProperties.Expiration
- uid: RabbitMQ.Client.IBasicProperties.Expiration*
  name: Expiration
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Expiration_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Expiration
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Expiration
  nameWithType: IBasicProperties.Expiration
- uid: RabbitMQ.Client.IBasicProperties.Headers
  name: Headers
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Headers
  commentId: P:RabbitMQ.Client.IBasicProperties.Headers
  fullName: RabbitMQ.Client.IBasicProperties.Headers
  nameWithType: IBasicProperties.Headers
- uid: RabbitMQ.Client.IBasicProperties.Headers*
  name: Headers
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Headers_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Headers
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Headers
  nameWithType: IBasicProperties.Headers
- uid: RabbitMQ.Client.IBasicProperties.IsAppIdPresent
  name: IsAppIdPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsAppIdPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsAppIdPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsAppIdPresent()
  nameWithType: IBasicProperties.IsAppIdPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsAppIdPresent*
  name: IsAppIdPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsAppIdPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsAppIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsAppIdPresent
  nameWithType: IBasicProperties.IsAppIdPresent
- uid: RabbitMQ.Client.IBasicProperties.IsClusterIdPresent
  name: IsClusterIdPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsClusterIdPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsClusterIdPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsClusterIdPresent()
  nameWithType: IBasicProperties.IsClusterIdPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsClusterIdPresent*
  name: IsClusterIdPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsClusterIdPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsClusterIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsClusterIdPresent
  nameWithType: IBasicProperties.IsClusterIdPresent
- uid: RabbitMQ.Client.IBasicProperties.IsContentEncodingPresent
  name: IsContentEncodingPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsContentEncodingPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsContentEncodingPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsContentEncodingPresent()
  nameWithType: IBasicProperties.IsContentEncodingPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsContentEncodingPresent*
  name: IsContentEncodingPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsContentEncodingPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsContentEncodingPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsContentEncodingPresent
  nameWithType: IBasicProperties.IsContentEncodingPresent
- uid: RabbitMQ.Client.IBasicProperties.IsContentTypePresent
  name: IsContentTypePresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsContentTypePresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsContentTypePresent
  fullName: RabbitMQ.Client.IBasicProperties.IsContentTypePresent()
  nameWithType: IBasicProperties.IsContentTypePresent()
- uid: RabbitMQ.Client.IBasicProperties.IsContentTypePresent*
  name: IsContentTypePresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsContentTypePresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsContentTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsContentTypePresent
  nameWithType: IBasicProperties.IsContentTypePresent
- uid: RabbitMQ.Client.IBasicProperties.IsCorrelationIdPresent
  name: IsCorrelationIdPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsCorrelationIdPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsCorrelationIdPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsCorrelationIdPresent()
  nameWithType: IBasicProperties.IsCorrelationIdPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsCorrelationIdPresent*
  name: IsCorrelationIdPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsCorrelationIdPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsCorrelationIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsCorrelationIdPresent
  nameWithType: IBasicProperties.IsCorrelationIdPresent
- uid: RabbitMQ.Client.IBasicProperties.IsDeliveryModePresent
  name: IsDeliveryModePresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsDeliveryModePresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsDeliveryModePresent
  fullName: RabbitMQ.Client.IBasicProperties.IsDeliveryModePresent()
  nameWithType: IBasicProperties.IsDeliveryModePresent()
- uid: RabbitMQ.Client.IBasicProperties.IsDeliveryModePresent*
  name: IsDeliveryModePresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsDeliveryModePresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsDeliveryModePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsDeliveryModePresent
  nameWithType: IBasicProperties.IsDeliveryModePresent
- uid: RabbitMQ.Client.IBasicProperties.IsExpirationPresent
  name: IsExpirationPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsExpirationPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsExpirationPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsExpirationPresent()
  nameWithType: IBasicProperties.IsExpirationPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsExpirationPresent*
  name: IsExpirationPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsExpirationPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsExpirationPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsExpirationPresent
  nameWithType: IBasicProperties.IsExpirationPresent
- uid: RabbitMQ.Client.IBasicProperties.IsHeadersPresent
  name: IsHeadersPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsHeadersPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsHeadersPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsHeadersPresent()
  nameWithType: IBasicProperties.IsHeadersPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsHeadersPresent*
  name: IsHeadersPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsHeadersPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsHeadersPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsHeadersPresent
  nameWithType: IBasicProperties.IsHeadersPresent
- uid: RabbitMQ.Client.IBasicProperties.IsMessageIdPresent
  name: IsMessageIdPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsMessageIdPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsMessageIdPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsMessageIdPresent()
  nameWithType: IBasicProperties.IsMessageIdPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsMessageIdPresent*
  name: IsMessageIdPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsMessageIdPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsMessageIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsMessageIdPresent
  nameWithType: IBasicProperties.IsMessageIdPresent
- uid: RabbitMQ.Client.IBasicProperties.IsPriorityPresent
  name: IsPriorityPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsPriorityPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsPriorityPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsPriorityPresent()
  nameWithType: IBasicProperties.IsPriorityPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsPriorityPresent*
  name: IsPriorityPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsPriorityPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsPriorityPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsPriorityPresent
  nameWithType: IBasicProperties.IsPriorityPresent
- uid: RabbitMQ.Client.IBasicProperties.IsReplyToPresent
  name: IsReplyToPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsReplyToPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsReplyToPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsReplyToPresent()
  nameWithType: IBasicProperties.IsReplyToPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsReplyToPresent*
  name: IsReplyToPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsReplyToPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsReplyToPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsReplyToPresent
  nameWithType: IBasicProperties.IsReplyToPresent
- uid: RabbitMQ.Client.IBasicProperties.IsTimestampPresent
  name: IsTimestampPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsTimestampPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsTimestampPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsTimestampPresent()
  nameWithType: IBasicProperties.IsTimestampPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsTimestampPresent*
  name: IsTimestampPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsTimestampPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsTimestampPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsTimestampPresent
  nameWithType: IBasicProperties.IsTimestampPresent
- uid: RabbitMQ.Client.IBasicProperties.IsTypePresent
  name: IsTypePresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsTypePresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsTypePresent
  fullName: RabbitMQ.Client.IBasicProperties.IsTypePresent()
  nameWithType: IBasicProperties.IsTypePresent()
- uid: RabbitMQ.Client.IBasicProperties.IsTypePresent*
  name: IsTypePresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsTypePresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsTypePresent
  nameWithType: IBasicProperties.IsTypePresent
- uid: RabbitMQ.Client.IBasicProperties.IsUserIdPresent
  name: IsUserIdPresent()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsUserIdPresent
  commentId: M:RabbitMQ.Client.IBasicProperties.IsUserIdPresent
  fullName: RabbitMQ.Client.IBasicProperties.IsUserIdPresent()
  nameWithType: IBasicProperties.IsUserIdPresent()
- uid: RabbitMQ.Client.IBasicProperties.IsUserIdPresent*
  name: IsUserIdPresent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_IsUserIdPresent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.IsUserIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.IsUserIdPresent
  nameWithType: IBasicProperties.IsUserIdPresent
- uid: RabbitMQ.Client.IBasicProperties.MessageId
  name: MessageId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_MessageId
  commentId: P:RabbitMQ.Client.IBasicProperties.MessageId
  fullName: RabbitMQ.Client.IBasicProperties.MessageId
  nameWithType: IBasicProperties.MessageId
- uid: RabbitMQ.Client.IBasicProperties.MessageId*
  name: MessageId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_MessageId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.MessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.MessageId
  nameWithType: IBasicProperties.MessageId
- uid: RabbitMQ.Client.IBasicProperties.Persistent
  name: Persistent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Persistent
  commentId: P:RabbitMQ.Client.IBasicProperties.Persistent
  fullName: RabbitMQ.Client.IBasicProperties.Persistent
  nameWithType: IBasicProperties.Persistent
- uid: RabbitMQ.Client.IBasicProperties.Persistent*
  name: Persistent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Persistent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Persistent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Persistent
  nameWithType: IBasicProperties.Persistent
- uid: RabbitMQ.Client.IBasicProperties.Priority
  name: Priority
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Priority
  commentId: P:RabbitMQ.Client.IBasicProperties.Priority
  fullName: RabbitMQ.Client.IBasicProperties.Priority
  nameWithType: IBasicProperties.Priority
- uid: RabbitMQ.Client.IBasicProperties.Priority*
  name: Priority
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Priority_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Priority
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Priority
  nameWithType: IBasicProperties.Priority
- uid: RabbitMQ.Client.IBasicProperties.ReplyTo
  name: ReplyTo
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyTo
  commentId: P:RabbitMQ.Client.IBasicProperties.ReplyTo
  fullName: RabbitMQ.Client.IBasicProperties.ReplyTo
  nameWithType: IBasicProperties.ReplyTo
- uid: RabbitMQ.Client.IBasicProperties.ReplyTo*
  name: ReplyTo
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyTo_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ReplyTo
  nameWithType: IBasicProperties.ReplyTo
- uid: RabbitMQ.Client.IBasicProperties.ReplyToAddress
  name: ReplyToAddress
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyToAddress
  commentId: P:RabbitMQ.Client.IBasicProperties.ReplyToAddress
  fullName: RabbitMQ.Client.IBasicProperties.ReplyToAddress
  nameWithType: IBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.IBasicProperties.ReplyToAddress*
  name: ReplyToAddress
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyToAddress_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ReplyToAddress
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ReplyToAddress
  nameWithType: IBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.IBasicProperties.Timestamp
  name: Timestamp
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Timestamp
  commentId: P:RabbitMQ.Client.IBasicProperties.Timestamp
  fullName: RabbitMQ.Client.IBasicProperties.Timestamp
  nameWithType: IBasicProperties.Timestamp
- uid: RabbitMQ.Client.IBasicProperties.Timestamp*
  name: Timestamp
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Timestamp_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Timestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Timestamp
  nameWithType: IBasicProperties.Timestamp
- uid: RabbitMQ.Client.IBasicProperties.Type
  name: Type
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Type
  commentId: P:RabbitMQ.Client.IBasicProperties.Type
  fullName: RabbitMQ.Client.IBasicProperties.Type
  nameWithType: IBasicProperties.Type
- uid: RabbitMQ.Client.IBasicProperties.Type*
  name: Type
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Type_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Type
  nameWithType: IBasicProperties.Type
- uid: RabbitMQ.Client.IBasicProperties.UserId
  name: UserId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_UserId
  commentId: P:RabbitMQ.Client.IBasicProperties.UserId
  fullName: RabbitMQ.Client.IBasicProperties.UserId
  nameWithType: IBasicProperties.UserId
- uid: RabbitMQ.Client.IBasicProperties.UserId*
  name: UserId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_UserId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.UserId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.UserId
  nameWithType: IBasicProperties.UserId
- uid: RabbitMQ.Client.IBasicPublishBatch
  name: IBasicPublishBatch
  href: api/RabbitMQ.Client.IBasicPublishBatch.html
  commentId: T:RabbitMQ.Client.IBasicPublishBatch
  fullName: RabbitMQ.Client.IBasicPublishBatch
  nameWithType: IBasicPublishBatch
- uid: RabbitMQ.Client.IBasicPublishBatch.Add(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  name: Add(String, String, Boolean, IBasicProperties, Byte[])
  href: api/RabbitMQ.Client.IBasicPublishBatch.html#RabbitMQ_Client_IBasicPublishBatch_Add_System_String_System_String_System_Boolean_RabbitMQ_Client_IBasicProperties_System_Byte___
  commentId: M:RabbitMQ.Client.IBasicPublishBatch.Add(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  name.vb: Add(String, String, Boolean, IBasicProperties, Byte())
  fullName: RabbitMQ.Client.IBasicPublishBatch.Add(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte[])
  fullName.vb: RabbitMQ.Client.IBasicPublishBatch.Add(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte())
  nameWithType: IBasicPublishBatch.Add(String, String, Boolean, IBasicProperties, Byte[])
  nameWithType.vb: IBasicPublishBatch.Add(String, String, Boolean, IBasicProperties, Byte())
- uid: RabbitMQ.Client.IBasicPublishBatch.Add*
  name: Add
  href: api/RabbitMQ.Client.IBasicPublishBatch.html#RabbitMQ_Client_IBasicPublishBatch_Add_
  commentId: Overload:RabbitMQ.Client.IBasicPublishBatch.Add
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicPublishBatch.Add
  nameWithType: IBasicPublishBatch.Add
- uid: RabbitMQ.Client.IBasicPublishBatch.Publish
  name: Publish()
  href: api/RabbitMQ.Client.IBasicPublishBatch.html#RabbitMQ_Client_IBasicPublishBatch_Publish
  commentId: M:RabbitMQ.Client.IBasicPublishBatch.Publish
  fullName: RabbitMQ.Client.IBasicPublishBatch.Publish()
  nameWithType: IBasicPublishBatch.Publish()
- uid: RabbitMQ.Client.IBasicPublishBatch.Publish*
  name: Publish
  href: api/RabbitMQ.Client.IBasicPublishBatch.html#RabbitMQ_Client_IBasicPublishBatch_Publish_
  commentId: Overload:RabbitMQ.Client.IBasicPublishBatch.Publish
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicPublishBatch.Publish
  nameWithType: IBasicPublishBatch.Publish
- uid: RabbitMQ.Client.IConnection
  name: IConnection
  href: api/RabbitMQ.Client.IConnection.html
  commentId: T:RabbitMQ.Client.IConnection
  fullName: RabbitMQ.Client.IConnection
  nameWithType: IConnection
- uid: RabbitMQ.Client.IConnection.Abort
  name: Abort()
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Abort
  commentId: M:RabbitMQ.Client.IConnection.Abort
  fullName: RabbitMQ.Client.IConnection.Abort()
  nameWithType: IConnection.Abort()
- uid: RabbitMQ.Client.IConnection.Abort(System.TimeSpan)
  name: Abort(TimeSpan)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Abort_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnection.Abort(System.TimeSpan)
  fullName: RabbitMQ.Client.IConnection.Abort(System.TimeSpan)
  nameWithType: IConnection.Abort(TimeSpan)
- uid: RabbitMQ.Client.IConnection.Abort(System.UInt16,System.String)
  name: Abort(UInt16, String)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Abort_System_UInt16_System_String_
  commentId: M:RabbitMQ.Client.IConnection.Abort(System.UInt16,System.String)
  fullName: RabbitMQ.Client.IConnection.Abort(System.UInt16, System.String)
  nameWithType: IConnection.Abort(UInt16, String)
- uid: RabbitMQ.Client.IConnection.Abort(System.UInt16,System.String,System.TimeSpan)
  name: Abort(UInt16, String, TimeSpan)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Abort_System_UInt16_System_String_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnection.Abort(System.UInt16,System.String,System.TimeSpan)
  fullName: RabbitMQ.Client.IConnection.Abort(System.UInt16, System.String, System.TimeSpan)
  nameWithType: IConnection.Abort(UInt16, String, TimeSpan)
- uid: RabbitMQ.Client.IConnection.Abort*
  name: Abort
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Abort_
  commentId: Overload:RabbitMQ.Client.IConnection.Abort
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Abort
  nameWithType: IConnection.Abort
- uid: RabbitMQ.Client.IConnection.CallbackException
  name: CallbackException
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CallbackException
  commentId: E:RabbitMQ.Client.IConnection.CallbackException
  fullName: RabbitMQ.Client.IConnection.CallbackException
  nameWithType: IConnection.CallbackException
- uid: RabbitMQ.Client.IConnection.ChannelMax
  name: ChannelMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ChannelMax
  commentId: P:RabbitMQ.Client.IConnection.ChannelMax
  fullName: RabbitMQ.Client.IConnection.ChannelMax
  nameWithType: IConnection.ChannelMax
- uid: RabbitMQ.Client.IConnection.ChannelMax*
  name: ChannelMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ChannelMax_
  commentId: Overload:RabbitMQ.Client.IConnection.ChannelMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ChannelMax
  nameWithType: IConnection.ChannelMax
- uid: RabbitMQ.Client.IConnection.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProperties
  commentId: P:RabbitMQ.Client.IConnection.ClientProperties
  fullName: RabbitMQ.Client.IConnection.ClientProperties
  nameWithType: IConnection.ClientProperties
- uid: RabbitMQ.Client.IConnection.ClientProperties*
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProperties_
  commentId: Overload:RabbitMQ.Client.IConnection.ClientProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ClientProperties
  nameWithType: IConnection.ClientProperties
- uid: RabbitMQ.Client.IConnection.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProvidedName
  commentId: P:RabbitMQ.Client.IConnection.ClientProvidedName
  fullName: RabbitMQ.Client.IConnection.ClientProvidedName
  nameWithType: IConnection.ClientProvidedName
- uid: RabbitMQ.Client.IConnection.ClientProvidedName*
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProvidedName_
  commentId: Overload:RabbitMQ.Client.IConnection.ClientProvidedName
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ClientProvidedName
  nameWithType: IConnection.ClientProvidedName
- uid: RabbitMQ.Client.IConnection.Close
  name: Close()
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Close
  commentId: M:RabbitMQ.Client.IConnection.Close
  fullName: RabbitMQ.Client.IConnection.Close()
  nameWithType: IConnection.Close()
- uid: RabbitMQ.Client.IConnection.Close(System.TimeSpan)
  name: Close(TimeSpan)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Close_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnection.Close(System.TimeSpan)
  fullName: RabbitMQ.Client.IConnection.Close(System.TimeSpan)
  nameWithType: IConnection.Close(TimeSpan)
- uid: RabbitMQ.Client.IConnection.Close(System.UInt16,System.String)
  name: Close(UInt16, String)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Close_System_UInt16_System_String_
  commentId: M:RabbitMQ.Client.IConnection.Close(System.UInt16,System.String)
  fullName: RabbitMQ.Client.IConnection.Close(System.UInt16, System.String)
  nameWithType: IConnection.Close(UInt16, String)
- uid: RabbitMQ.Client.IConnection.Close(System.UInt16,System.String,System.TimeSpan)
  name: Close(UInt16, String, TimeSpan)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Close_System_UInt16_System_String_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnection.Close(System.UInt16,System.String,System.TimeSpan)
  fullName: RabbitMQ.Client.IConnection.Close(System.UInt16, System.String, System.TimeSpan)
  nameWithType: IConnection.Close(UInt16, String, TimeSpan)
- uid: RabbitMQ.Client.IConnection.Close*
  name: Close
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Close_
  commentId: Overload:RabbitMQ.Client.IConnection.Close
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Close
  nameWithType: IConnection.Close
- uid: RabbitMQ.Client.IConnection.CloseReason
  name: CloseReason
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CloseReason
  commentId: P:RabbitMQ.Client.IConnection.CloseReason
  fullName: RabbitMQ.Client.IConnection.CloseReason
  nameWithType: IConnection.CloseReason
- uid: RabbitMQ.Client.IConnection.CloseReason*
  name: CloseReason
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CloseReason_
  commentId: Overload:RabbitMQ.Client.IConnection.CloseReason
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.CloseReason
  nameWithType: IConnection.CloseReason
- uid: RabbitMQ.Client.IConnection.ConnectionBlocked
  name: ConnectionBlocked
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionBlocked
  commentId: E:RabbitMQ.Client.IConnection.ConnectionBlocked
  fullName: RabbitMQ.Client.IConnection.ConnectionBlocked
  nameWithType: IConnection.ConnectionBlocked
- uid: RabbitMQ.Client.IConnection.ConnectionShutdown
  name: ConnectionShutdown
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionShutdown
  commentId: E:RabbitMQ.Client.IConnection.ConnectionShutdown
  fullName: RabbitMQ.Client.IConnection.ConnectionShutdown
  nameWithType: IConnection.ConnectionShutdown
- uid: RabbitMQ.Client.IConnection.ConnectionUnblocked
  name: ConnectionUnblocked
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionUnblocked
  commentId: E:RabbitMQ.Client.IConnection.ConnectionUnblocked
  fullName: RabbitMQ.Client.IConnection.ConnectionUnblocked
  nameWithType: IConnection.ConnectionUnblocked
- uid: RabbitMQ.Client.IConnection.CreateModel
  name: CreateModel()
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CreateModel
  commentId: M:RabbitMQ.Client.IConnection.CreateModel
  fullName: RabbitMQ.Client.IConnection.CreateModel()
  nameWithType: IConnection.CreateModel()
- uid: RabbitMQ.Client.IConnection.CreateModel*
  name: CreateModel
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CreateModel_
  commentId: Overload:RabbitMQ.Client.IConnection.CreateModel
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.CreateModel
  nameWithType: IConnection.CreateModel
- uid: RabbitMQ.Client.IConnection.Endpoint
  name: Endpoint
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Endpoint
  commentId: P:RabbitMQ.Client.IConnection.Endpoint
  fullName: RabbitMQ.Client.IConnection.Endpoint
  nameWithType: IConnection.Endpoint
- uid: RabbitMQ.Client.IConnection.Endpoint*
  name: Endpoint
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Endpoint_
  commentId: Overload:RabbitMQ.Client.IConnection.Endpoint
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Endpoint
  nameWithType: IConnection.Endpoint
- uid: RabbitMQ.Client.IConnection.FrameMax
  name: FrameMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_FrameMax
  commentId: P:RabbitMQ.Client.IConnection.FrameMax
  fullName: RabbitMQ.Client.IConnection.FrameMax
  nameWithType: IConnection.FrameMax
- uid: RabbitMQ.Client.IConnection.FrameMax*
  name: FrameMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_FrameMax_
  commentId: Overload:RabbitMQ.Client.IConnection.FrameMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.FrameMax
  nameWithType: IConnection.FrameMax
- uid: RabbitMQ.Client.IConnection.HandleConnectionBlocked(System.String)
  name: HandleConnectionBlocked(String)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_HandleConnectionBlocked_System_String_
  commentId: M:RabbitMQ.Client.IConnection.HandleConnectionBlocked(System.String)
  fullName: RabbitMQ.Client.IConnection.HandleConnectionBlocked(System.String)
  nameWithType: IConnection.HandleConnectionBlocked(String)
- uid: RabbitMQ.Client.IConnection.HandleConnectionBlocked*
  name: HandleConnectionBlocked
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_HandleConnectionBlocked_
  commentId: Overload:RabbitMQ.Client.IConnection.HandleConnectionBlocked
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.HandleConnectionBlocked
  nameWithType: IConnection.HandleConnectionBlocked
- uid: RabbitMQ.Client.IConnection.HandleConnectionUnblocked
  name: HandleConnectionUnblocked()
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_HandleConnectionUnblocked
  commentId: M:RabbitMQ.Client.IConnection.HandleConnectionUnblocked
  fullName: RabbitMQ.Client.IConnection.HandleConnectionUnblocked()
  nameWithType: IConnection.HandleConnectionUnblocked()
- uid: RabbitMQ.Client.IConnection.HandleConnectionUnblocked*
  name: HandleConnectionUnblocked
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_HandleConnectionUnblocked_
  commentId: Overload:RabbitMQ.Client.IConnection.HandleConnectionUnblocked
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.HandleConnectionUnblocked
  nameWithType: IConnection.HandleConnectionUnblocked
- uid: RabbitMQ.Client.IConnection.Heartbeat
  name: Heartbeat
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Heartbeat
  commentId: P:RabbitMQ.Client.IConnection.Heartbeat
  fullName: RabbitMQ.Client.IConnection.Heartbeat
  nameWithType: IConnection.Heartbeat
- uid: RabbitMQ.Client.IConnection.Heartbeat*
  name: Heartbeat
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Heartbeat_
  commentId: Overload:RabbitMQ.Client.IConnection.Heartbeat
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Heartbeat
  nameWithType: IConnection.Heartbeat
- uid: RabbitMQ.Client.IConnection.IsOpen
  name: IsOpen
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_IsOpen
  commentId: P:RabbitMQ.Client.IConnection.IsOpen
  fullName: RabbitMQ.Client.IConnection.IsOpen
  nameWithType: IConnection.IsOpen
- uid: RabbitMQ.Client.IConnection.IsOpen*
  name: IsOpen
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_IsOpen_
  commentId: Overload:RabbitMQ.Client.IConnection.IsOpen
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.IsOpen
  nameWithType: IConnection.IsOpen
- uid: RabbitMQ.Client.IConnection.KnownHosts
  name: KnownHosts
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_KnownHosts
  commentId: P:RabbitMQ.Client.IConnection.KnownHosts
  fullName: RabbitMQ.Client.IConnection.KnownHosts
  nameWithType: IConnection.KnownHosts
- uid: RabbitMQ.Client.IConnection.KnownHosts*
  name: KnownHosts
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_KnownHosts_
  commentId: Overload:RabbitMQ.Client.IConnection.KnownHosts
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.KnownHosts
  nameWithType: IConnection.KnownHosts
- uid: RabbitMQ.Client.IConnection.Protocol
  name: Protocol
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Protocol
  commentId: P:RabbitMQ.Client.IConnection.Protocol
  fullName: RabbitMQ.Client.IConnection.Protocol
  nameWithType: IConnection.Protocol
- uid: RabbitMQ.Client.IConnection.Protocol*
  name: Protocol
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Protocol_
  commentId: Overload:RabbitMQ.Client.IConnection.Protocol
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Protocol
  nameWithType: IConnection.Protocol
- uid: RabbitMQ.Client.IConnection.ServerProperties
  name: ServerProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ServerProperties
  commentId: P:RabbitMQ.Client.IConnection.ServerProperties
  fullName: RabbitMQ.Client.IConnection.ServerProperties
  nameWithType: IConnection.ServerProperties
- uid: RabbitMQ.Client.IConnection.ServerProperties*
  name: ServerProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ServerProperties_
  commentId: Overload:RabbitMQ.Client.IConnection.ServerProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ServerProperties
  nameWithType: IConnection.ServerProperties
- uid: RabbitMQ.Client.IConnection.ShutdownReport
  name: ShutdownReport
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ShutdownReport
  commentId: P:RabbitMQ.Client.IConnection.ShutdownReport
  fullName: RabbitMQ.Client.IConnection.ShutdownReport
  nameWithType: IConnection.ShutdownReport
- uid: RabbitMQ.Client.IConnection.ShutdownReport*
  name: ShutdownReport
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ShutdownReport_
  commentId: Overload:RabbitMQ.Client.IConnection.ShutdownReport
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ShutdownReport
  nameWithType: IConnection.ShutdownReport
- uid: RabbitMQ.Client.IConnection.UpdateSecret(System.String,System.String)
  name: UpdateSecret(String, String)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_UpdateSecret_System_String_System_String_
  commentId: M:RabbitMQ.Client.IConnection.UpdateSecret(System.String,System.String)
  fullName: RabbitMQ.Client.IConnection.UpdateSecret(System.String, System.String)
  nameWithType: IConnection.UpdateSecret(String, String)
- uid: RabbitMQ.Client.IConnection.UpdateSecret*
  name: UpdateSecret
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_UpdateSecret_
  commentId: Overload:RabbitMQ.Client.IConnection.UpdateSecret
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.UpdateSecret
  nameWithType: IConnection.UpdateSecret
- uid: RabbitMQ.Client.IConnectionFactory
  name: IConnectionFactory
  href: api/RabbitMQ.Client.IConnectionFactory.html
  commentId: T:RabbitMQ.Client.IConnectionFactory
  fullName: RabbitMQ.Client.IConnectionFactory
  nameWithType: IConnectionFactory
- uid: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList{System.String})
  name: AuthMechanismFactory(IList<String>)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_AuthMechanismFactory_System_Collections_Generic_IList_System_String__
  commentId: M:RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList{System.String})
  name.vb: AuthMechanismFactory(IList(Of String))
  fullName: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList<System.String>)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IList(Of System.String))
  nameWithType: IConnectionFactory.AuthMechanismFactory(IList<String>)
  nameWithType.vb: IConnectionFactory.AuthMechanismFactory(IList(Of String))
- uid: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory*
  name: AuthMechanismFactory
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_AuthMechanismFactory_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory
  nameWithType: IConnectionFactory.AuthMechanismFactory
- uid: RabbitMQ.Client.IConnectionFactory.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProperties
  commentId: P:RabbitMQ.Client.IConnectionFactory.ClientProperties
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProperties
  nameWithType: IConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.IConnectionFactory.ClientProperties*
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProperties_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ClientProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProperties
  nameWithType: IConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProvidedName
  commentId: P:RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  nameWithType: IConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.IConnectionFactory.ClientProvidedName*
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProvidedName_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  nameWithType: IConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ContinuationTimeout
  commentId: P:RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  fullName: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  nameWithType: IConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout*
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  nameWithType: IConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection
  name: CreateConnection()
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnection
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection()
  nameWithType: IConnectionFactory.CreateConnection()
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint})
  name: CreateConnection(IList<AmqpTcpEndpoint>)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection_System_Collections_Generic_IList_RabbitMQ_Client_AmqpTcpEndpoint__
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint})
  name.vb: CreateConnection(IList(Of AmqpTcpEndpoint))
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList<RabbitMQ.Client.AmqpTcpEndpoint>)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of RabbitMQ.Client.AmqpTcpEndpoint))
  nameWithType: IConnectionFactory.CreateConnection(IList<AmqpTcpEndpoint>)
  nameWithType.vb: IConnectionFactory.CreateConnection(IList(Of AmqpTcpEndpoint))
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint},System.String)
  name: CreateConnection(IList<AmqpTcpEndpoint>, String)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection_System_Collections_Generic_IList_RabbitMQ_Client_AmqpTcpEndpoint__System_String_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{RabbitMQ.Client.AmqpTcpEndpoint},System.String)
  name.vb: CreateConnection(IList(Of AmqpTcpEndpoint), String)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList<RabbitMQ.Client.AmqpTcpEndpoint>, System.String)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of RabbitMQ.Client.AmqpTcpEndpoint), System.String)
  nameWithType: IConnectionFactory.CreateConnection(IList<AmqpTcpEndpoint>, String)
  nameWithType.vb: IConnectionFactory.CreateConnection(IList(Of AmqpTcpEndpoint), String)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String})
  name: CreateConnection(IList<String>)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection_System_Collections_Generic_IList_System_String__
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String})
  name.vb: CreateConnection(IList(Of String))
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList<System.String>)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of System.String))
  nameWithType: IConnectionFactory.CreateConnection(IList<String>)
  nameWithType.vb: IConnectionFactory.CreateConnection(IList(Of String))
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String},System.String)
  name: CreateConnection(IList<String>, String)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection_System_Collections_Generic_IList_System_String__System_String_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList{System.String},System.String)
  name.vb: CreateConnection(IList(Of String), String)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList<System.String>, System.String)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.Collections.Generic.IList(Of System.String), System.String)
  nameWithType: IConnectionFactory.CreateConnection(IList<String>, String)
  nameWithType.vb: IConnectionFactory.CreateConnection(IList(Of String), String)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.String)
  name: CreateConnection(String)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection_System_String_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnection(System.String)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection(System.String)
  nameWithType: IConnectionFactory.CreateConnection(String)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnection*
  name: CreateConnection
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnection_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.CreateConnection
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnection
  nameWithType: IConnectionFactory.CreateConnection
- uid: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_HandshakeContinuationTimeout
  commentId: P:RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  fullName: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  nameWithType: IConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout*
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_HandshakeContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  nameWithType: IConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.Password
  name: Password
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Password
  commentId: P:RabbitMQ.Client.IConnectionFactory.Password
  fullName: RabbitMQ.Client.IConnectionFactory.Password
  nameWithType: IConnectionFactory.Password
- uid: RabbitMQ.Client.IConnectionFactory.Password*
  name: Password
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Password_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.Password
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.Password
  nameWithType: IConnectionFactory.Password
- uid: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedChannelMax
  commentId: P:RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  nameWithType: IConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax*
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedChannelMax_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  nameWithType: IConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedFrameMax
  commentId: P:RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  nameWithType: IConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax*
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedFrameMax_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  nameWithType: IConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedHeartbeat
  commentId: P:RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  nameWithType: IConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat*
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedHeartbeat_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  nameWithType: IConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.IConnectionFactory.Uri
  name: Uri
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Uri
  commentId: P:RabbitMQ.Client.IConnectionFactory.Uri
  fullName: RabbitMQ.Client.IConnectionFactory.Uri
  nameWithType: IConnectionFactory.Uri
- uid: RabbitMQ.Client.IConnectionFactory.Uri*
  name: Uri
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Uri_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.Uri
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.Uri
  nameWithType: IConnectionFactory.Uri
- uid: RabbitMQ.Client.IConnectionFactory.UseBackgroundThreadsForIO
  name: UseBackgroundThreadsForIO
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_UseBackgroundThreadsForIO
  commentId: P:RabbitMQ.Client.IConnectionFactory.UseBackgroundThreadsForIO
  fullName: RabbitMQ.Client.IConnectionFactory.UseBackgroundThreadsForIO
  nameWithType: IConnectionFactory.UseBackgroundThreadsForIO
- uid: RabbitMQ.Client.IConnectionFactory.UseBackgroundThreadsForIO*
  name: UseBackgroundThreadsForIO
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_UseBackgroundThreadsForIO_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.UseBackgroundThreadsForIO
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.UseBackgroundThreadsForIO
  nameWithType: IConnectionFactory.UseBackgroundThreadsForIO
- uid: RabbitMQ.Client.IConnectionFactory.UserName
  name: UserName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_UserName
  commentId: P:RabbitMQ.Client.IConnectionFactory.UserName
  fullName: RabbitMQ.Client.IConnectionFactory.UserName
  nameWithType: IConnectionFactory.UserName
- uid: RabbitMQ.Client.IConnectionFactory.UserName*
  name: UserName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_UserName_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.UserName
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.UserName
  nameWithType: IConnectionFactory.UserName
- uid: RabbitMQ.Client.IConnectionFactory.VirtualHost
  name: VirtualHost
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_VirtualHost
  commentId: P:RabbitMQ.Client.IConnectionFactory.VirtualHost
  fullName: RabbitMQ.Client.IConnectionFactory.VirtualHost
  nameWithType: IConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.IConnectionFactory.VirtualHost*
  name: VirtualHost
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_VirtualHost_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.VirtualHost
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.VirtualHost
  nameWithType: IConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.IContentHeader
  name: IContentHeader
  href: api/RabbitMQ.Client.IContentHeader.html
  commentId: T:RabbitMQ.Client.IContentHeader
  fullName: RabbitMQ.Client.IContentHeader
  nameWithType: IContentHeader
- uid: RabbitMQ.Client.IContentHeader.ProtocolClassId
  name: ProtocolClassId
  href: api/RabbitMQ.Client.IContentHeader.html#RabbitMQ_Client_IContentHeader_ProtocolClassId
  commentId: P:RabbitMQ.Client.IContentHeader.ProtocolClassId
  fullName: RabbitMQ.Client.IContentHeader.ProtocolClassId
  nameWithType: IContentHeader.ProtocolClassId
- uid: RabbitMQ.Client.IContentHeader.ProtocolClassId*
  name: ProtocolClassId
  href: api/RabbitMQ.Client.IContentHeader.html#RabbitMQ_Client_IContentHeader_ProtocolClassId_
  commentId: Overload:RabbitMQ.Client.IContentHeader.ProtocolClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.IContentHeader.ProtocolClassId
  nameWithType: IContentHeader.ProtocolClassId
- uid: RabbitMQ.Client.IContentHeader.ProtocolClassName
  name: ProtocolClassName
  href: api/RabbitMQ.Client.IContentHeader.html#RabbitMQ_Client_IContentHeader_ProtocolClassName
  commentId: P:RabbitMQ.Client.IContentHeader.ProtocolClassName
  fullName: RabbitMQ.Client.IContentHeader.ProtocolClassName
  nameWithType: IContentHeader.ProtocolClassName
- uid: RabbitMQ.Client.IContentHeader.ProtocolClassName*
  name: ProtocolClassName
  href: api/RabbitMQ.Client.IContentHeader.html#RabbitMQ_Client_IContentHeader_ProtocolClassName_
  commentId: Overload:RabbitMQ.Client.IContentHeader.ProtocolClassName
  isSpec: "True"
  fullName: RabbitMQ.Client.IContentHeader.ProtocolClassName
  nameWithType: IContentHeader.ProtocolClassName
- uid: RabbitMQ.Client.IEndpointResolver
  name: IEndpointResolver
  href: api/RabbitMQ.Client.IEndpointResolver.html
  commentId: T:RabbitMQ.Client.IEndpointResolver
  fullName: RabbitMQ.Client.IEndpointResolver
  nameWithType: IEndpointResolver
- uid: RabbitMQ.Client.IEndpointResolver.All
  name: All()
  href: api/RabbitMQ.Client.IEndpointResolver.html#RabbitMQ_Client_IEndpointResolver_All
  commentId: M:RabbitMQ.Client.IEndpointResolver.All
  fullName: RabbitMQ.Client.IEndpointResolver.All()
  nameWithType: IEndpointResolver.All()
- uid: RabbitMQ.Client.IEndpointResolver.All*
  name: All
  href: api/RabbitMQ.Client.IEndpointResolver.html#RabbitMQ_Client_IEndpointResolver_All_
  commentId: Overload:RabbitMQ.Client.IEndpointResolver.All
  isSpec: "True"
  fullName: RabbitMQ.Client.IEndpointResolver.All
  nameWithType: IEndpointResolver.All
- uid: RabbitMQ.Client.IMethod
  name: IMethod
  href: api/RabbitMQ.Client.IMethod.html
  commentId: T:RabbitMQ.Client.IMethod
  fullName: RabbitMQ.Client.IMethod
  nameWithType: IMethod
- uid: RabbitMQ.Client.IMethod.ProtocolClassId
  name: ProtocolClassId
  href: api/RabbitMQ.Client.IMethod.html#RabbitMQ_Client_IMethod_ProtocolClassId
  commentId: P:RabbitMQ.Client.IMethod.ProtocolClassId
  fullName: RabbitMQ.Client.IMethod.ProtocolClassId
  nameWithType: IMethod.ProtocolClassId
- uid: RabbitMQ.Client.IMethod.ProtocolClassId*
  name: ProtocolClassId
  href: api/RabbitMQ.Client.IMethod.html#RabbitMQ_Client_IMethod_ProtocolClassId_
  commentId: Overload:RabbitMQ.Client.IMethod.ProtocolClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.IMethod.ProtocolClassId
  nameWithType: IMethod.ProtocolClassId
- uid: RabbitMQ.Client.IMethod.ProtocolMethodId
  name: ProtocolMethodId
  href: api/RabbitMQ.Client.IMethod.html#RabbitMQ_Client_IMethod_ProtocolMethodId
  commentId: P:RabbitMQ.Client.IMethod.ProtocolMethodId
  fullName: RabbitMQ.Client.IMethod.ProtocolMethodId
  nameWithType: IMethod.ProtocolMethodId
- uid: RabbitMQ.Client.IMethod.ProtocolMethodId*
  name: ProtocolMethodId
  href: api/RabbitMQ.Client.IMethod.html#RabbitMQ_Client_IMethod_ProtocolMethodId_
  commentId: Overload:RabbitMQ.Client.IMethod.ProtocolMethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.IMethod.ProtocolMethodId
  nameWithType: IMethod.ProtocolMethodId
- uid: RabbitMQ.Client.IMethod.ProtocolMethodName
  name: ProtocolMethodName
  href: api/RabbitMQ.Client.IMethod.html#RabbitMQ_Client_IMethod_ProtocolMethodName
  commentId: P:RabbitMQ.Client.IMethod.ProtocolMethodName
  fullName: RabbitMQ.Client.IMethod.ProtocolMethodName
  nameWithType: IMethod.ProtocolMethodName
- uid: RabbitMQ.Client.IMethod.ProtocolMethodName*
  name: ProtocolMethodName
  href: api/RabbitMQ.Client.IMethod.html#RabbitMQ_Client_IMethod_ProtocolMethodName_
  commentId: Overload:RabbitMQ.Client.IMethod.ProtocolMethodName
  isSpec: "True"
  fullName: RabbitMQ.Client.IMethod.ProtocolMethodName
  nameWithType: IMethod.ProtocolMethodName
- uid: RabbitMQ.Client.IModel
  name: IModel
  href: api/RabbitMQ.Client.IModel.html
  commentId: T:RabbitMQ.Client.IModel
  fullName: RabbitMQ.Client.IModel
  nameWithType: IModel
- uid: RabbitMQ.Client.IModel.Abort
  name: Abort()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_Abort
  commentId: M:RabbitMQ.Client.IModel.Abort
  fullName: RabbitMQ.Client.IModel.Abort()
  nameWithType: IModel.Abort()
- uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  name: Abort(UInt16, String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_Abort_System_UInt16_System_String_
  commentId: M:RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  fullName: RabbitMQ.Client.IModel.Abort(System.UInt16, System.String)
  nameWithType: IModel.Abort(UInt16, String)
- uid: RabbitMQ.Client.IModel.Abort*
  name: Abort
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_Abort_
  commentId: Overload:RabbitMQ.Client.IModel.Abort
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.Abort
  nameWithType: IModel.Abort
- uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  name: BasicAck(UInt64, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicAck_System_UInt64_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicAck(System.UInt64, System.Boolean)
  nameWithType: IModel.BasicAck(UInt64, Boolean)
- uid: RabbitMQ.Client.IModel.BasicAck*
  name: BasicAck
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicAck_
  commentId: Overload:RabbitMQ.Client.IModel.BasicAck
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicAck
  nameWithType: IModel.BasicAck
- uid: RabbitMQ.Client.IModel.BasicAcks
  name: BasicAcks
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicAcks
  commentId: E:RabbitMQ.Client.IModel.BasicAcks
  fullName: RabbitMQ.Client.IModel.BasicAcks
  nameWithType: IModel.BasicAcks
- uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
  name: BasicCancel(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicCancel_System_String_
  commentId: M:RabbitMQ.Client.IModel.BasicCancel(System.String)
  fullName: RabbitMQ.Client.IModel.BasicCancel(System.String)
  nameWithType: IModel.BasicCancel(String)
- uid: RabbitMQ.Client.IModel.BasicCancel*
  name: BasicCancel
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicCancel_
  commentId: Overload:RabbitMQ.Client.IModel.BasicCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicCancel
  nameWithType: IModel.BasicCancel
- uid: RabbitMQ.Client.IModel.BasicCancelNoWait(System.String)
  name: BasicCancelNoWait(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicCancelNoWait_System_String_
  commentId: M:RabbitMQ.Client.IModel.BasicCancelNoWait(System.String)
  fullName: RabbitMQ.Client.IModel.BasicCancelNoWait(System.String)
  nameWithType: IModel.BasicCancelNoWait(String)
- uid: RabbitMQ.Client.IModel.BasicCancelNoWait*
  name: BasicCancelNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicCancelNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.BasicCancelNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicCancelNoWait
  nameWithType: IModel.BasicCancelNoWait
- uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  name: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicConsume_System_String_System_Boolean_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__RabbitMQ_Client_IBasicConsumer_
  commentId: M:RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  name.vb: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
  fullName: RabbitMQ.Client.IModel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>, RabbitMQ.Client.IBasicConsumer)
  fullName.vb: RabbitMQ.Client.IModel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object), RabbitMQ.Client.IBasicConsumer)
  nameWithType: IModel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  nameWithType.vb: IModel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
- uid: RabbitMQ.Client.IModel.BasicConsume*
  name: BasicConsume
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicConsume_
  commentId: Overload:RabbitMQ.Client.IModel.BasicConsume
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicConsume
  nameWithType: IModel.BasicConsume
- uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  name: BasicGet(String, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicGet_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicGet(System.String, System.Boolean)
  nameWithType: IModel.BasicGet(String, Boolean)
- uid: RabbitMQ.Client.IModel.BasicGet*
  name: BasicGet
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicGet_
  commentId: Overload:RabbitMQ.Client.IModel.BasicGet
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicGet
  nameWithType: IModel.BasicGet
- uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  name: BasicNack(UInt64, Boolean, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicNack_System_UInt64_System_Boolean_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicNack(System.UInt64, System.Boolean, System.Boolean)
  nameWithType: IModel.BasicNack(UInt64, Boolean, Boolean)
- uid: RabbitMQ.Client.IModel.BasicNack*
  name: BasicNack
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicNack_
  commentId: Overload:RabbitMQ.Client.IModel.BasicNack
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicNack
  nameWithType: IModel.BasicNack
- uid: RabbitMQ.Client.IModel.BasicNacks
  name: BasicNacks
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicNacks
  commentId: E:RabbitMQ.Client.IModel.BasicNacks
  fullName: RabbitMQ.Client.IModel.BasicNacks
  nameWithType: IModel.BasicNacks
- uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicPublish(String, String, Boolean, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicPublish_System_String_System_String_System_Boolean_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: BasicPublish(String, String, Boolean, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.IModel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.IModel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: IModel.BasicPublish(String, String, Boolean, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: IModel.BasicPublish(String, String, Boolean, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.IModel.BasicPublish*
  name: BasicPublish
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicPublish_
  commentId: Overload:RabbitMQ.Client.IModel.BasicPublish
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicPublish
  nameWithType: IModel.BasicPublish
- uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  name: BasicQos(UInt32, UInt16, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicQos_System_UInt32_System_UInt16_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicQos(System.UInt32, System.UInt16, System.Boolean)
  nameWithType: IModel.BasicQos(UInt32, UInt16, Boolean)
- uid: RabbitMQ.Client.IModel.BasicQos*
  name: BasicQos
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicQos_
  commentId: Overload:RabbitMQ.Client.IModel.BasicQos
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicQos
  nameWithType: IModel.BasicQos
- uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  name: BasicRecover(Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicRecover_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  nameWithType: IModel.BasicRecover(Boolean)
- uid: RabbitMQ.Client.IModel.BasicRecover*
  name: BasicRecover
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicRecover_
  commentId: Overload:RabbitMQ.Client.IModel.BasicRecover
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicRecover
  nameWithType: IModel.BasicRecover
- uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  name: BasicRecoverAsync(Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicRecoverAsync_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  nameWithType: IModel.BasicRecoverAsync(Boolean)
- uid: RabbitMQ.Client.IModel.BasicRecoverAsync*
  name: BasicRecoverAsync
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicRecoverAsync_
  commentId: Overload:RabbitMQ.Client.IModel.BasicRecoverAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicRecoverAsync
  nameWithType: IModel.BasicRecoverAsync
- uid: RabbitMQ.Client.IModel.BasicRecoverOk
  name: BasicRecoverOk
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicRecoverOk
  commentId: E:RabbitMQ.Client.IModel.BasicRecoverOk
  fullName: RabbitMQ.Client.IModel.BasicRecoverOk
  nameWithType: IModel.BasicRecoverOk
- uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  name: BasicReject(UInt64, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicReject_System_UInt64_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  fullName: RabbitMQ.Client.IModel.BasicReject(System.UInt64, System.Boolean)
  nameWithType: IModel.BasicReject(UInt64, Boolean)
- uid: RabbitMQ.Client.IModel.BasicReject*
  name: BasicReject
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicReject_
  commentId: Overload:RabbitMQ.Client.IModel.BasicReject
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.BasicReject
  nameWithType: IModel.BasicReject
- uid: RabbitMQ.Client.IModel.BasicReturn
  name: BasicReturn
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_BasicReturn
  commentId: E:RabbitMQ.Client.IModel.BasicReturn
  fullName: RabbitMQ.Client.IModel.BasicReturn
  nameWithType: IModel.BasicReturn
- uid: RabbitMQ.Client.IModel.CallbackException
  name: CallbackException
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CallbackException
  commentId: E:RabbitMQ.Client.IModel.CallbackException
  fullName: RabbitMQ.Client.IModel.CallbackException
  nameWithType: IModel.CallbackException
- uid: RabbitMQ.Client.IModel.ChannelNumber
  name: ChannelNumber
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ChannelNumber
  commentId: P:RabbitMQ.Client.IModel.ChannelNumber
  fullName: RabbitMQ.Client.IModel.ChannelNumber
  nameWithType: IModel.ChannelNumber
- uid: RabbitMQ.Client.IModel.ChannelNumber*
  name: ChannelNumber
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ChannelNumber_
  commentId: Overload:RabbitMQ.Client.IModel.ChannelNumber
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ChannelNumber
  nameWithType: IModel.ChannelNumber
- uid: RabbitMQ.Client.IModel.Close
  name: Close()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_Close
  commentId: M:RabbitMQ.Client.IModel.Close
  fullName: RabbitMQ.Client.IModel.Close()
  nameWithType: IModel.Close()
- uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  name: Close(UInt16, String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_Close_System_UInt16_System_String_
  commentId: M:RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  fullName: RabbitMQ.Client.IModel.Close(System.UInt16, System.String)
  nameWithType: IModel.Close(UInt16, String)
- uid: RabbitMQ.Client.IModel.Close*
  name: Close
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_Close_
  commentId: Overload:RabbitMQ.Client.IModel.Close
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.Close
  nameWithType: IModel.Close
- uid: RabbitMQ.Client.IModel.CloseReason
  name: CloseReason
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CloseReason
  commentId: P:RabbitMQ.Client.IModel.CloseReason
  fullName: RabbitMQ.Client.IModel.CloseReason
  nameWithType: IModel.CloseReason
- uid: RabbitMQ.Client.IModel.CloseReason*
  name: CloseReason
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CloseReason_
  commentId: Overload:RabbitMQ.Client.IModel.CloseReason
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.CloseReason
  nameWithType: IModel.CloseReason
- uid: RabbitMQ.Client.IModel.ConfirmSelect
  name: ConfirmSelect()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ConfirmSelect
  commentId: M:RabbitMQ.Client.IModel.ConfirmSelect
  fullName: RabbitMQ.Client.IModel.ConfirmSelect()
  nameWithType: IModel.ConfirmSelect()
- uid: RabbitMQ.Client.IModel.ConfirmSelect*
  name: ConfirmSelect
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ConfirmSelect_
  commentId: Overload:RabbitMQ.Client.IModel.ConfirmSelect
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ConfirmSelect
  nameWithType: IModel.ConfirmSelect
- uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
  name: ConsumerCount(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ConsumerCount_System_String_
  commentId: M:RabbitMQ.Client.IModel.ConsumerCount(System.String)
  fullName: RabbitMQ.Client.IModel.ConsumerCount(System.String)
  nameWithType: IModel.ConsumerCount(String)
- uid: RabbitMQ.Client.IModel.ConsumerCount*
  name: ConsumerCount
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ConsumerCount_
  commentId: Overload:RabbitMQ.Client.IModel.ConsumerCount
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ConsumerCount
  nameWithType: IModel.ConsumerCount
- uid: RabbitMQ.Client.IModel.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ContinuationTimeout
  commentId: P:RabbitMQ.Client.IModel.ContinuationTimeout
  fullName: RabbitMQ.Client.IModel.ContinuationTimeout
  nameWithType: IModel.ContinuationTimeout
- uid: RabbitMQ.Client.IModel.ContinuationTimeout*
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.IModel.ContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ContinuationTimeout
  nameWithType: IModel.ContinuationTimeout
- uid: RabbitMQ.Client.IModel.CreateBasicProperties
  name: CreateBasicProperties()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CreateBasicProperties
  commentId: M:RabbitMQ.Client.IModel.CreateBasicProperties
  fullName: RabbitMQ.Client.IModel.CreateBasicProperties()
  nameWithType: IModel.CreateBasicProperties()
- uid: RabbitMQ.Client.IModel.CreateBasicProperties*
  name: CreateBasicProperties
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CreateBasicProperties_
  commentId: Overload:RabbitMQ.Client.IModel.CreateBasicProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.CreateBasicProperties
  nameWithType: IModel.CreateBasicProperties
- uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
  name: CreateBasicPublishBatch()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CreateBasicPublishBatch
  commentId: M:RabbitMQ.Client.IModel.CreateBasicPublishBatch
  fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch()
  nameWithType: IModel.CreateBasicPublishBatch()
- uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch*
  name: CreateBasicPublishBatch
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_CreateBasicPublishBatch_
  commentId: Overload:RabbitMQ.Client.IModel.CreateBasicPublishBatch
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch
  nameWithType: IModel.CreateBasicPublishBatch
- uid: RabbitMQ.Client.IModel.DefaultConsumer
  name: DefaultConsumer
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_DefaultConsumer
  commentId: P:RabbitMQ.Client.IModel.DefaultConsumer
  fullName: RabbitMQ.Client.IModel.DefaultConsumer
  nameWithType: IModel.DefaultConsumer
- uid: RabbitMQ.Client.IModel.DefaultConsumer*
  name: DefaultConsumer
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_DefaultConsumer_
  commentId: Overload:RabbitMQ.Client.IModel.DefaultConsumer
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.DefaultConsumer
  nameWithType: IModel.DefaultConsumer
- uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeBind(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeBind_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeBind(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.ExchangeBind(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.ExchangeBind(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.ExchangeBind*
  name: ExchangeBind
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeBind_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeBind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeBind
  nameWithType: IModel.ExchangeBind
- uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeBindNoWait_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.ExchangeBindNoWait*
  name: ExchangeBindNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeBindNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeBindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait
  nameWithType: IModel.ExchangeBindNoWait
- uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeclare_System_String_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.ExchangeDeclare*
  name: ExchangeDeclare
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeclare_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeDeclare
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeDeclare
  nameWithType: IModel.ExchangeDeclare
- uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeclareNoWait_System_String_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait*
  name: ExchangeDeclareNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeclareNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeDeclareNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait
  nameWithType: IModel.ExchangeDeclareNoWait
- uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  name: ExchangeDeclarePassive(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeclarePassive_System_String_
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  nameWithType: IModel.ExchangeDeclarePassive(String)
- uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive*
  name: ExchangeDeclarePassive
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeclarePassive_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeDeclarePassive
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive
  nameWithType: IModel.ExchangeDeclarePassive
- uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  name: ExchangeDelete(String, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDelete_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  fullName: RabbitMQ.Client.IModel.ExchangeDelete(System.String, System.Boolean)
  nameWithType: IModel.ExchangeDelete(String, Boolean)
- uid: RabbitMQ.Client.IModel.ExchangeDelete*
  name: ExchangeDelete
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDelete_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeDelete
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeDelete
  nameWithType: IModel.ExchangeDelete
- uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  name: ExchangeDeleteNoWait(String, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeleteNoWait_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String, System.Boolean)
  nameWithType: IModel.ExchangeDeleteNoWait(String, Boolean)
- uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait*
  name: ExchangeDeleteNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeDeleteNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeDeleteNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait
  nameWithType: IModel.ExchangeDeleteNoWait
- uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeUnbind_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.ExchangeUnbind*
  name: ExchangeUnbind
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeUnbind_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeUnbind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeUnbind
  nameWithType: IModel.ExchangeUnbind
- uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeUnbindNoWait_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait*
  name: ExchangeUnbindNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ExchangeUnbindNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.ExchangeUnbindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait
  nameWithType: IModel.ExchangeUnbindNoWait
- uid: RabbitMQ.Client.IModel.FlowControl
  name: FlowControl
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_FlowControl
  commentId: E:RabbitMQ.Client.IModel.FlowControl
  fullName: RabbitMQ.Client.IModel.FlowControl
  nameWithType: IModel.FlowControl
- uid: RabbitMQ.Client.IModel.IsClosed
  name: IsClosed
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_IsClosed
  commentId: P:RabbitMQ.Client.IModel.IsClosed
  fullName: RabbitMQ.Client.IModel.IsClosed
  nameWithType: IModel.IsClosed
- uid: RabbitMQ.Client.IModel.IsClosed*
  name: IsClosed
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_IsClosed_
  commentId: Overload:RabbitMQ.Client.IModel.IsClosed
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.IsClosed
  nameWithType: IModel.IsClosed
- uid: RabbitMQ.Client.IModel.IsOpen
  name: IsOpen
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_IsOpen
  commentId: P:RabbitMQ.Client.IModel.IsOpen
  fullName: RabbitMQ.Client.IModel.IsOpen
  nameWithType: IModel.IsOpen
- uid: RabbitMQ.Client.IModel.IsOpen*
  name: IsOpen
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_IsOpen_
  commentId: Overload:RabbitMQ.Client.IModel.IsOpen
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.IsOpen
  nameWithType: IModel.IsOpen
- uid: RabbitMQ.Client.IModel.MessageCount(System.String)
  name: MessageCount(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_MessageCount_System_String_
  commentId: M:RabbitMQ.Client.IModel.MessageCount(System.String)
  fullName: RabbitMQ.Client.IModel.MessageCount(System.String)
  nameWithType: IModel.MessageCount(String)
- uid: RabbitMQ.Client.IModel.MessageCount*
  name: MessageCount
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_MessageCount_
  commentId: Overload:RabbitMQ.Client.IModel.MessageCount
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.MessageCount
  nameWithType: IModel.MessageCount
- uid: RabbitMQ.Client.IModel.ModelShutdown
  name: ModelShutdown
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_ModelShutdown
  commentId: E:RabbitMQ.Client.IModel.ModelShutdown
  fullName: RabbitMQ.Client.IModel.ModelShutdown
  nameWithType: IModel.ModelShutdown
- uid: RabbitMQ.Client.IModel.NextPublishSeqNo
  name: NextPublishSeqNo
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_NextPublishSeqNo
  commentId: P:RabbitMQ.Client.IModel.NextPublishSeqNo
  fullName: RabbitMQ.Client.IModel.NextPublishSeqNo
  nameWithType: IModel.NextPublishSeqNo
- uid: RabbitMQ.Client.IModel.NextPublishSeqNo*
  name: NextPublishSeqNo
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_NextPublishSeqNo_
  commentId: Overload:RabbitMQ.Client.IModel.NextPublishSeqNo
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.NextPublishSeqNo
  nameWithType: IModel.NextPublishSeqNo
- uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueBind(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueBind_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueBind(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.QueueBind(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.QueueBind(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.QueueBind*
  name: QueueBind
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueBind_
  commentId: Overload:RabbitMQ.Client.IModel.QueueBind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueBind
  nameWithType: IModel.QueueBind
- uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueBindNoWait_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.QueueBindNoWait*
  name: QueueBindNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueBindNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.QueueBindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueBindNoWait
  nameWithType: IModel.QueueBindNoWait
- uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeclare_System_String_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.QueueDeclare*
  name: QueueDeclare
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeclare_
  commentId: Overload:RabbitMQ.Client.IModel.QueueDeclare
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueDeclare
  nameWithType: IModel.QueueDeclare
- uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeclareNoWait_System_String_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.QueueDeclareNoWait*
  name: QueueDeclareNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeclareNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.QueueDeclareNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait
  nameWithType: IModel.QueueDeclareNoWait
- uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  name: QueueDeclarePassive(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeclarePassive_System_String_
  commentId: M:RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  fullName: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  nameWithType: IModel.QueueDeclarePassive(String)
- uid: RabbitMQ.Client.IModel.QueueDeclarePassive*
  name: QueueDeclarePassive
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeclarePassive_
  commentId: Overload:RabbitMQ.Client.IModel.QueueDeclarePassive
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueDeclarePassive
  nameWithType: IModel.QueueDeclarePassive
- uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  name: QueueDelete(String, Boolean, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDelete_System_String_System_Boolean_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  fullName: RabbitMQ.Client.IModel.QueueDelete(System.String, System.Boolean, System.Boolean)
  nameWithType: IModel.QueueDelete(String, Boolean, Boolean)
- uid: RabbitMQ.Client.IModel.QueueDelete*
  name: QueueDelete
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDelete_
  commentId: Overload:RabbitMQ.Client.IModel.QueueDelete
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueDelete
  nameWithType: IModel.QueueDelete
- uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  name: QueueDeleteNoWait(String, Boolean, Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeleteNoWait_System_String_System_Boolean_System_Boolean_
  commentId: M:RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String, System.Boolean, System.Boolean)
  nameWithType: IModel.QueueDeleteNoWait(String, Boolean, Boolean)
- uid: RabbitMQ.Client.IModel.QueueDeleteNoWait*
  name: QueueDeleteNoWait
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueDeleteNoWait_
  commentId: Overload:RabbitMQ.Client.IModel.QueueDeleteNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait
  nameWithType: IModel.QueueDeleteNoWait
- uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
  name: QueuePurge(String)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueuePurge_System_String_
  commentId: M:RabbitMQ.Client.IModel.QueuePurge(System.String)
  fullName: RabbitMQ.Client.IModel.QueuePurge(System.String)
  nameWithType: IModel.QueuePurge(String)
- uid: RabbitMQ.Client.IModel.QueuePurge*
  name: QueuePurge
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueuePurge_
  commentId: Overload:RabbitMQ.Client.IModel.QueuePurge
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueuePurge
  nameWithType: IModel.QueuePurge
- uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueUnbind(String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueUnbind_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueUnbind(String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModel.QueueUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModel.QueueUnbind(String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModel.QueueUnbind*
  name: QueueUnbind
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_QueueUnbind_
  commentId: Overload:RabbitMQ.Client.IModel.QueueUnbind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.QueueUnbind
  nameWithType: IModel.QueueUnbind
- uid: RabbitMQ.Client.IModel.TxCommit
  name: TxCommit()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_TxCommit
  commentId: M:RabbitMQ.Client.IModel.TxCommit
  fullName: RabbitMQ.Client.IModel.TxCommit()
  nameWithType: IModel.TxCommit()
- uid: RabbitMQ.Client.IModel.TxCommit*
  name: TxCommit
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_TxCommit_
  commentId: Overload:RabbitMQ.Client.IModel.TxCommit
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.TxCommit
  nameWithType: IModel.TxCommit
- uid: RabbitMQ.Client.IModel.TxRollback
  name: TxRollback()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_TxRollback
  commentId: M:RabbitMQ.Client.IModel.TxRollback
  fullName: RabbitMQ.Client.IModel.TxRollback()
  nameWithType: IModel.TxRollback()
- uid: RabbitMQ.Client.IModel.TxRollback*
  name: TxRollback
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_TxRollback_
  commentId: Overload:RabbitMQ.Client.IModel.TxRollback
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.TxRollback
  nameWithType: IModel.TxRollback
- uid: RabbitMQ.Client.IModel.TxSelect
  name: TxSelect()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_TxSelect
  commentId: M:RabbitMQ.Client.IModel.TxSelect
  fullName: RabbitMQ.Client.IModel.TxSelect()
  nameWithType: IModel.TxSelect()
- uid: RabbitMQ.Client.IModel.TxSelect*
  name: TxSelect
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_TxSelect_
  commentId: Overload:RabbitMQ.Client.IModel.TxSelect
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.TxSelect
  nameWithType: IModel.TxSelect
- uid: RabbitMQ.Client.IModel.WaitForConfirms
  name: WaitForConfirms()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirms
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms
  fullName: RabbitMQ.Client.IModel.WaitForConfirms()
  nameWithType: IModel.WaitForConfirms()
- uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  name: WaitForConfirms(TimeSpan)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirms_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  fullName: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  nameWithType: IModel.WaitForConfirms(TimeSpan)
- uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  name: WaitForConfirms(TimeSpan, out Boolean)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirms_System_TimeSpan_System_Boolean__
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  name.vb: WaitForConfirms(TimeSpan, ByRef Boolean)
  fullName: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan, out System.Boolean)
  fullName.vb: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan, ByRef System.Boolean)
  nameWithType: IModel.WaitForConfirms(TimeSpan, out Boolean)
  nameWithType.vb: IModel.WaitForConfirms(TimeSpan, ByRef Boolean)
- uid: RabbitMQ.Client.IModel.WaitForConfirms*
  name: WaitForConfirms
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirms_
  commentId: Overload:RabbitMQ.Client.IModel.WaitForConfirms
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.WaitForConfirms
  nameWithType: IModel.WaitForConfirms
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  name: WaitForConfirmsOrDie()
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirmsOrDie
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie()
  nameWithType: IModel.WaitForConfirmsOrDie()
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  name: WaitForConfirmsOrDie(TimeSpan)
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirmsOrDie_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  nameWithType: IModel.WaitForConfirmsOrDie(TimeSpan)
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie*
  name: WaitForConfirmsOrDie
  href: api/RabbitMQ.Client.IModel.html#RabbitMQ_Client_IModel_WaitForConfirmsOrDie_
  commentId: Overload:RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  isSpec: "True"
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  nameWithType: IModel.WaitForConfirmsOrDie
- uid: RabbitMQ.Client.IModelExensions
  name: IModelExensions
  href: api/RabbitMQ.Client.IModelExensions.html
  commentId: T:RabbitMQ.Client.IModelExensions
  fullName: RabbitMQ.Client.IModelExensions
  nameWithType: IModelExensions
- uid: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,RabbitMQ.Client.IBasicConsumer,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: BasicConsume(IModel, IBasicConsumer, String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicConsume_RabbitMQ_Client_IModel_RabbitMQ_Client_IBasicConsumer_System_String_System_Boolean_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,RabbitMQ.Client.IBasicConsumer,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: BasicConsume(IModel, IBasicConsumer, String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel, RabbitMQ.Client.IBasicConsumer, System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel, RabbitMQ.Client.IBasicConsumer, System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.BasicConsume(IModel, IBasicConsumer, String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.BasicConsume(IModel, IBasicConsumer, String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,System.String,System.Boolean,RabbitMQ.Client.IBasicConsumer)
  name: BasicConsume(IModel, String, Boolean, IBasicConsumer)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicConsume_RabbitMQ_Client_IModel_System_String_System_Boolean_RabbitMQ_Client_IBasicConsumer_
  commentId: M:RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,System.String,System.Boolean,RabbitMQ.Client.IBasicConsumer)
  fullName: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel, System.String, System.Boolean, RabbitMQ.Client.IBasicConsumer)
  nameWithType: IModelExensions.BasicConsume(IModel, String, Boolean, IBasicConsumer)
- uid: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,System.String,System.Boolean,System.String,RabbitMQ.Client.IBasicConsumer)
  name: BasicConsume(IModel, String, Boolean, String, IBasicConsumer)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicConsume_RabbitMQ_Client_IModel_System_String_System_Boolean_System_String_RabbitMQ_Client_IBasicConsumer_
  commentId: M:RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,System.String,System.Boolean,System.String,RabbitMQ.Client.IBasicConsumer)
  fullName: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel, System.String, System.Boolean, System.String, RabbitMQ.Client.IBasicConsumer)
  nameWithType: IModelExensions.BasicConsume(IModel, String, Boolean, String, IBasicConsumer)
- uid: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,System.String,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  name: BasicConsume(IModel, String, Boolean, String, IDictionary<String, Object>, IBasicConsumer)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicConsume_RabbitMQ_Client_IModel_System_String_System_Boolean_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__RabbitMQ_Client_IBasicConsumer_
  commentId: M:RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel,System.String,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  name.vb: BasicConsume(IModel, String, Boolean, String, IDictionary(Of String, Object), IBasicConsumer)
  fullName: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel, System.String, System.Boolean, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>, RabbitMQ.Client.IBasicConsumer)
  fullName.vb: RabbitMQ.Client.IModelExensions.BasicConsume(RabbitMQ.Client.IModel, System.String, System.Boolean, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object), RabbitMQ.Client.IBasicConsumer)
  nameWithType: IModelExensions.BasicConsume(IModel, String, Boolean, String, IDictionary<String, Object>, IBasicConsumer)
  nameWithType.vb: IModelExensions.BasicConsume(IModel, String, Boolean, String, IDictionary(Of String, Object), IBasicConsumer)
- uid: RabbitMQ.Client.IModelExensions.BasicConsume*
  name: BasicConsume
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicConsume_
  commentId: Overload:RabbitMQ.Client.IModelExensions.BasicConsume
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.BasicConsume
  nameWithType: IModelExensions.BasicConsume
- uid: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel,RabbitMQ.Client.PublicationAddress,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicPublish(IModel, PublicationAddress, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicPublish_RabbitMQ_Client_IModel_RabbitMQ_Client_PublicationAddress_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel,RabbitMQ.Client.PublicationAddress,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: BasicPublish(IModel, PublicationAddress, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel, RabbitMQ.Client.PublicationAddress, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel, RabbitMQ.Client.PublicationAddress, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: IModelExensions.BasicPublish(IModel, PublicationAddress, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: IModelExensions.BasicPublish(IModel, PublicationAddress, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicPublish(IModel, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicPublish_RabbitMQ_Client_IModel_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: BasicPublish(IModel, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: IModelExensions.BasicPublish(IModel, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: IModelExensions.BasicPublish(IModel, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicPublish(IModel, String, String, Boolean, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicPublish_RabbitMQ_Client_IModel_System_String_System_String_System_Boolean_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: BasicPublish(IModel, String, String, Boolean, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.IModelExensions.BasicPublish(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: IModelExensions.BasicPublish(IModel, String, String, Boolean, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: IModelExensions.BasicPublish(IModel, String, String, Boolean, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.IModelExensions.BasicPublish*
  name: BasicPublish
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_BasicPublish_
  commentId: Overload:RabbitMQ.Client.IModelExensions.BasicPublish
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.BasicPublish
  nameWithType: IModelExensions.BasicPublish
- uid: RabbitMQ.Client.IModelExensions.ExchangeBind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeBind(IModel, String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeBind_RabbitMQ_Client_IModel_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeBind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeBind(IModel, String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.ExchangeBind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.ExchangeBind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.ExchangeBind(IModel, String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.ExchangeBind(IModel, String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.ExchangeBind*
  name: ExchangeBind
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeBind_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeBind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeBind
  nameWithType: IModelExensions.ExchangeBind
- uid: RabbitMQ.Client.IModelExensions.ExchangeBindNoWait(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeBindNoWait(IModel, String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeBindNoWait_RabbitMQ_Client_IModel_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeBindNoWait(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeBindNoWait(IModel, String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.ExchangeBindNoWait(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.ExchangeBindNoWait(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.ExchangeBindNoWait(IModel, String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.ExchangeBindNoWait(IModel, String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.ExchangeBindNoWait*
  name: ExchangeBindNoWait
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeBindNoWait_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeBindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeBindNoWait
  nameWithType: IModelExensions.ExchangeBindNoWait
- uid: RabbitMQ.Client.IModelExensions.ExchangeDeclare(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeDeclare(IModel, String, String, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDeclare_RabbitMQ_Client_IModel_System_String_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeDeclare(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeDeclare(IModel, String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDeclare(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.ExchangeDeclare(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.ExchangeDeclare(IModel, String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.ExchangeDeclare(IModel, String, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.ExchangeDeclare*
  name: ExchangeDeclare
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDeclare_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeDeclare
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDeclare
  nameWithType: IModelExensions.ExchangeDeclare
- uid: RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeDeclareNoWait(IModel, String, String, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDeclareNoWait_RabbitMQ_Client_IModel_System_String_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeDeclareNoWait(IModel, String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.ExchangeDeclareNoWait(IModel, String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.ExchangeDeclareNoWait(IModel, String, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait*
  name: ExchangeDeclareNoWait
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDeclareNoWait_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDeclareNoWait
  nameWithType: IModelExensions.ExchangeDeclareNoWait
- uid: RabbitMQ.Client.IModelExensions.ExchangeDelete(RabbitMQ.Client.IModel,System.String,System.Boolean)
  name: ExchangeDelete(IModel, String, Boolean)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDelete_RabbitMQ_Client_IModel_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeDelete(RabbitMQ.Client.IModel,System.String,System.Boolean)
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDelete(RabbitMQ.Client.IModel, System.String, System.Boolean)
  nameWithType: IModelExensions.ExchangeDelete(IModel, String, Boolean)
- uid: RabbitMQ.Client.IModelExensions.ExchangeDelete*
  name: ExchangeDelete
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDelete_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeDelete
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDelete
  nameWithType: IModelExensions.ExchangeDelete
- uid: RabbitMQ.Client.IModelExensions.ExchangeDeleteNoWait(RabbitMQ.Client.IModel,System.String,System.Boolean)
  name: ExchangeDeleteNoWait(IModel, String, Boolean)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDeleteNoWait_RabbitMQ_Client_IModel_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeDeleteNoWait(RabbitMQ.Client.IModel,System.String,System.Boolean)
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDeleteNoWait(RabbitMQ.Client.IModel, System.String, System.Boolean)
  nameWithType: IModelExensions.ExchangeDeleteNoWait(IModel, String, Boolean)
- uid: RabbitMQ.Client.IModelExensions.ExchangeDeleteNoWait*
  name: ExchangeDeleteNoWait
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeDeleteNoWait_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeDeleteNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeDeleteNoWait
  nameWithType: IModelExensions.ExchangeDeleteNoWait
- uid: RabbitMQ.Client.IModelExensions.ExchangeUnbind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ExchangeUnbind(IModel, String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeUnbind_RabbitMQ_Client_IModel_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.ExchangeUnbind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ExchangeUnbind(IModel, String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.ExchangeUnbind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.ExchangeUnbind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.ExchangeUnbind(IModel, String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.ExchangeUnbind(IModel, String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.ExchangeUnbind*
  name: ExchangeUnbind
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_ExchangeUnbind_
  commentId: Overload:RabbitMQ.Client.IModelExensions.ExchangeUnbind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.ExchangeUnbind
  nameWithType: IModelExensions.ExchangeUnbind
- uid: RabbitMQ.Client.IModelExensions.QueueBind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueBind(IModel, String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueBind_RabbitMQ_Client_IModel_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.QueueBind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueBind(IModel, String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.QueueBind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.QueueBind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.QueueBind(IModel, String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.QueueBind(IModel, String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.QueueBind*
  name: QueueBind
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueBind_
  commentId: Overload:RabbitMQ.Client.IModelExensions.QueueBind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.QueueBind
  nameWithType: IModelExensions.QueueBind
- uid: RabbitMQ.Client.IModelExensions.QueueDeclare(RabbitMQ.Client.IModel,System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueDeclare(IModel, String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueDeclare_RabbitMQ_Client_IModel_System_String_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.QueueDeclare(RabbitMQ.Client.IModel,System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueDeclare(IModel, String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.QueueDeclare(RabbitMQ.Client.IModel, System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.QueueDeclare(RabbitMQ.Client.IModel, System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.QueueDeclare(IModel, String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.QueueDeclare(IModel, String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.QueueDeclare*
  name: QueueDeclare
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueDeclare_
  commentId: Overload:RabbitMQ.Client.IModelExensions.QueueDeclare
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.QueueDeclare
  nameWithType: IModelExensions.QueueDeclare
- uid: RabbitMQ.Client.IModelExensions.QueueDelete(RabbitMQ.Client.IModel,System.String,System.Boolean,System.Boolean)
  name: QueueDelete(IModel, String, Boolean, Boolean)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueDelete_RabbitMQ_Client_IModel_System_String_System_Boolean_System_Boolean_
  commentId: M:RabbitMQ.Client.IModelExensions.QueueDelete(RabbitMQ.Client.IModel,System.String,System.Boolean,System.Boolean)
  fullName: RabbitMQ.Client.IModelExensions.QueueDelete(RabbitMQ.Client.IModel, System.String, System.Boolean, System.Boolean)
  nameWithType: IModelExensions.QueueDelete(IModel, String, Boolean, Boolean)
- uid: RabbitMQ.Client.IModelExensions.QueueDelete*
  name: QueueDelete
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueDelete_
  commentId: Overload:RabbitMQ.Client.IModelExensions.QueueDelete
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.QueueDelete
  nameWithType: IModelExensions.QueueDelete
- uid: RabbitMQ.Client.IModelExensions.QueueDeleteNoWait(RabbitMQ.Client.IModel,System.String,System.Boolean,System.Boolean)
  name: QueueDeleteNoWait(IModel, String, Boolean, Boolean)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueDeleteNoWait_RabbitMQ_Client_IModel_System_String_System_Boolean_System_Boolean_
  commentId: M:RabbitMQ.Client.IModelExensions.QueueDeleteNoWait(RabbitMQ.Client.IModel,System.String,System.Boolean,System.Boolean)
  fullName: RabbitMQ.Client.IModelExensions.QueueDeleteNoWait(RabbitMQ.Client.IModel, System.String, System.Boolean, System.Boolean)
  nameWithType: IModelExensions.QueueDeleteNoWait(IModel, String, Boolean, Boolean)
- uid: RabbitMQ.Client.IModelExensions.QueueDeleteNoWait*
  name: QueueDeleteNoWait
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueDeleteNoWait_
  commentId: Overload:RabbitMQ.Client.IModelExensions.QueueDeleteNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.QueueDeleteNoWait
  nameWithType: IModelExensions.QueueDeleteNoWait
- uid: RabbitMQ.Client.IModelExensions.QueueUnbind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: QueueUnbind(IModel, String, String, String, IDictionary<String, Object>)
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueUnbind_RabbitMQ_Client_IModel_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.IModelExensions.QueueUnbind(RabbitMQ.Client.IModel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: QueueUnbind(IModel, String, String, String, IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.IModelExensions.QueueUnbind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.IModelExensions.QueueUnbind(RabbitMQ.Client.IModel, System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: IModelExensions.QueueUnbind(IModel, String, String, String, IDictionary<String, Object>)
  nameWithType.vb: IModelExensions.QueueUnbind(IModel, String, String, String, IDictionary(Of String, Object))
- uid: RabbitMQ.Client.IModelExensions.QueueUnbind*
  name: QueueUnbind
  href: api/RabbitMQ.Client.IModelExensions.html#RabbitMQ_Client_IModelExensions_QueueUnbind_
  commentId: Overload:RabbitMQ.Client.IModelExensions.QueueUnbind
  isSpec: "True"
  fullName: RabbitMQ.Client.IModelExensions.QueueUnbind
  nameWithType: IModelExensions.QueueUnbind
- uid: RabbitMQ.Client.INetworkConnection
  name: INetworkConnection
  href: api/RabbitMQ.Client.INetworkConnection.html
  commentId: T:RabbitMQ.Client.INetworkConnection
  fullName: RabbitMQ.Client.INetworkConnection
  nameWithType: INetworkConnection
- uid: RabbitMQ.Client.INetworkConnection.LocalPort
  name: LocalPort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_LocalPort
  commentId: P:RabbitMQ.Client.INetworkConnection.LocalPort
  fullName: RabbitMQ.Client.INetworkConnection.LocalPort
  nameWithType: INetworkConnection.LocalPort
- uid: RabbitMQ.Client.INetworkConnection.LocalPort*
  name: LocalPort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_LocalPort_
  commentId: Overload:RabbitMQ.Client.INetworkConnection.LocalPort
  isSpec: "True"
  fullName: RabbitMQ.Client.INetworkConnection.LocalPort
  nameWithType: INetworkConnection.LocalPort
- uid: RabbitMQ.Client.INetworkConnection.RemotePort
  name: RemotePort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_RemotePort
  commentId: P:RabbitMQ.Client.INetworkConnection.RemotePort
  fullName: RabbitMQ.Client.INetworkConnection.RemotePort
  nameWithType: INetworkConnection.RemotePort
- uid: RabbitMQ.Client.INetworkConnection.RemotePort*
  name: RemotePort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_RemotePort_
  commentId: Overload:RabbitMQ.Client.INetworkConnection.RemotePort
  isSpec: "True"
  fullName: RabbitMQ.Client.INetworkConnection.RemotePort
  nameWithType: INetworkConnection.RemotePort
- uid: RabbitMQ.Client.IProtocol
  name: IProtocol
  href: api/RabbitMQ.Client.IProtocol.html
  commentId: T:RabbitMQ.Client.IProtocol
  fullName: RabbitMQ.Client.IProtocol
  nameWithType: IProtocol
- uid: RabbitMQ.Client.IProtocol.ApiName
  name: ApiName
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_ApiName
  commentId: P:RabbitMQ.Client.IProtocol.ApiName
  fullName: RabbitMQ.Client.IProtocol.ApiName
  nameWithType: IProtocol.ApiName
- uid: RabbitMQ.Client.IProtocol.ApiName*
  name: ApiName
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_ApiName_
  commentId: Overload:RabbitMQ.Client.IProtocol.ApiName
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.ApiName
  nameWithType: IProtocol.ApiName
- uid: RabbitMQ.Client.IProtocol.DefaultPort
  name: DefaultPort
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_DefaultPort
  commentId: P:RabbitMQ.Client.IProtocol.DefaultPort
  fullName: RabbitMQ.Client.IProtocol.DefaultPort
  nameWithType: IProtocol.DefaultPort
- uid: RabbitMQ.Client.IProtocol.DefaultPort*
  name: DefaultPort
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_DefaultPort_
  commentId: Overload:RabbitMQ.Client.IProtocol.DefaultPort
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.DefaultPort
  nameWithType: IProtocol.DefaultPort
- uid: RabbitMQ.Client.IProtocol.MajorVersion
  name: MajorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MajorVersion
  commentId: P:RabbitMQ.Client.IProtocol.MajorVersion
  fullName: RabbitMQ.Client.IProtocol.MajorVersion
  nameWithType: IProtocol.MajorVersion
- uid: RabbitMQ.Client.IProtocol.MajorVersion*
  name: MajorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MajorVersion_
  commentId: Overload:RabbitMQ.Client.IProtocol.MajorVersion
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.MajorVersion
  nameWithType: IProtocol.MajorVersion
- uid: RabbitMQ.Client.IProtocol.MinorVersion
  name: MinorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MinorVersion
  commentId: P:RabbitMQ.Client.IProtocol.MinorVersion
  fullName: RabbitMQ.Client.IProtocol.MinorVersion
  nameWithType: IProtocol.MinorVersion
- uid: RabbitMQ.Client.IProtocol.MinorVersion*
  name: MinorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MinorVersion_
  commentId: Overload:RabbitMQ.Client.IProtocol.MinorVersion
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.MinorVersion
  nameWithType: IProtocol.MinorVersion
- uid: RabbitMQ.Client.IProtocol.Revision
  name: Revision
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_Revision
  commentId: P:RabbitMQ.Client.IProtocol.Revision
  fullName: RabbitMQ.Client.IProtocol.Revision
  nameWithType: IProtocol.Revision
- uid: RabbitMQ.Client.IProtocol.Revision*
  name: Revision
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_Revision_
  commentId: Overload:RabbitMQ.Client.IProtocol.Revision
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.Revision
  nameWithType: IProtocol.Revision
- uid: RabbitMQ.Client.IRecoverable
  name: IRecoverable
  href: api/RabbitMQ.Client.IRecoverable.html
  commentId: T:RabbitMQ.Client.IRecoverable
  fullName: RabbitMQ.Client.IRecoverable
  nameWithType: IRecoverable
- uid: RabbitMQ.Client.IRecoverable.Recovery
  name: Recovery
  href: api/RabbitMQ.Client.IRecoverable.html#RabbitMQ_Client_IRecoverable_Recovery
  commentId: E:RabbitMQ.Client.IRecoverable.Recovery
  fullName: RabbitMQ.Client.IRecoverable.Recovery
  nameWithType: IRecoverable.Recovery
- uid: RabbitMQ.Client.IStreamProperties
  name: IStreamProperties
  href: api/RabbitMQ.Client.IStreamProperties.html
  commentId: T:RabbitMQ.Client.IStreamProperties
  fullName: RabbitMQ.Client.IStreamProperties
  nameWithType: IStreamProperties
- uid: RabbitMQ.Client.IStreamProperties.ClearContentEncoding
  name: ClearContentEncoding()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearContentEncoding
  commentId: M:RabbitMQ.Client.IStreamProperties.ClearContentEncoding
  fullName: RabbitMQ.Client.IStreamProperties.ClearContentEncoding()
  nameWithType: IStreamProperties.ClearContentEncoding()
- uid: RabbitMQ.Client.IStreamProperties.ClearContentEncoding*
  name: ClearContentEncoding
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearContentEncoding_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ClearContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ClearContentEncoding
  nameWithType: IStreamProperties.ClearContentEncoding
- uid: RabbitMQ.Client.IStreamProperties.ClearContentType
  name: ClearContentType()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearContentType
  commentId: M:RabbitMQ.Client.IStreamProperties.ClearContentType
  fullName: RabbitMQ.Client.IStreamProperties.ClearContentType()
  nameWithType: IStreamProperties.ClearContentType()
- uid: RabbitMQ.Client.IStreamProperties.ClearContentType*
  name: ClearContentType
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearContentType_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ClearContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ClearContentType
  nameWithType: IStreamProperties.ClearContentType
- uid: RabbitMQ.Client.IStreamProperties.ClearHeaders
  name: ClearHeaders()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearHeaders
  commentId: M:RabbitMQ.Client.IStreamProperties.ClearHeaders
  fullName: RabbitMQ.Client.IStreamProperties.ClearHeaders()
  nameWithType: IStreamProperties.ClearHeaders()
- uid: RabbitMQ.Client.IStreamProperties.ClearHeaders*
  name: ClearHeaders
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearHeaders_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ClearHeaders
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ClearHeaders
  nameWithType: IStreamProperties.ClearHeaders
- uid: RabbitMQ.Client.IStreamProperties.ClearPriority
  name: ClearPriority()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearPriority
  commentId: M:RabbitMQ.Client.IStreamProperties.ClearPriority
  fullName: RabbitMQ.Client.IStreamProperties.ClearPriority()
  nameWithType: IStreamProperties.ClearPriority()
- uid: RabbitMQ.Client.IStreamProperties.ClearPriority*
  name: ClearPriority
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearPriority_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ClearPriority
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ClearPriority
  nameWithType: IStreamProperties.ClearPriority
- uid: RabbitMQ.Client.IStreamProperties.ClearTimestamp
  name: ClearTimestamp()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearTimestamp
  commentId: M:RabbitMQ.Client.IStreamProperties.ClearTimestamp
  fullName: RabbitMQ.Client.IStreamProperties.ClearTimestamp()
  nameWithType: IStreamProperties.ClearTimestamp()
- uid: RabbitMQ.Client.IStreamProperties.ClearTimestamp*
  name: ClearTimestamp
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ClearTimestamp_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ClearTimestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ClearTimestamp
  nameWithType: IStreamProperties.ClearTimestamp
- uid: RabbitMQ.Client.IStreamProperties.ContentEncoding
  name: ContentEncoding
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ContentEncoding
  commentId: P:RabbitMQ.Client.IStreamProperties.ContentEncoding
  fullName: RabbitMQ.Client.IStreamProperties.ContentEncoding
  nameWithType: IStreamProperties.ContentEncoding
- uid: RabbitMQ.Client.IStreamProperties.ContentEncoding*
  name: ContentEncoding
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ContentEncoding_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ContentEncoding
  nameWithType: IStreamProperties.ContentEncoding
- uid: RabbitMQ.Client.IStreamProperties.ContentType
  name: ContentType
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ContentType
  commentId: P:RabbitMQ.Client.IStreamProperties.ContentType
  fullName: RabbitMQ.Client.IStreamProperties.ContentType
  nameWithType: IStreamProperties.ContentType
- uid: RabbitMQ.Client.IStreamProperties.ContentType*
  name: ContentType
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_ContentType_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.ContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.ContentType
  nameWithType: IStreamProperties.ContentType
- uid: RabbitMQ.Client.IStreamProperties.Headers
  name: Headers
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_Headers
  commentId: P:RabbitMQ.Client.IStreamProperties.Headers
  fullName: RabbitMQ.Client.IStreamProperties.Headers
  nameWithType: IStreamProperties.Headers
- uid: RabbitMQ.Client.IStreamProperties.Headers*
  name: Headers
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_Headers_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.Headers
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.Headers
  nameWithType: IStreamProperties.Headers
- uid: RabbitMQ.Client.IStreamProperties.IsContentEncodingPresent
  name: IsContentEncodingPresent()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsContentEncodingPresent
  commentId: M:RabbitMQ.Client.IStreamProperties.IsContentEncodingPresent
  fullName: RabbitMQ.Client.IStreamProperties.IsContentEncodingPresent()
  nameWithType: IStreamProperties.IsContentEncodingPresent()
- uid: RabbitMQ.Client.IStreamProperties.IsContentEncodingPresent*
  name: IsContentEncodingPresent
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsContentEncodingPresent_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.IsContentEncodingPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.IsContentEncodingPresent
  nameWithType: IStreamProperties.IsContentEncodingPresent
- uid: RabbitMQ.Client.IStreamProperties.IsContentTypePresent
  name: IsContentTypePresent()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsContentTypePresent
  commentId: M:RabbitMQ.Client.IStreamProperties.IsContentTypePresent
  fullName: RabbitMQ.Client.IStreamProperties.IsContentTypePresent()
  nameWithType: IStreamProperties.IsContentTypePresent()
- uid: RabbitMQ.Client.IStreamProperties.IsContentTypePresent*
  name: IsContentTypePresent
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsContentTypePresent_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.IsContentTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.IsContentTypePresent
  nameWithType: IStreamProperties.IsContentTypePresent
- uid: RabbitMQ.Client.IStreamProperties.IsHeadersPresent
  name: IsHeadersPresent()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsHeadersPresent
  commentId: M:RabbitMQ.Client.IStreamProperties.IsHeadersPresent
  fullName: RabbitMQ.Client.IStreamProperties.IsHeadersPresent()
  nameWithType: IStreamProperties.IsHeadersPresent()
- uid: RabbitMQ.Client.IStreamProperties.IsHeadersPresent*
  name: IsHeadersPresent
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsHeadersPresent_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.IsHeadersPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.IsHeadersPresent
  nameWithType: IStreamProperties.IsHeadersPresent
- uid: RabbitMQ.Client.IStreamProperties.IsPriorityPresent
  name: IsPriorityPresent()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsPriorityPresent
  commentId: M:RabbitMQ.Client.IStreamProperties.IsPriorityPresent
  fullName: RabbitMQ.Client.IStreamProperties.IsPriorityPresent()
  nameWithType: IStreamProperties.IsPriorityPresent()
- uid: RabbitMQ.Client.IStreamProperties.IsPriorityPresent*
  name: IsPriorityPresent
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsPriorityPresent_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.IsPriorityPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.IsPriorityPresent
  nameWithType: IStreamProperties.IsPriorityPresent
- uid: RabbitMQ.Client.IStreamProperties.IsTimestampPresent
  name: IsTimestampPresent()
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsTimestampPresent
  commentId: M:RabbitMQ.Client.IStreamProperties.IsTimestampPresent
  fullName: RabbitMQ.Client.IStreamProperties.IsTimestampPresent()
  nameWithType: IStreamProperties.IsTimestampPresent()
- uid: RabbitMQ.Client.IStreamProperties.IsTimestampPresent*
  name: IsTimestampPresent
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_IsTimestampPresent_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.IsTimestampPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.IsTimestampPresent
  nameWithType: IStreamProperties.IsTimestampPresent
- uid: RabbitMQ.Client.IStreamProperties.Priority
  name: Priority
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_Priority
  commentId: P:RabbitMQ.Client.IStreamProperties.Priority
  fullName: RabbitMQ.Client.IStreamProperties.Priority
  nameWithType: IStreamProperties.Priority
- uid: RabbitMQ.Client.IStreamProperties.Priority*
  name: Priority
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_Priority_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.Priority
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.Priority
  nameWithType: IStreamProperties.Priority
- uid: RabbitMQ.Client.IStreamProperties.Timestamp
  name: Timestamp
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_Timestamp
  commentId: P:RabbitMQ.Client.IStreamProperties.Timestamp
  fullName: RabbitMQ.Client.IStreamProperties.Timestamp
  nameWithType: IStreamProperties.Timestamp
- uid: RabbitMQ.Client.IStreamProperties.Timestamp*
  name: Timestamp
  href: api/RabbitMQ.Client.IStreamProperties.html#RabbitMQ_Client_IStreamProperties_Timestamp_
  commentId: Overload:RabbitMQ.Client.IStreamProperties.Timestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IStreamProperties.Timestamp
  nameWithType: IStreamProperties.Timestamp
- uid: RabbitMQ.Client.ITcpClient
  name: ITcpClient
  href: api/RabbitMQ.Client.ITcpClient.html
  commentId: T:RabbitMQ.Client.ITcpClient
  fullName: RabbitMQ.Client.ITcpClient
  nameWithType: ITcpClient
- uid: RabbitMQ.Client.ITcpClient.Client
  name: Client
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Client
  commentId: P:RabbitMQ.Client.ITcpClient.Client
  fullName: RabbitMQ.Client.ITcpClient.Client
  nameWithType: ITcpClient.Client
- uid: RabbitMQ.Client.ITcpClient.Client*
  name: Client
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Client_
  commentId: Overload:RabbitMQ.Client.ITcpClient.Client
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.Client
  nameWithType: ITcpClient.Client
- uid: RabbitMQ.Client.ITcpClient.Close
  name: Close()
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Close
  commentId: M:RabbitMQ.Client.ITcpClient.Close
  fullName: RabbitMQ.Client.ITcpClient.Close()
  nameWithType: ITcpClient.Close()
- uid: RabbitMQ.Client.ITcpClient.Close*
  name: Close
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Close_
  commentId: Overload:RabbitMQ.Client.ITcpClient.Close
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.Close
  nameWithType: ITcpClient.Close
- uid: RabbitMQ.Client.ITcpClient.ConnectAsync(System.String,System.Int32)
  name: ConnectAsync(String, Int32)
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ConnectAsync_System_String_System_Int32_
  commentId: M:RabbitMQ.Client.ITcpClient.ConnectAsync(System.String,System.Int32)
  fullName: RabbitMQ.Client.ITcpClient.ConnectAsync(System.String, System.Int32)
  nameWithType: ITcpClient.ConnectAsync(String, Int32)
- uid: RabbitMQ.Client.ITcpClient.ConnectAsync*
  name: ConnectAsync
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ConnectAsync_
  commentId: Overload:RabbitMQ.Client.ITcpClient.ConnectAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.ConnectAsync
  nameWithType: ITcpClient.ConnectAsync
- uid: RabbitMQ.Client.ITcpClient.Connected
  name: Connected
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Connected
  commentId: P:RabbitMQ.Client.ITcpClient.Connected
  fullName: RabbitMQ.Client.ITcpClient.Connected
  nameWithType: ITcpClient.Connected
- uid: RabbitMQ.Client.ITcpClient.Connected*
  name: Connected
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Connected_
  commentId: Overload:RabbitMQ.Client.ITcpClient.Connected
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.Connected
  nameWithType: ITcpClient.Connected
- uid: RabbitMQ.Client.ITcpClient.GetStream
  name: GetStream()
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_GetStream
  commentId: M:RabbitMQ.Client.ITcpClient.GetStream
  fullName: RabbitMQ.Client.ITcpClient.GetStream()
  nameWithType: ITcpClient.GetStream()
- uid: RabbitMQ.Client.ITcpClient.GetStream*
  name: GetStream
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_GetStream_
  commentId: Overload:RabbitMQ.Client.ITcpClient.GetStream
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.GetStream
  nameWithType: ITcpClient.GetStream
- uid: RabbitMQ.Client.ITcpClient.ReceiveTimeout
  name: ReceiveTimeout
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ReceiveTimeout
  commentId: P:RabbitMQ.Client.ITcpClient.ReceiveTimeout
  fullName: RabbitMQ.Client.ITcpClient.ReceiveTimeout
  nameWithType: ITcpClient.ReceiveTimeout
- uid: RabbitMQ.Client.ITcpClient.ReceiveTimeout*
  name: ReceiveTimeout
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ReceiveTimeout_
  commentId: Overload:RabbitMQ.Client.ITcpClient.ReceiveTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.ReceiveTimeout
  nameWithType: ITcpClient.ReceiveTimeout
- uid: RabbitMQ.Client.Logging
  name: RabbitMQ.Client.Logging
  href: api/RabbitMQ.Client.Logging.html
  commentId: N:RabbitMQ.Client.Logging
  fullName: RabbitMQ.Client.Logging
  nameWithType: RabbitMQ.Client.Logging
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource
  name: RabbitMqClientEventSource
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html
  commentId: T:RabbitMQ.Client.Logging.RabbitMqClientEventSource
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource
  nameWithType: RabbitMqClientEventSource
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.#ctor
  name: RabbitMqClientEventSource()
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource__ctor
  commentId: M:RabbitMQ.Client.Logging.RabbitMqClientEventSource.#ctor
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.RabbitMqClientEventSource()
  nameWithType: RabbitMqClientEventSource.RabbitMqClientEventSource()
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.#ctor*
  name: RabbitMqClientEventSource
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource__ctor_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqClientEventSource.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.RabbitMqClientEventSource
  nameWithType: RabbitMqClientEventSource.RabbitMqClientEventSource
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error(System.String,RabbitMQ.Client.Logging.RabbitMqExceptionDetail)
  name: Error(String, RabbitMqExceptionDetail)
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Error_System_String_RabbitMQ_Client_Logging_RabbitMqExceptionDetail_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error(System.String,RabbitMQ.Client.Logging.RabbitMqExceptionDetail)
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error(System.String, RabbitMQ.Client.Logging.RabbitMqExceptionDetail)
  nameWithType: RabbitMqClientEventSource.Error(String, RabbitMqExceptionDetail)
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error(System.String,System.Exception)
  name: Error(String, Exception)
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Error_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error(System.String,System.Exception)
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error(System.String, System.Exception)
  nameWithType: RabbitMqClientEventSource.Error(String, Exception)
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error*
  name: Error
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Error_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Error
  nameWithType: RabbitMqClientEventSource.Error
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Info(System.String)
  name: Info(String)
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Info_System_String_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Info(System.String)
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Info(System.String)
  nameWithType: RabbitMqClientEventSource.Info(String)
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Info*
  name: Info
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Info_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Info
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Info
  nameWithType: RabbitMqClientEventSource.Info
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords
  name: RabbitMqClientEventSource.Keywords
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords.html
  commentId: T:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords
  nameWithType: RabbitMqClientEventSource.Keywords
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords.Log
  name: Log
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Keywords_Log
  commentId: F:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords.Log
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Keywords.Log
  nameWithType: RabbitMqClientEventSource.Keywords.Log
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Log
  name: Log
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Log
  commentId: F:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Log
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Log
  nameWithType: RabbitMqClientEventSource.Log
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Warn(System.String)
  name: Warn(String)
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Warn_System_String_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Warn(System.String)
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Warn(System.String)
  nameWithType: RabbitMqClientEventSource.Warn(String)
- uid: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Warn*
  name: Warn
  href: api/RabbitMQ.Client.Logging.RabbitMqClientEventSource.html#RabbitMQ_Client_Logging_RabbitMqClientEventSource_Warn_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqClientEventSource.Warn
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqClientEventSource.Warn
  nameWithType: RabbitMqClientEventSource.Warn
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener
  name: RabbitMqConsoleEventListener
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html
  commentId: T:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener
  nameWithType: RabbitMqConsoleEventListener
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.#ctor
  name: RabbitMqConsoleEventListener()
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html#RabbitMQ_Client_Logging_RabbitMqConsoleEventListener__ctor
  commentId: M:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.#ctor
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.RabbitMqConsoleEventListener()
  nameWithType: RabbitMqConsoleEventListener.RabbitMqConsoleEventListener()
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.#ctor*
  name: RabbitMqConsoleEventListener
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html#RabbitMQ_Client_Logging_RabbitMqConsoleEventListener__ctor_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.RabbitMqConsoleEventListener
  nameWithType: RabbitMqConsoleEventListener.RabbitMqConsoleEventListener
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.Dispose
  name: Dispose()
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html#RabbitMQ_Client_Logging_RabbitMqConsoleEventListener_Dispose
  commentId: M:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.Dispose
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.Dispose()
  nameWithType: RabbitMqConsoleEventListener.Dispose()
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.Dispose*
  name: Dispose
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html#RabbitMQ_Client_Logging_RabbitMqConsoleEventListener_Dispose_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.Dispose
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.Dispose
  nameWithType: RabbitMqConsoleEventListener.Dispose
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  name: OnEventWritten(EventWrittenEventArgs)
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html#RabbitMQ_Client_Logging_RabbitMqConsoleEventListener_OnEventWritten_System_Diagnostics_Tracing_EventWrittenEventArgs_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  nameWithType: RabbitMqConsoleEventListener.OnEventWritten(EventWrittenEventArgs)
- uid: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.OnEventWritten*
  name: OnEventWritten
  href: api/RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.html#RabbitMQ_Client_Logging_RabbitMqConsoleEventListener_OnEventWritten_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.OnEventWritten
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqConsoleEventListener.OnEventWritten
  nameWithType: RabbitMqConsoleEventListener.OnEventWritten
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail
  name: RabbitMqExceptionDetail
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html
  commentId: T:RabbitMQ.Client.Logging.RabbitMqExceptionDetail
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail
  nameWithType: RabbitMqExceptionDetail
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: RabbitMqExceptionDetail(IDictionary<String, Object>)
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail__ctor_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: RabbitMqExceptionDetail(IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail(System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: RabbitMqExceptionDetail.RabbitMqExceptionDetail(IDictionary<String, Object>)
  nameWithType.vb: RabbitMqExceptionDetail.RabbitMqExceptionDetail(IDictionary(Of String, Object))
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Exception)
  name: RabbitMqExceptionDetail(Exception)
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Exception)
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail(System.Exception)
  nameWithType: RabbitMqExceptionDetail.RabbitMqExceptionDetail(Exception)
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor*
  name: RabbitMqExceptionDetail
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail__ctor_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail
  nameWithType: RabbitMqExceptionDetail.RabbitMqExceptionDetail
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  name: InnerException
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_InnerException
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  nameWithType: RabbitMqExceptionDetail.InnerException
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException*
  name: InnerException
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_InnerException_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  nameWithType: RabbitMqExceptionDetail.InnerException
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  name: Message
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Message
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  nameWithType: RabbitMqExceptionDetail.Message
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message*
  name: Message
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Message_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  nameWithType: RabbitMqExceptionDetail.Message
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  name: StackTrace
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_StackTrace
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  nameWithType: RabbitMqExceptionDetail.StackTrace
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace*
  name: StackTrace
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_StackTrace_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  nameWithType: RabbitMqExceptionDetail.StackTrace
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  name: ToString()
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_ToString
  commentId: M:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString()
  nameWithType: RabbitMqExceptionDetail.ToString()
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString*
  name: ToString
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_ToString_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  nameWithType: RabbitMqExceptionDetail.ToString
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  name: Type
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Type
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  nameWithType: RabbitMqExceptionDetail.Type
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type*
  name: Type
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Type_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  nameWithType: RabbitMqExceptionDetail.Type
- uid: RabbitMQ.Client.PlainMechanism
  name: PlainMechanism
  href: api/RabbitMQ.Client.PlainMechanism.html
  commentId: T:RabbitMQ.Client.PlainMechanism
  fullName: RabbitMQ.Client.PlainMechanism
  nameWithType: PlainMechanism
- uid: RabbitMQ.Client.PlainMechanism.handleChallenge(System.Byte[],RabbitMQ.Client.IConnectionFactory)
  name: handleChallenge(Byte[], IConnectionFactory)
  href: api/RabbitMQ.Client.PlainMechanism.html#RabbitMQ_Client_PlainMechanism_handleChallenge_System_Byte___RabbitMQ_Client_IConnectionFactory_
  commentId: M:RabbitMQ.Client.PlainMechanism.handleChallenge(System.Byte[],RabbitMQ.Client.IConnectionFactory)
  name.vb: handleChallenge(Byte(), IConnectionFactory)
  fullName: RabbitMQ.Client.PlainMechanism.handleChallenge(System.Byte[], RabbitMQ.Client.IConnectionFactory)
  fullName.vb: RabbitMQ.Client.PlainMechanism.handleChallenge(System.Byte(), RabbitMQ.Client.IConnectionFactory)
  nameWithType: PlainMechanism.handleChallenge(Byte[], IConnectionFactory)
  nameWithType.vb: PlainMechanism.handleChallenge(Byte(), IConnectionFactory)
- uid: RabbitMQ.Client.PlainMechanism.handleChallenge*
  name: handleChallenge
  href: api/RabbitMQ.Client.PlainMechanism.html#RabbitMQ_Client_PlainMechanism_handleChallenge_
  commentId: Overload:RabbitMQ.Client.PlainMechanism.handleChallenge
  isSpec: "True"
  fullName: RabbitMQ.Client.PlainMechanism.handleChallenge
  nameWithType: PlainMechanism.handleChallenge
- uid: RabbitMQ.Client.PlainMechanismFactory
  name: PlainMechanismFactory
  href: api/RabbitMQ.Client.PlainMechanismFactory.html
  commentId: T:RabbitMQ.Client.PlainMechanismFactory
  fullName: RabbitMQ.Client.PlainMechanismFactory
  nameWithType: PlainMechanismFactory
- uid: RabbitMQ.Client.PlainMechanismFactory.GetInstance
  name: GetInstance()
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_GetInstance
  commentId: M:RabbitMQ.Client.PlainMechanismFactory.GetInstance
  fullName: RabbitMQ.Client.PlainMechanismFactory.GetInstance()
  nameWithType: PlainMechanismFactory.GetInstance()
- uid: RabbitMQ.Client.PlainMechanismFactory.GetInstance*
  name: GetInstance
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_GetInstance_
  commentId: Overload:RabbitMQ.Client.PlainMechanismFactory.GetInstance
  isSpec: "True"
  fullName: RabbitMQ.Client.PlainMechanismFactory.GetInstance
  nameWithType: PlainMechanismFactory.GetInstance
- uid: RabbitMQ.Client.PlainMechanismFactory.Name
  name: Name
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_Name
  commentId: P:RabbitMQ.Client.PlainMechanismFactory.Name
  fullName: RabbitMQ.Client.PlainMechanismFactory.Name
  nameWithType: PlainMechanismFactory.Name
- uid: RabbitMQ.Client.PlainMechanismFactory.Name*
  name: Name
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_Name_
  commentId: Overload:RabbitMQ.Client.PlainMechanismFactory.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.PlainMechanismFactory.Name
  nameWithType: PlainMechanismFactory.Name
- uid: RabbitMQ.Client.Protocols
  name: Protocols
  href: api/RabbitMQ.Client.Protocols.html
  commentId: T:RabbitMQ.Client.Protocols
  fullName: RabbitMQ.Client.Protocols
  nameWithType: Protocols
- uid: RabbitMQ.Client.Protocols.AMQP_0_9_1
  name: AMQP_0_9_1
  href: api/RabbitMQ.Client.Protocols.html#RabbitMQ_Client_Protocols_AMQP_0_9_1
  commentId: P:RabbitMQ.Client.Protocols.AMQP_0_9_1
  fullName: RabbitMQ.Client.Protocols.AMQP_0_9_1
  nameWithType: Protocols.AMQP_0_9_1
- uid: RabbitMQ.Client.Protocols.AMQP_0_9_1*
  name: AMQP_0_9_1
  href: api/RabbitMQ.Client.Protocols.html#RabbitMQ_Client_Protocols_AMQP_0_9_1_
  commentId: Overload:RabbitMQ.Client.Protocols.AMQP_0_9_1
  isSpec: "True"
  fullName: RabbitMQ.Client.Protocols.AMQP_0_9_1
  nameWithType: Protocols.AMQP_0_9_1
- uid: RabbitMQ.Client.Protocols.DefaultProtocol
  name: DefaultProtocol
  href: api/RabbitMQ.Client.Protocols.html#RabbitMQ_Client_Protocols_DefaultProtocol
  commentId: P:RabbitMQ.Client.Protocols.DefaultProtocol
  fullName: RabbitMQ.Client.Protocols.DefaultProtocol
  nameWithType: Protocols.DefaultProtocol
- uid: RabbitMQ.Client.Protocols.DefaultProtocol*
  name: DefaultProtocol
  href: api/RabbitMQ.Client.Protocols.html#RabbitMQ_Client_Protocols_DefaultProtocol_
  commentId: Overload:RabbitMQ.Client.Protocols.DefaultProtocol
  isSpec: "True"
  fullName: RabbitMQ.Client.Protocols.DefaultProtocol
  nameWithType: Protocols.DefaultProtocol
- uid: RabbitMQ.Client.PublicationAddress
  name: PublicationAddress
  href: api/RabbitMQ.Client.PublicationAddress.html
  commentId: T:RabbitMQ.Client.PublicationAddress
  fullName: RabbitMQ.Client.PublicationAddress
  nameWithType: PublicationAddress
- uid: RabbitMQ.Client.PublicationAddress.#ctor(System.String,System.String,System.String)
  name: PublicationAddress(String, String, String)
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress__ctor_System_String_System_String_System_String_
  commentId: M:RabbitMQ.Client.PublicationAddress.#ctor(System.String,System.String,System.String)
  fullName: RabbitMQ.Client.PublicationAddress.PublicationAddress(System.String, System.String, System.String)
  nameWithType: PublicationAddress.PublicationAddress(String, String, String)
- uid: RabbitMQ.Client.PublicationAddress.#ctor*
  name: PublicationAddress
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress__ctor_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.PublicationAddress
  nameWithType: PublicationAddress.PublicationAddress
- uid: RabbitMQ.Client.PublicationAddress.ExchangeName
  name: ExchangeName
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ExchangeName
  commentId: P:RabbitMQ.Client.PublicationAddress.ExchangeName
  fullName: RabbitMQ.Client.PublicationAddress.ExchangeName
  nameWithType: PublicationAddress.ExchangeName
- uid: RabbitMQ.Client.PublicationAddress.ExchangeName*
  name: ExchangeName
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ExchangeName_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.ExchangeName
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.ExchangeName
  nameWithType: PublicationAddress.ExchangeName
- uid: RabbitMQ.Client.PublicationAddress.ExchangeType
  name: ExchangeType
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ExchangeType
  commentId: P:RabbitMQ.Client.PublicationAddress.ExchangeType
  fullName: RabbitMQ.Client.PublicationAddress.ExchangeType
  nameWithType: PublicationAddress.ExchangeType
- uid: RabbitMQ.Client.PublicationAddress.ExchangeType*
  name: ExchangeType
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ExchangeType_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.ExchangeType
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.ExchangeType
  nameWithType: PublicationAddress.ExchangeType
- uid: RabbitMQ.Client.PublicationAddress.Parse(System.String)
  name: Parse(String)
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_Parse_System_String_
  commentId: M:RabbitMQ.Client.PublicationAddress.Parse(System.String)
  fullName: RabbitMQ.Client.PublicationAddress.Parse(System.String)
  nameWithType: PublicationAddress.Parse(String)
- uid: RabbitMQ.Client.PublicationAddress.Parse*
  name: Parse
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_Parse_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.Parse
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.Parse
  nameWithType: PublicationAddress.Parse
- uid: RabbitMQ.Client.PublicationAddress.PSEUDO_URI_PARSER
  name: PSEUDO_URI_PARSER
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_PSEUDO_URI_PARSER
  commentId: F:RabbitMQ.Client.PublicationAddress.PSEUDO_URI_PARSER
  fullName: RabbitMQ.Client.PublicationAddress.PSEUDO_URI_PARSER
  nameWithType: PublicationAddress.PSEUDO_URI_PARSER
- uid: RabbitMQ.Client.PublicationAddress.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_RoutingKey
  commentId: P:RabbitMQ.Client.PublicationAddress.RoutingKey
  fullName: RabbitMQ.Client.PublicationAddress.RoutingKey
  nameWithType: PublicationAddress.RoutingKey
- uid: RabbitMQ.Client.PublicationAddress.RoutingKey*
  name: RoutingKey
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_RoutingKey_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.RoutingKey
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.RoutingKey
  nameWithType: PublicationAddress.RoutingKey
- uid: RabbitMQ.Client.PublicationAddress.ToString
  name: ToString()
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ToString
  commentId: M:RabbitMQ.Client.PublicationAddress.ToString
  fullName: RabbitMQ.Client.PublicationAddress.ToString()
  nameWithType: PublicationAddress.ToString()
- uid: RabbitMQ.Client.PublicationAddress.ToString*
  name: ToString
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ToString_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.ToString
  nameWithType: PublicationAddress.ToString
- uid: RabbitMQ.Client.PublicationAddress.TryParse(System.String,RabbitMQ.Client.PublicationAddress@)
  name: TryParse(String, out PublicationAddress)
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_TryParse_System_String_RabbitMQ_Client_PublicationAddress__
  commentId: M:RabbitMQ.Client.PublicationAddress.TryParse(System.String,RabbitMQ.Client.PublicationAddress@)
  name.vb: TryParse(String, ByRef PublicationAddress)
  fullName: RabbitMQ.Client.PublicationAddress.TryParse(System.String, out RabbitMQ.Client.PublicationAddress)
  fullName.vb: RabbitMQ.Client.PublicationAddress.TryParse(System.String, ByRef RabbitMQ.Client.PublicationAddress)
  nameWithType: PublicationAddress.TryParse(String, out PublicationAddress)
  nameWithType.vb: PublicationAddress.TryParse(String, ByRef PublicationAddress)
- uid: RabbitMQ.Client.PublicationAddress.TryParse*
  name: TryParse
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_TryParse_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.TryParse
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.TryParse
  nameWithType: PublicationAddress.TryParse
- uid: RabbitMQ.Client.QueueDeclareOk
  name: QueueDeclareOk
  href: api/RabbitMQ.Client.QueueDeclareOk.html
  commentId: T:RabbitMQ.Client.QueueDeclareOk
  fullName: RabbitMQ.Client.QueueDeclareOk
  nameWithType: QueueDeclareOk
- uid: RabbitMQ.Client.QueueDeclareOk.#ctor(System.String,System.UInt32,System.UInt32)
  name: QueueDeclareOk(String, UInt32, UInt32)
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk__ctor_System_String_System_UInt32_System_UInt32_
  commentId: M:RabbitMQ.Client.QueueDeclareOk.#ctor(System.String,System.UInt32,System.UInt32)
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueDeclareOk(System.String, System.UInt32, System.UInt32)
  nameWithType: QueueDeclareOk.QueueDeclareOk(String, UInt32, UInt32)
- uid: RabbitMQ.Client.QueueDeclareOk.#ctor*
  name: QueueDeclareOk
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk__ctor_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueDeclareOk
  nameWithType: QueueDeclareOk.QueueDeclareOk
- uid: RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  name: ConsumerCount
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_ConsumerCount
  commentId: P:RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  fullName: RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  nameWithType: QueueDeclareOk.ConsumerCount
- uid: RabbitMQ.Client.QueueDeclareOk.ConsumerCount*
  name: ConsumerCount
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_ConsumerCount_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  isSpec: "True"
  fullName: RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  nameWithType: QueueDeclareOk.ConsumerCount
- uid: RabbitMQ.Client.QueueDeclareOk.MessageCount
  name: MessageCount
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_MessageCount
  commentId: P:RabbitMQ.Client.QueueDeclareOk.MessageCount
  fullName: RabbitMQ.Client.QueueDeclareOk.MessageCount
  nameWithType: QueueDeclareOk.MessageCount
- uid: RabbitMQ.Client.QueueDeclareOk.MessageCount*
  name: MessageCount
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_MessageCount_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.MessageCount
  isSpec: "True"
  fullName: RabbitMQ.Client.QueueDeclareOk.MessageCount
  nameWithType: QueueDeclareOk.MessageCount
- uid: RabbitMQ.Client.QueueDeclareOk.op_Implicit(RabbitMQ.Client.QueueDeclareOk)~System.String
  name: Implicit(QueueDeclareOk to String)
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_op_Implicit_RabbitMQ_Client_QueueDeclareOk__System_String
  commentId: M:RabbitMQ.Client.QueueDeclareOk.op_Implicit(RabbitMQ.Client.QueueDeclareOk)~System.String
  name.vb: Widening(QueueDeclareOk to String)
  fullName: RabbitMQ.Client.QueueDeclareOk.Implicit(RabbitMQ.Client.QueueDeclareOk to System.String)
  fullName.vb: RabbitMQ.Client.QueueDeclareOk.Widening(RabbitMQ.Client.QueueDeclareOk to System.String)
  nameWithType: QueueDeclareOk.Implicit(QueueDeclareOk to String)
  nameWithType.vb: QueueDeclareOk.Widening(QueueDeclareOk to String)
- uid: RabbitMQ.Client.QueueDeclareOk.op_Implicit*
  name: Implicit
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_op_Implicit_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: RabbitMQ.Client.QueueDeclareOk.Implicit
  fullName.vb: RabbitMQ.Client.QueueDeclareOk.Widening
  nameWithType: QueueDeclareOk.Implicit
  nameWithType.vb: QueueDeclareOk.Widening
- uid: RabbitMQ.Client.QueueDeclareOk.QueueName
  name: QueueName
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_QueueName
  commentId: P:RabbitMQ.Client.QueueDeclareOk.QueueName
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueName
  nameWithType: QueueDeclareOk.QueueName
- uid: RabbitMQ.Client.QueueDeclareOk.QueueName*
  name: QueueName
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_QueueName_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.QueueName
  isSpec: "True"
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueName
  nameWithType: QueueDeclareOk.QueueName
- uid: RabbitMQ.Client.ShutdownEventArgs
  name: ShutdownEventArgs
  href: api/RabbitMQ.Client.ShutdownEventArgs.html
  commentId: T:RabbitMQ.Client.ShutdownEventArgs
  fullName: RabbitMQ.Client.ShutdownEventArgs
  nameWithType: ShutdownEventArgs
- uid: RabbitMQ.Client.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.Object)
  name: ShutdownEventArgs(ShutdownInitiator, UInt16, String, Object)
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs__ctor_RabbitMQ_Client_ShutdownInitiator_System_UInt16_System_String_System_Object_
  commentId: M:RabbitMQ.Client.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.Object)
  fullName: RabbitMQ.Client.ShutdownEventArgs.ShutdownEventArgs(RabbitMQ.Client.ShutdownInitiator, System.UInt16, System.String, System.Object)
  nameWithType: ShutdownEventArgs.ShutdownEventArgs(ShutdownInitiator, UInt16, String, Object)
- uid: RabbitMQ.Client.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.UInt16,System.UInt16,System.Object)
  name: ShutdownEventArgs(ShutdownInitiator, UInt16, String, UInt16, UInt16, Object)
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs__ctor_RabbitMQ_Client_ShutdownInitiator_System_UInt16_System_String_System_UInt16_System_UInt16_System_Object_
  commentId: M:RabbitMQ.Client.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.UInt16,System.UInt16,System.Object)
  fullName: RabbitMQ.Client.ShutdownEventArgs.ShutdownEventArgs(RabbitMQ.Client.ShutdownInitiator, System.UInt16, System.String, System.UInt16, System.UInt16, System.Object)
  nameWithType: ShutdownEventArgs.ShutdownEventArgs(ShutdownInitiator, UInt16, String, UInt16, UInt16, Object)
- uid: RabbitMQ.Client.ShutdownEventArgs.#ctor*
  name: ShutdownEventArgs
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.ShutdownEventArgs
  nameWithType: ShutdownEventArgs.ShutdownEventArgs
- uid: RabbitMQ.Client.ShutdownEventArgs.Cause
  name: Cause
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_Cause
  commentId: P:RabbitMQ.Client.ShutdownEventArgs.Cause
  fullName: RabbitMQ.Client.ShutdownEventArgs.Cause
  nameWithType: ShutdownEventArgs.Cause
- uid: RabbitMQ.Client.ShutdownEventArgs.Cause*
  name: Cause
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_Cause_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.Cause
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.Cause
  nameWithType: ShutdownEventArgs.Cause
- uid: RabbitMQ.Client.ShutdownEventArgs.ClassId
  name: ClassId
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ClassId
  commentId: P:RabbitMQ.Client.ShutdownEventArgs.ClassId
  fullName: RabbitMQ.Client.ShutdownEventArgs.ClassId
  nameWithType: ShutdownEventArgs.ClassId
- uid: RabbitMQ.Client.ShutdownEventArgs.ClassId*
  name: ClassId
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ClassId_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.ClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.ClassId
  nameWithType: ShutdownEventArgs.ClassId
- uid: RabbitMQ.Client.ShutdownEventArgs.Initiator
  name: Initiator
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_Initiator
  commentId: P:RabbitMQ.Client.ShutdownEventArgs.Initiator
  fullName: RabbitMQ.Client.ShutdownEventArgs.Initiator
  nameWithType: ShutdownEventArgs.Initiator
- uid: RabbitMQ.Client.ShutdownEventArgs.Initiator*
  name: Initiator
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_Initiator_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.Initiator
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.Initiator
  nameWithType: ShutdownEventArgs.Initiator
- uid: RabbitMQ.Client.ShutdownEventArgs.MethodId
  name: MethodId
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_MethodId
  commentId: P:RabbitMQ.Client.ShutdownEventArgs.MethodId
  fullName: RabbitMQ.Client.ShutdownEventArgs.MethodId
  nameWithType: ShutdownEventArgs.MethodId
- uid: RabbitMQ.Client.ShutdownEventArgs.MethodId*
  name: MethodId
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_MethodId_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.MethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.MethodId
  nameWithType: ShutdownEventArgs.MethodId
- uid: RabbitMQ.Client.ShutdownEventArgs.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ReplyCode
  commentId: P:RabbitMQ.Client.ShutdownEventArgs.ReplyCode
  fullName: RabbitMQ.Client.ShutdownEventArgs.ReplyCode
  nameWithType: ShutdownEventArgs.ReplyCode
- uid: RabbitMQ.Client.ShutdownEventArgs.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ReplyCode_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.ReplyCode
  nameWithType: ShutdownEventArgs.ReplyCode
- uid: RabbitMQ.Client.ShutdownEventArgs.ReplyText
  name: ReplyText
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ReplyText
  commentId: P:RabbitMQ.Client.ShutdownEventArgs.ReplyText
  fullName: RabbitMQ.Client.ShutdownEventArgs.ReplyText
  nameWithType: ShutdownEventArgs.ReplyText
- uid: RabbitMQ.Client.ShutdownEventArgs.ReplyText*
  name: ReplyText
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ReplyText_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.ReplyText
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.ReplyText
  nameWithType: ShutdownEventArgs.ReplyText
- uid: RabbitMQ.Client.ShutdownEventArgs.ToString
  name: ToString()
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ToString
  commentId: M:RabbitMQ.Client.ShutdownEventArgs.ToString
  fullName: RabbitMQ.Client.ShutdownEventArgs.ToString()
  nameWithType: ShutdownEventArgs.ToString()
- uid: RabbitMQ.Client.ShutdownEventArgs.ToString*
  name: ToString
  href: api/RabbitMQ.Client.ShutdownEventArgs.html#RabbitMQ_Client_ShutdownEventArgs_ToString_
  commentId: Overload:RabbitMQ.Client.ShutdownEventArgs.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownEventArgs.ToString
  nameWithType: ShutdownEventArgs.ToString
- uid: RabbitMQ.Client.ShutdownInitiator
  name: ShutdownInitiator
  href: api/RabbitMQ.Client.ShutdownInitiator.html
  commentId: T:RabbitMQ.Client.ShutdownInitiator
  fullName: RabbitMQ.Client.ShutdownInitiator
  nameWithType: ShutdownInitiator
- uid: RabbitMQ.Client.ShutdownInitiator.Application
  name: Application
  href: api/RabbitMQ.Client.ShutdownInitiator.html#RabbitMQ_Client_ShutdownInitiator_Application
  commentId: F:RabbitMQ.Client.ShutdownInitiator.Application
  fullName: RabbitMQ.Client.ShutdownInitiator.Application
  nameWithType: ShutdownInitiator.Application
- uid: RabbitMQ.Client.ShutdownInitiator.Library
  name: Library
  href: api/RabbitMQ.Client.ShutdownInitiator.html#RabbitMQ_Client_ShutdownInitiator_Library
  commentId: F:RabbitMQ.Client.ShutdownInitiator.Library
  fullName: RabbitMQ.Client.ShutdownInitiator.Library
  nameWithType: ShutdownInitiator.Library
- uid: RabbitMQ.Client.ShutdownInitiator.Peer
  name: Peer
  href: api/RabbitMQ.Client.ShutdownInitiator.html#RabbitMQ_Client_ShutdownInitiator_Peer
  commentId: F:RabbitMQ.Client.ShutdownInitiator.Peer
  fullName: RabbitMQ.Client.ShutdownInitiator.Peer
  nameWithType: ShutdownInitiator.Peer
- uid: RabbitMQ.Client.ShutdownReportEntry
  name: ShutdownReportEntry
  href: api/RabbitMQ.Client.ShutdownReportEntry.html
  commentId: T:RabbitMQ.Client.ShutdownReportEntry
  fullName: RabbitMQ.Client.ShutdownReportEntry
  nameWithType: ShutdownReportEntry
- uid: RabbitMQ.Client.ShutdownReportEntry.#ctor(System.String,System.Exception)
  name: ShutdownReportEntry(String, Exception)
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.ShutdownReportEntry.#ctor(System.String,System.Exception)
  fullName: RabbitMQ.Client.ShutdownReportEntry.ShutdownReportEntry(System.String, System.Exception)
  nameWithType: ShutdownReportEntry.ShutdownReportEntry(String, Exception)
- uid: RabbitMQ.Client.ShutdownReportEntry.#ctor*
  name: ShutdownReportEntry
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry__ctor_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.ShutdownReportEntry
  nameWithType: ShutdownReportEntry.ShutdownReportEntry
- uid: RabbitMQ.Client.ShutdownReportEntry.Description
  name: Description
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Description
  commentId: P:RabbitMQ.Client.ShutdownReportEntry.Description
  fullName: RabbitMQ.Client.ShutdownReportEntry.Description
  nameWithType: ShutdownReportEntry.Description
- uid: RabbitMQ.Client.ShutdownReportEntry.Description*
  name: Description
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Description_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.Description
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.Description
  nameWithType: ShutdownReportEntry.Description
- uid: RabbitMQ.Client.ShutdownReportEntry.Exception
  name: Exception
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Exception
  commentId: P:RabbitMQ.Client.ShutdownReportEntry.Exception
  fullName: RabbitMQ.Client.ShutdownReportEntry.Exception
  nameWithType: ShutdownReportEntry.Exception
- uid: RabbitMQ.Client.ShutdownReportEntry.Exception*
  name: Exception
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Exception_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.Exception
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.Exception
  nameWithType: ShutdownReportEntry.Exception
- uid: RabbitMQ.Client.ShutdownReportEntry.ToString
  name: ToString()
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_ToString
  commentId: M:RabbitMQ.Client.ShutdownReportEntry.ToString
  fullName: RabbitMQ.Client.ShutdownReportEntry.ToString()
  nameWithType: ShutdownReportEntry.ToString()
- uid: RabbitMQ.Client.ShutdownReportEntry.ToString*
  name: ToString
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_ToString_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.ToString
  nameWithType: ShutdownReportEntry.ToString
- uid: RabbitMQ.Client.SslOption
  name: SslOption
  href: api/RabbitMQ.Client.SslOption.html
  commentId: T:RabbitMQ.Client.SslOption
  fullName: RabbitMQ.Client.SslOption
  nameWithType: SslOption
- uid: RabbitMQ.Client.SslOption.#ctor
  name: SslOption()
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption__ctor
  commentId: M:RabbitMQ.Client.SslOption.#ctor
  fullName: RabbitMQ.Client.SslOption.SslOption()
  nameWithType: SslOption.SslOption()
- uid: RabbitMQ.Client.SslOption.#ctor(System.String,System.String,System.Boolean)
  name: SslOption(String, String, Boolean)
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption__ctor_System_String_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.SslOption.#ctor(System.String,System.String,System.Boolean)
  fullName: RabbitMQ.Client.SslOption.SslOption(System.String, System.String, System.Boolean)
  nameWithType: SslOption.SslOption(String, String, Boolean)
- uid: RabbitMQ.Client.SslOption.#ctor*
  name: SslOption
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption__ctor_
  commentId: Overload:RabbitMQ.Client.SslOption.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.SslOption
  nameWithType: SslOption.SslOption
- uid: RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  name: AcceptablePolicyErrors
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_AcceptablePolicyErrors
  commentId: P:RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  fullName: RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  nameWithType: SslOption.AcceptablePolicyErrors
- uid: RabbitMQ.Client.SslOption.AcceptablePolicyErrors*
  name: AcceptablePolicyErrors
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_AcceptablePolicyErrors_
  commentId: Overload:RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  nameWithType: SslOption.AcceptablePolicyErrors
- uid: RabbitMQ.Client.SslOption.CertificateSelectionCallback
  name: CertificateSelectionCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateSelectionCallback
  commentId: P:RabbitMQ.Client.SslOption.CertificateSelectionCallback
  fullName: RabbitMQ.Client.SslOption.CertificateSelectionCallback
  nameWithType: SslOption.CertificateSelectionCallback
- uid: RabbitMQ.Client.SslOption.CertificateSelectionCallback*
  name: CertificateSelectionCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateSelectionCallback_
  commentId: Overload:RabbitMQ.Client.SslOption.CertificateSelectionCallback
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertificateSelectionCallback
  nameWithType: SslOption.CertificateSelectionCallback
- uid: RabbitMQ.Client.SslOption.CertificateValidationCallback
  name: CertificateValidationCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateValidationCallback
  commentId: P:RabbitMQ.Client.SslOption.CertificateValidationCallback
  fullName: RabbitMQ.Client.SslOption.CertificateValidationCallback
  nameWithType: SslOption.CertificateValidationCallback
- uid: RabbitMQ.Client.SslOption.CertificateValidationCallback*
  name: CertificateValidationCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateValidationCallback_
  commentId: Overload:RabbitMQ.Client.SslOption.CertificateValidationCallback
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertificateValidationCallback
  nameWithType: SslOption.CertificateValidationCallback
- uid: RabbitMQ.Client.SslOption.CertPassphrase
  name: CertPassphrase
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPassphrase
  commentId: P:RabbitMQ.Client.SslOption.CertPassphrase
  fullName: RabbitMQ.Client.SslOption.CertPassphrase
  nameWithType: SslOption.CertPassphrase
- uid: RabbitMQ.Client.SslOption.CertPassphrase*
  name: CertPassphrase
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPassphrase_
  commentId: Overload:RabbitMQ.Client.SslOption.CertPassphrase
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertPassphrase
  nameWithType: SslOption.CertPassphrase
- uid: RabbitMQ.Client.SslOption.CertPath
  name: CertPath
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPath
  commentId: P:RabbitMQ.Client.SslOption.CertPath
  fullName: RabbitMQ.Client.SslOption.CertPath
  nameWithType: SslOption.CertPath
- uid: RabbitMQ.Client.SslOption.CertPath*
  name: CertPath
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPath_
  commentId: Overload:RabbitMQ.Client.SslOption.CertPath
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertPath
  nameWithType: SslOption.CertPath
- uid: RabbitMQ.Client.SslOption.Certs
  name: Certs
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Certs
  commentId: P:RabbitMQ.Client.SslOption.Certs
  fullName: RabbitMQ.Client.SslOption.Certs
  nameWithType: SslOption.Certs
- uid: RabbitMQ.Client.SslOption.Certs*
  name: Certs
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Certs_
  commentId: Overload:RabbitMQ.Client.SslOption.Certs
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.Certs
  nameWithType: SslOption.Certs
- uid: RabbitMQ.Client.SslOption.CheckCertificateRevocation
  name: CheckCertificateRevocation
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CheckCertificateRevocation
  commentId: P:RabbitMQ.Client.SslOption.CheckCertificateRevocation
  fullName: RabbitMQ.Client.SslOption.CheckCertificateRevocation
  nameWithType: SslOption.CheckCertificateRevocation
- uid: RabbitMQ.Client.SslOption.CheckCertificateRevocation*
  name: CheckCertificateRevocation
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CheckCertificateRevocation_
  commentId: Overload:RabbitMQ.Client.SslOption.CheckCertificateRevocation
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CheckCertificateRevocation
  nameWithType: SslOption.CheckCertificateRevocation
- uid: RabbitMQ.Client.SslOption.Enabled
  name: Enabled
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Enabled
  commentId: P:RabbitMQ.Client.SslOption.Enabled
  fullName: RabbitMQ.Client.SslOption.Enabled
  nameWithType: SslOption.Enabled
- uid: RabbitMQ.Client.SslOption.Enabled*
  name: Enabled
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Enabled_
  commentId: Overload:RabbitMQ.Client.SslOption.Enabled
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.Enabled
  nameWithType: SslOption.Enabled
- uid: RabbitMQ.Client.SslOption.ServerName
  name: ServerName
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_ServerName
  commentId: P:RabbitMQ.Client.SslOption.ServerName
  fullName: RabbitMQ.Client.SslOption.ServerName
  nameWithType: SslOption.ServerName
- uid: RabbitMQ.Client.SslOption.ServerName*
  name: ServerName
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_ServerName_
  commentId: Overload:RabbitMQ.Client.SslOption.ServerName
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.ServerName
  nameWithType: SslOption.ServerName
- uid: RabbitMQ.Client.SslOption.Version
  name: Version
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Version
  commentId: P:RabbitMQ.Client.SslOption.Version
  fullName: RabbitMQ.Client.SslOption.Version
  nameWithType: SslOption.Version
- uid: RabbitMQ.Client.SslOption.Version*
  name: Version
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Version_
  commentId: Overload:RabbitMQ.Client.SslOption.Version
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.Version
  nameWithType: SslOption.Version
- uid: RabbitMQ.Client.Unit
  name: RabbitMQ.Client.Unit
  href: api/RabbitMQ.Client.Unit.html
  commentId: N:RabbitMQ.Client.Unit
  fullName: RabbitMQ.Client.Unit
  nameWithType: RabbitMQ.Client.Unit
- uid: RabbitMQ.Client.Unit.APIApproval
  name: APIApproval
  href: api/RabbitMQ.Client.Unit.APIApproval.html
  commentId: T:RabbitMQ.Client.Unit.APIApproval
  fullName: RabbitMQ.Client.Unit.APIApproval
  nameWithType: APIApproval
- uid: RabbitMQ.Client.Unit.APIApproval.Approve
  name: Approve()
  href: api/RabbitMQ.Client.Unit.APIApproval.html#RabbitMQ_Client_Unit_APIApproval_Approve
  commentId: M:RabbitMQ.Client.Unit.APIApproval.Approve
  fullName: RabbitMQ.Client.Unit.APIApproval.Approve()
  nameWithType: APIApproval.Approve()
- uid: RabbitMQ.Client.Unit.APIApproval.Approve*
  name: Approve
  href: api/RabbitMQ.Client.Unit.APIApproval.html#RabbitMQ_Client_Unit_APIApproval_Approve_
  commentId: Overload:RabbitMQ.Client.Unit.APIApproval.Approve
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.APIApproval.Approve
  nameWithType: APIApproval.Approve
- uid: RabbitMQ.Client.Unit.IntegrationFixture
  name: IntegrationFixture
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html
  commentId: T:RabbitMQ.Client.Unit.IntegrationFixture
  fullName: RabbitMQ.Client.Unit.IntegrationFixture
  nameWithType: IntegrationFixture
- uid: RabbitMQ.Client.Unit.IntegrationFixture.CertificatesDirectory
  name: CertificatesDirectory()
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_CertificatesDirectory
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.CertificatesDirectory
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.CertificatesDirectory()
  nameWithType: IntegrationFixture.CertificatesDirectory()
- uid: RabbitMQ.Client.Unit.IntegrationFixture.CertificatesDirectory*
  name: CertificatesDirectory
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_CertificatesDirectory_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.CertificatesDirectory
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.CertificatesDirectory
  nameWithType: IntegrationFixture.CertificatesDirectory
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo
  name: IntegrationFixture.ConnectionInfo
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html
  commentId: T:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo
  nameWithType: IntegrationFixture.ConnectionInfo
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.#ctor(System.String,System.String)
  name: ConnectionInfo(String, String)
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo__ctor_System_String_System_String_
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.#ctor(System.String,System.String)
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ConnectionInfo(System.String, System.String)
  nameWithType: IntegrationFixture.ConnectionInfo.ConnectionInfo(String, String)
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.#ctor*
  name: ConnectionInfo
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ConnectionInfo
  nameWithType: IntegrationFixture.ConnectionInfo.ConnectionInfo
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Name
  name: Name
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo_Name
  commentId: P:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Name
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Name
  nameWithType: IntegrationFixture.ConnectionInfo.Name
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Name*
  name: Name
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo_Name_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Name
  nameWithType: IntegrationFixture.ConnectionInfo.Name
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Pid
  name: Pid
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo_Pid
  commentId: P:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Pid
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Pid
  nameWithType: IntegrationFixture.ConnectionInfo.Pid
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Pid*
  name: Pid
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo_Pid_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Pid
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.Pid
  nameWithType: IntegrationFixture.ConnectionInfo.Pid
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ToString
  name: ToString()
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo_ToString
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ToString
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ToString()
  nameWithType: IntegrationFixture.ConnectionInfo.ToString()
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ToString*
  name: ToString
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.html#RabbitMQ_Client_Unit_IntegrationFixture_ConnectionInfo_ToString_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ConnectionInfo.ToString
  nameWithType: IntegrationFixture.ConnectionInfo.ToString
- uid: RabbitMQ.Client.Unit.IntegrationFixture.Dispose
  name: Dispose()
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_Dispose
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.Dispose
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.Dispose()
  nameWithType: IntegrationFixture.Dispose()
- uid: RabbitMQ.Client.Unit.IntegrationFixture.Dispose*
  name: Dispose
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_Dispose_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.Dispose
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.Dispose
  nameWithType: IntegrationFixture.Dispose
- uid: RabbitMQ.Client.Unit.IntegrationFixture.Init
  name: Init()
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_Init
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.Init
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.Init()
  nameWithType: IntegrationFixture.Init()
- uid: RabbitMQ.Client.Unit.IntegrationFixture.Init*
  name: Init
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_Init_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.Init
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.Init
  nameWithType: IntegrationFixture.Init
- uid: RabbitMQ.Client.Unit.IntegrationFixture.IsRunningOnMonoOrDotNetCore
  name: IsRunningOnMonoOrDotNetCore()
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_IsRunningOnMonoOrDotNetCore
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.IsRunningOnMonoOrDotNetCore
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.IsRunningOnMonoOrDotNetCore()
  nameWithType: IntegrationFixture.IsRunningOnMonoOrDotNetCore()
- uid: RabbitMQ.Client.Unit.IntegrationFixture.IsRunningOnMonoOrDotNetCore*
  name: IsRunningOnMonoOrDotNetCore
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_IsRunningOnMonoOrDotNetCore_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.IsRunningOnMonoOrDotNetCore
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.IsRunningOnMonoOrDotNetCore
  nameWithType: IntegrationFixture.IsRunningOnMonoOrDotNetCore
- uid: RabbitMQ.Client.Unit.IntegrationFixture.RECOVERY_INTERVAL
  name: RECOVERY_INTERVAL
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_RECOVERY_INTERVAL
  commentId: F:RabbitMQ.Client.Unit.IntegrationFixture.RECOVERY_INTERVAL
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.RECOVERY_INTERVAL
  nameWithType: IntegrationFixture.RECOVERY_INTERVAL
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ReleaseResources
  name: ReleaseResources()
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_ReleaseResources
  commentId: M:RabbitMQ.Client.Unit.IntegrationFixture.ReleaseResources
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ReleaseResources()
  nameWithType: IntegrationFixture.ReleaseResources()
- uid: RabbitMQ.Client.Unit.IntegrationFixture.ReleaseResources*
  name: ReleaseResources
  href: api/RabbitMQ.Client.Unit.IntegrationFixture.html#RabbitMQ_Client_Unit_IntegrationFixture_ReleaseResources_
  commentId: Overload:RabbitMQ.Client.Unit.IntegrationFixture.ReleaseResources
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.IntegrationFixture.ReleaseResources
  nameWithType: IntegrationFixture.ReleaseResources
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing
  name: TestAmqpTcpEndpointParsing
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html
  commentId: T:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing
  nameWithType: TestAmqpTcpEndpointParsing
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestCompletelyEmptyString
  name: TestCompletelyEmptyString()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestCompletelyEmptyString
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestCompletelyEmptyString
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestCompletelyEmptyString()
  nameWithType: TestAmqpTcpEndpointParsing.TestCompletelyEmptyString()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestCompletelyEmptyString*
  name: TestCompletelyEmptyString
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestCompletelyEmptyString_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestCompletelyEmptyString
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestCompletelyEmptyString
  nameWithType: TestAmqpTcpEndpointParsing.TestCompletelyEmptyString
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort
  name: TestEmptyHostWithoutPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestEmptyHostWithoutPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort*
  name: TestEmptyHostWithoutPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestEmptyHostWithoutPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort
  nameWithType: TestAmqpTcpEndpointParsing.TestEmptyHostWithoutPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithPort
  name: TestEmptyHostWithPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestEmptyHostWithPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestEmptyHostWithPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithPort*
  name: TestEmptyHostWithPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestEmptyHostWithPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestEmptyHostWithPort
  nameWithType: TestAmqpTcpEndpointParsing.TestEmptyHostWithPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithoutPort
  name: TestHostWithoutPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestHostWithoutPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithoutPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithoutPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestHostWithoutPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithoutPort*
  name: TestHostWithoutPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestHostWithoutPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithoutPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithoutPort
  nameWithType: TestAmqpTcpEndpointParsing.TestHostWithoutPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithPort
  name: TestHostWithPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestHostWithPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestHostWithPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithPort*
  name: TestHostWithPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestHostWithPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestHostWithPort
  nameWithType: TestAmqpTcpEndpointParsing.TestHostWithPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestInvalidPort
  name: TestInvalidPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestInvalidPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestInvalidPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestInvalidPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestInvalidPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestInvalidPort*
  name: TestInvalidPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestInvalidPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestInvalidPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestInvalidPort
  nameWithType: TestAmqpTcpEndpointParsing.TestInvalidPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithoutPort
  name: TestIpv6WithoutPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestIpv6WithoutPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithoutPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithoutPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestIpv6WithoutPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithoutPort*
  name: TestIpv6WithoutPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestIpv6WithoutPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithoutPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithoutPort
  nameWithType: TestAmqpTcpEndpointParsing.TestIpv6WithoutPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithPort
  name: TestIpv6WithPort()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestIpv6WithPort
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithPort
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithPort()
  nameWithType: TestAmqpTcpEndpointParsing.TestIpv6WithPort()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithPort*
  name: TestIpv6WithPort
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestIpv6WithPort_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithPort
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestIpv6WithPort
  nameWithType: TestAmqpTcpEndpointParsing.TestIpv6WithPort
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleNone
  name: TestMultipleNone()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleNone
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleNone
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleNone()
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleNone()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleNone*
  name: TestMultipleNone
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleNone_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleNone
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleNone
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleNone
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleOne
  name: TestMultipleOne()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleOne
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleOne
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleOne()
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleOne()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleOne*
  name: TestMultipleOne
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleOne_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleOne
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleOne
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleOne
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwo
  name: TestMultipleTwo()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleTwo
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwo
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwo()
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleTwo()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwo*
  name: TestMultipleTwo
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleTwo_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwo
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwo
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleTwo
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas
  name: TestMultipleTwoMultipleCommas()
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleTwoMultipleCommas
  commentId: M:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas()
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas()
- uid: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas*
  name: TestMultipleTwoMultipleCommas
  href: api/RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.html#RabbitMQ_Client_Unit_TestAmqpTcpEndpointParsing_TestMultipleTwoMultipleCommas_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas
  nameWithType: TestAmqpTcpEndpointParsing.TestMultipleTwoMultipleCommas
- uid: RabbitMQ.Client.Unit.TestAmqpUri
  name: TestAmqpUri
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html
  commentId: T:RabbitMQ.Client.Unit.TestAmqpUri
  fullName: RabbitMQ.Client.Unit.TestAmqpUri
  nameWithType: TestAmqpUri
- uid: RabbitMQ.Client.Unit.TestAmqpUri.IsRunningOnMono
  name: IsRunningOnMono()
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html#RabbitMQ_Client_Unit_TestAmqpUri_IsRunningOnMono
  commentId: M:RabbitMQ.Client.Unit.TestAmqpUri.IsRunningOnMono
  fullName: RabbitMQ.Client.Unit.TestAmqpUri.IsRunningOnMono()
  nameWithType: TestAmqpUri.IsRunningOnMono()
- uid: RabbitMQ.Client.Unit.TestAmqpUri.IsRunningOnMono*
  name: IsRunningOnMono
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html#RabbitMQ_Client_Unit_TestAmqpUri_IsRunningOnMono_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpUri.IsRunningOnMono
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpUri.IsRunningOnMono
  nameWithType: TestAmqpUri.IsRunningOnMono
- uid: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseFail
  name: TestAmqpUriParseFail()
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html#RabbitMQ_Client_Unit_TestAmqpUri_TestAmqpUriParseFail
  commentId: M:RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseFail
  fullName: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseFail()
  nameWithType: TestAmqpUri.TestAmqpUriParseFail()
- uid: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseFail*
  name: TestAmqpUriParseFail
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html#RabbitMQ_Client_Unit_TestAmqpUri_TestAmqpUriParseFail_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseFail
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseFail
  nameWithType: TestAmqpUri.TestAmqpUriParseFail
- uid: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseSucceed
  name: TestAmqpUriParseSucceed()
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html#RabbitMQ_Client_Unit_TestAmqpUri_TestAmqpUriParseSucceed
  commentId: M:RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseSucceed
  fullName: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseSucceed()
  nameWithType: TestAmqpUri.TestAmqpUriParseSucceed()
- uid: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseSucceed*
  name: TestAmqpUriParseSucceed
  href: api/RabbitMQ.Client.Unit.TestAmqpUri.html#RabbitMQ_Client_Unit_TestAmqpUri_TestAmqpUriParseSucceed_
  commentId: Overload:RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseSucceed
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAmqpUri.TestAmqpUriParseSucceed
  nameWithType: TestAmqpUri.TestAmqpUriParseSucceed
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer
  name: TestAsyncConsumer
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestAsyncConsumer
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer
  nameWithType: TestAsyncConsumer
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException
  name: NonAsyncConsumerShouldThrowInvalidOperationException()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_NonAsyncConsumerShouldThrowInvalidOperationException
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException()
  nameWithType: TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException*
  name: NonAsyncConsumerShouldThrowInvalidOperationException
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_NonAsyncConsumerShouldThrowInvalidOperationException_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException
  nameWithType: TestAsyncConsumer.NonAsyncConsumerShouldThrowInvalidOperationException
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtrip
  name: TestBasicRoundtrip()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_TestBasicRoundtrip
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtrip
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtrip()
  nameWithType: TestAsyncConsumer.TestBasicRoundtrip()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtrip*
  name: TestBasicRoundtrip
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_TestBasicRoundtrip_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtrip
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtrip
  nameWithType: TestAsyncConsumer.TestBasicRoundtrip
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripConcurrent
  name: TestBasicRoundtripConcurrent()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_TestBasicRoundtripConcurrent
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripConcurrent
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripConcurrent()
  nameWithType: TestAsyncConsumer.TestBasicRoundtripConcurrent()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripConcurrent*
  name: TestBasicRoundtripConcurrent
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_TestBasicRoundtripConcurrent_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripConcurrent
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripConcurrent
  nameWithType: TestAsyncConsumer.TestBasicRoundtripConcurrent
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripNoWait
  name: TestBasicRoundtripNoWait()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_TestBasicRoundtripNoWait
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripNoWait
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripNoWait()
  nameWithType: TestAsyncConsumer.TestBasicRoundtripNoWait()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripNoWait*
  name: TestBasicRoundtripNoWait
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumer.html#RabbitMQ_Client_Unit_TestAsyncConsumer_TestBasicRoundtripNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumer.TestBasicRoundtripNoWait
  nameWithType: TestAsyncConsumer.TestBasicRoundtripNoWait
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions
  name: TestAsyncConsumerExceptions
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html
  commentId: T:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions
  nameWithType: TestAsyncConsumerExceptions
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.Init
  name: Init()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_Init
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.Init
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.Init()
  nameWithType: TestAsyncConsumerExceptions.Init()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.Init*
  name: Init
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_Init_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.Init
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.Init
  nameWithType: TestAsyncConsumerExceptions.Init
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling
  name: TestCancelNotificationExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestCancelNotificationExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling()
  nameWithType: TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling*
  name: TestCancelNotificationExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestCancelNotificationExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling
  nameWithType: TestAsyncConsumerExceptions.TestCancelNotificationExceptionHandling
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling
  name: TestConsumerCancelOkExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestConsumerCancelOkExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling()
  nameWithType: TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling*
  name: TestConsumerCancelOkExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestConsumerCancelOkExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling
  nameWithType: TestAsyncConsumerExceptions.TestConsumerCancelOkExceptionHandling
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  name: TestConsumerConsumeOkExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestConsumerConsumeOkExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling()
  nameWithType: TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling*
  name: TestConsumerConsumeOkExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestConsumerConsumeOkExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  nameWithType: TestAsyncConsumerExceptions.TestConsumerConsumeOkExceptionHandling
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling
  name: TestConsumerShutdownExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestConsumerShutdownExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling()
  nameWithType: TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling*
  name: TestConsumerShutdownExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestConsumerShutdownExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling
  nameWithType: TestAsyncConsumerExceptions.TestConsumerShutdownExceptionHandling
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestDeliveryExceptionHandling
  name: TestDeliveryExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestDeliveryExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestDeliveryExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestDeliveryExceptionHandling()
  nameWithType: TestAsyncConsumerExceptions.TestDeliveryExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestDeliveryExceptionHandling*
  name: TestDeliveryExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestDeliveryExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestDeliveryExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestDeliveryExceptionHandling
  nameWithType: TestAsyncConsumerExceptions.TestDeliveryExceptionHandling
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer,System.Action{RabbitMQ.Client.IModel,System.String,RabbitMQ.Client.IBasicConsumer,System.String})
  name: TestExceptionHandlingWith(IBasicConsumer, Action<IModel, String, IBasicConsumer, String>)
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestExceptionHandlingWith_RabbitMQ_Client_IBasicConsumer_System_Action_RabbitMQ_Client_IModel_System_String_RabbitMQ_Client_IBasicConsumer_System_String__
  commentId: M:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer,System.Action{RabbitMQ.Client.IModel,System.String,RabbitMQ.Client.IBasicConsumer,System.String})
  name.vb: TestExceptionHandlingWith(IBasicConsumer, Action(Of IModel, String, IBasicConsumer, String))
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer, System.Action<RabbitMQ.Client.IModel, System.String, RabbitMQ.Client.IBasicConsumer, System.String>)
  fullName.vb: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer, System.Action(Of RabbitMQ.Client.IModel, System.String, RabbitMQ.Client.IBasicConsumer, System.String))
  nameWithType: TestAsyncConsumerExceptions.TestExceptionHandlingWith(IBasicConsumer, Action<IModel, String, IBasicConsumer, String>)
  nameWithType.vb: TestAsyncConsumerExceptions.TestExceptionHandlingWith(IBasicConsumer, Action(Of IModel, String, IBasicConsumer, String))
- uid: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith*
  name: TestExceptionHandlingWith
  href: api/RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.html#RabbitMQ_Client_Unit_TestAsyncConsumerExceptions_TestExceptionHandlingWith_
  commentId: Overload:RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAsyncConsumerExceptions.TestExceptionHandlingWith
  nameWithType: TestAsyncConsumerExceptions.TestExceptionHandlingWith
- uid: RabbitMQ.Client.Unit.TestAuth
  name: TestAuth
  href: api/RabbitMQ.Client.Unit.TestAuth.html
  commentId: T:RabbitMQ.Client.Unit.TestAuth
  fullName: RabbitMQ.Client.Unit.TestAuth
  nameWithType: TestAuth
- uid: RabbitMQ.Client.Unit.TestAuth.TestAuthFailure
  name: TestAuthFailure()
  href: api/RabbitMQ.Client.Unit.TestAuth.html#RabbitMQ_Client_Unit_TestAuth_TestAuthFailure
  commentId: M:RabbitMQ.Client.Unit.TestAuth.TestAuthFailure
  fullName: RabbitMQ.Client.Unit.TestAuth.TestAuthFailure()
  nameWithType: TestAuth.TestAuthFailure()
- uid: RabbitMQ.Client.Unit.TestAuth.TestAuthFailure*
  name: TestAuthFailure
  href: api/RabbitMQ.Client.Unit.TestAuth.html#RabbitMQ_Client_Unit_TestAuth_TestAuthFailure_
  commentId: Overload:RabbitMQ.Client.Unit.TestAuth.TestAuthFailure
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestAuth.TestAuthFailure
  nameWithType: TestAuth.TestAuthFailure
- uid: RabbitMQ.Client.Unit.TestBasicGet
  name: TestBasicGet
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html
  commentId: T:RabbitMQ.Client.Unit.TestBasicGet
  fullName: RabbitMQ.Client.Unit.TestBasicGet
  nameWithType: TestBasicGet
- uid: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithClosedChannel
  name: TestBasicGetWithClosedChannel()
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html#RabbitMQ_Client_Unit_TestBasicGet_TestBasicGetWithClosedChannel
  commentId: M:RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithClosedChannel
  fullName: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithClosedChannel()
  nameWithType: TestBasicGet.TestBasicGetWithClosedChannel()
- uid: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithClosedChannel*
  name: TestBasicGetWithClosedChannel
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html#RabbitMQ_Client_Unit_TestBasicGet_TestBasicGetWithClosedChannel_
  commentId: Overload:RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithClosedChannel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithClosedChannel
  nameWithType: TestBasicGet.TestBasicGetWithClosedChannel
- uid: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithEmptyResponse
  name: TestBasicGetWithEmptyResponse()
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html#RabbitMQ_Client_Unit_TestBasicGet_TestBasicGetWithEmptyResponse
  commentId: M:RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithEmptyResponse
  fullName: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithEmptyResponse()
  nameWithType: TestBasicGet.TestBasicGetWithEmptyResponse()
- uid: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithEmptyResponse*
  name: TestBasicGetWithEmptyResponse
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html#RabbitMQ_Client_Unit_TestBasicGet_TestBasicGetWithEmptyResponse_
  commentId: Overload:RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithEmptyResponse
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithEmptyResponse
  nameWithType: TestBasicGet.TestBasicGetWithEmptyResponse
- uid: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode
  name: TestBasicGetWithNonEmptyResponseAndAutoAckMode()
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html#RabbitMQ_Client_Unit_TestBasicGet_TestBasicGetWithNonEmptyResponseAndAutoAckMode
  commentId: M:RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode
  fullName: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode()
  nameWithType: TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode()
- uid: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode*
  name: TestBasicGetWithNonEmptyResponseAndAutoAckMode
  href: api/RabbitMQ.Client.Unit.TestBasicGet.html#RabbitMQ_Client_Unit_TestBasicGet_TestBasicGetWithNonEmptyResponseAndAutoAckMode_
  commentId: Overload:RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode
  nameWithType: TestBasicGet.TestBasicGetWithNonEmptyResponseAndAutoAckMode
- uid: RabbitMQ.Client.Unit.TestBasicPublish
  name: TestBasicPublish
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html
  commentId: T:RabbitMQ.Client.Unit.TestBasicPublish
  fullName: RabbitMQ.Client.Unit.TestBasicPublish
  nameWithType: TestBasicPublish
- uid: RabbitMQ.Client.Unit.TestBasicPublish.CanNotModifyPayloadAfterPublish
  name: CanNotModifyPayloadAfterPublish()
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html#RabbitMQ_Client_Unit_TestBasicPublish_CanNotModifyPayloadAfterPublish
  commentId: M:RabbitMQ.Client.Unit.TestBasicPublish.CanNotModifyPayloadAfterPublish
  fullName: RabbitMQ.Client.Unit.TestBasicPublish.CanNotModifyPayloadAfterPublish()
  nameWithType: TestBasicPublish.CanNotModifyPayloadAfterPublish()
- uid: RabbitMQ.Client.Unit.TestBasicPublish.CanNotModifyPayloadAfterPublish*
  name: CanNotModifyPayloadAfterPublish
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html#RabbitMQ_Client_Unit_TestBasicPublish_CanNotModifyPayloadAfterPublish_
  commentId: Overload:RabbitMQ.Client.Unit.TestBasicPublish.CanNotModifyPayloadAfterPublish
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestBasicPublish.CanNotModifyPayloadAfterPublish
  nameWithType: TestBasicPublish.CanNotModifyPayloadAfterPublish
- uid: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripArray
  name: TestBasicRoundtripArray()
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html#RabbitMQ_Client_Unit_TestBasicPublish_TestBasicRoundtripArray
  commentId: M:RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripArray
  fullName: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripArray()
  nameWithType: TestBasicPublish.TestBasicRoundtripArray()
- uid: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripArray*
  name: TestBasicRoundtripArray
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html#RabbitMQ_Client_Unit_TestBasicPublish_TestBasicRoundtripArray_
  commentId: Overload:RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripArray
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripArray
  nameWithType: TestBasicPublish.TestBasicRoundtripArray
- uid: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripReadOnlyMemory
  name: TestBasicRoundtripReadOnlyMemory()
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html#RabbitMQ_Client_Unit_TestBasicPublish_TestBasicRoundtripReadOnlyMemory
  commentId: M:RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripReadOnlyMemory
  fullName: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripReadOnlyMemory()
  nameWithType: TestBasicPublish.TestBasicRoundtripReadOnlyMemory()
- uid: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripReadOnlyMemory*
  name: TestBasicRoundtripReadOnlyMemory
  href: api/RabbitMQ.Client.Unit.TestBasicPublish.html#RabbitMQ_Client_Unit_TestBasicPublish_TestBasicRoundtripReadOnlyMemory_
  commentId: Overload:RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripReadOnlyMemory
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestBasicPublish.TestBasicRoundtripReadOnlyMemory
  nameWithType: TestBasicPublish.TestBasicRoundtripReadOnlyMemory
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection
  name: TestConcurrentAccessWithSharedConnection
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html
  commentId: T:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection
  nameWithType: TestConcurrentAccessWithSharedConnection
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.Init
  name: Init()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_Init
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.Init
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.Init()
  nameWithType: TestConcurrentAccessWithSharedConnection.Init()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.Init*
  name: Init
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_Init_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.Init
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.Init
  nameWithType: TestConcurrentAccessWithSharedConnection.Init
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.ReleaseResources
  name: ReleaseResources()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_ReleaseResources
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.ReleaseResources
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.ReleaseResources()
  nameWithType: TestConcurrentAccessWithSharedConnection.ReleaseResources()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.ReleaseResources*
  name: ReleaseResources
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_ReleaseResources_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.ReleaseResources
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.ReleaseResources
  nameWithType: TestConcurrentAccessWithSharedConnection.ReleaseResources
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1
  name: TestConcurrentChannelOpenAndPublishingCase1()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase1
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1*
  name: TestConcurrentChannelOpenAndPublishingCase1
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase1_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase1
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10
  name: TestConcurrentChannelOpenAndPublishingCase10()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase10
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10*
  name: TestConcurrentChannelOpenAndPublishingCase10
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase10_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase10
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11
  name: TestConcurrentChannelOpenAndPublishingCase11()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase11
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11*
  name: TestConcurrentChannelOpenAndPublishingCase11
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase11_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase11
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12
  name: TestConcurrentChannelOpenAndPublishingCase12()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase12
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12*
  name: TestConcurrentChannelOpenAndPublishingCase12
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase12_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase12
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2
  name: TestConcurrentChannelOpenAndPublishingCase2()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase2
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2*
  name: TestConcurrentChannelOpenAndPublishingCase2
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase2_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase2
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3
  name: TestConcurrentChannelOpenAndPublishingCase3()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase3
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3*
  name: TestConcurrentChannelOpenAndPublishingCase3
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase3_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase3
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4
  name: TestConcurrentChannelOpenAndPublishingCase4()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase4
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4*
  name: TestConcurrentChannelOpenAndPublishingCase4
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase4_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase4
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5
  name: TestConcurrentChannelOpenAndPublishingCase5()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase5
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5*
  name: TestConcurrentChannelOpenAndPublishingCase5
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase5_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase5
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6
  name: TestConcurrentChannelOpenAndPublishingCase6()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase6
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6*
  name: TestConcurrentChannelOpenAndPublishingCase6
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase6_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase6
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7
  name: TestConcurrentChannelOpenAndPublishingCase7()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase7
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7*
  name: TestConcurrentChannelOpenAndPublishingCase7
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase7_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase7
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8
  name: TestConcurrentChannelOpenAndPublishingCase8()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase8
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8*
  name: TestConcurrentChannelOpenAndPublishingCase8
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase8_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase8
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9
  name: TestConcurrentChannelOpenAndPublishingCase9()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase9
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9*
  name: TestConcurrentChannelOpenAndPublishingCase9
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingCase9_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingCase9
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages
  name: TestConcurrentChannelOpenAndPublishingWithBlankMessages()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingWithBlankMessages
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages*
  name: TestConcurrentChannelOpenAndPublishingWithBlankMessages
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenAndPublishingWithBlankMessages_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenAndPublishingWithBlankMessages
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop
  name: TestConcurrentChannelOpenCloseLoop()
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenCloseLoop
  commentId: M:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop()
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop()
- uid: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop*
  name: TestConcurrentChannelOpenCloseLoop
  href: api/RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.html#RabbitMQ_Client_Unit_TestConcurrentAccessWithSharedConnection_TestConcurrentChannelOpenCloseLoop_
  commentId: Overload:RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop
  nameWithType: TestConcurrentAccessWithSharedConnection.TestConcurrentChannelOpenCloseLoop
- uid: RabbitMQ.Client.Unit.TestConfirmSelect
  name: TestConfirmSelect
  href: api/RabbitMQ.Client.Unit.TestConfirmSelect.html
  commentId: T:RabbitMQ.Client.Unit.TestConfirmSelect
  fullName: RabbitMQ.Client.Unit.TestConfirmSelect
  nameWithType: TestConfirmSelect
- uid: RabbitMQ.Client.Unit.TestConfirmSelect.Publish
  name: Publish()
  href: api/RabbitMQ.Client.Unit.TestConfirmSelect.html#RabbitMQ_Client_Unit_TestConfirmSelect_Publish
  commentId: M:RabbitMQ.Client.Unit.TestConfirmSelect.Publish
  fullName: RabbitMQ.Client.Unit.TestConfirmSelect.Publish()
  nameWithType: TestConfirmSelect.Publish()
- uid: RabbitMQ.Client.Unit.TestConfirmSelect.Publish*
  name: Publish
  href: api/RabbitMQ.Client.Unit.TestConfirmSelect.html#RabbitMQ_Client_Unit_TestConfirmSelect_Publish_
  commentId: Overload:RabbitMQ.Client.Unit.TestConfirmSelect.Publish
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConfirmSelect.Publish
  nameWithType: TestConfirmSelect.Publish
- uid: RabbitMQ.Client.Unit.TestConfirmSelect.TestConfirmSelectIdempotency
  name: TestConfirmSelectIdempotency()
  href: api/RabbitMQ.Client.Unit.TestConfirmSelect.html#RabbitMQ_Client_Unit_TestConfirmSelect_TestConfirmSelectIdempotency
  commentId: M:RabbitMQ.Client.Unit.TestConfirmSelect.TestConfirmSelectIdempotency
  fullName: RabbitMQ.Client.Unit.TestConfirmSelect.TestConfirmSelectIdempotency()
  nameWithType: TestConfirmSelect.TestConfirmSelectIdempotency()
- uid: RabbitMQ.Client.Unit.TestConfirmSelect.TestConfirmSelectIdempotency*
  name: TestConfirmSelectIdempotency
  href: api/RabbitMQ.Client.Unit.TestConfirmSelect.html#RabbitMQ_Client_Unit_TestConfirmSelect_TestConfirmSelectIdempotency_
  commentId: Overload:RabbitMQ.Client.Unit.TestConfirmSelect.TestConfirmSelectIdempotency
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConfirmSelect.TestConfirmSelectIdempotency
  nameWithType: TestConfirmSelect.TestConfirmSelectIdempotency
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked
  name: TestConnectionBlocked
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionBlocked
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked
  nameWithType: TestConnectionBlocked
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleBlocked(System.Object,RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  name: HandleBlocked(Object, ConnectionBlockedEventArgs)
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_HandleBlocked_System_Object_RabbitMQ_Client_Events_ConnectionBlockedEventArgs_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionBlocked.HandleBlocked(System.Object,RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleBlocked(System.Object, RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  nameWithType: TestConnectionBlocked.HandleBlocked(Object, ConnectionBlockedEventArgs)
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleBlocked*
  name: HandleBlocked
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_HandleBlocked_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionBlocked.HandleBlocked
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleBlocked
  nameWithType: TestConnectionBlocked.HandleBlocked
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleUnblocked(System.Object,System.EventArgs)
  name: HandleUnblocked(Object, EventArgs)
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_HandleUnblocked_System_Object_System_EventArgs_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionBlocked.HandleUnblocked(System.Object,System.EventArgs)
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleUnblocked(System.Object, System.EventArgs)
  nameWithType: TestConnectionBlocked.HandleUnblocked(Object, EventArgs)
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleUnblocked*
  name: HandleUnblocked
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_HandleUnblocked_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionBlocked.HandleUnblocked
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.HandleUnblocked
  nameWithType: TestConnectionBlocked.HandleUnblocked
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.ReleaseResources
  name: ReleaseResources()
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_ReleaseResources
  commentId: M:RabbitMQ.Client.Unit.TestConnectionBlocked.ReleaseResources
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.ReleaseResources()
  nameWithType: TestConnectionBlocked.ReleaseResources()
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.ReleaseResources*
  name: ReleaseResources
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_ReleaseResources_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionBlocked.ReleaseResources
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.ReleaseResources
  nameWithType: TestConnectionBlocked.ReleaseResources
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.TestConnectionBlockedNotification
  name: TestConnectionBlockedNotification()
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_TestConnectionBlockedNotification
  commentId: M:RabbitMQ.Client.Unit.TestConnectionBlocked.TestConnectionBlockedNotification
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.TestConnectionBlockedNotification()
  nameWithType: TestConnectionBlocked.TestConnectionBlockedNotification()
- uid: RabbitMQ.Client.Unit.TestConnectionBlocked.TestConnectionBlockedNotification*
  name: TestConnectionBlockedNotification
  href: api/RabbitMQ.Client.Unit.TestConnectionBlocked.html#RabbitMQ_Client_Unit_TestConnectionBlocked_TestConnectionBlockedNotification_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionBlocked.TestConnectionBlockedNotification
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionBlocked.TestConnectionBlockedNotification
  nameWithType: TestConnectionBlocked.TestConnectionBlockedNotification
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery
  name: TestConnectionRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery
  nameWithType: TestConnectionRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.#ctor
  name: TestConnectionRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery__ctor
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.#ctor
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConnectionRecovery()
  nameWithType: TestConnectionRecovery.TestConnectionRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.#ctor*
  name: TestConnectionRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConnectionRecovery
  nameWithType: TestConnectionRecovery.TestConnectionRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer
  name: TestConnectionRecovery.AckingBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer
  nameWithType: TestConnectionRecovery.AckingBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  name: AckingBasicConsumer(IModel, UInt16, ManualResetEventSlim)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_AckingBasicConsumer__ctor_RabbitMQ_Client_IModel_System_UInt16_System_Threading_ManualResetEventSlim_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.AckingBasicConsumer(RabbitMQ.Client.IModel, System.UInt16, System.Threading.ManualResetEventSlim)
  nameWithType: TestConnectionRecovery.AckingBasicConsumer.AckingBasicConsumer(IModel, UInt16, ManualResetEventSlim)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.#ctor*
  name: AckingBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_AckingBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.AckingBasicConsumer
  nameWithType: TestConnectionRecovery.AckingBasicConsumer.AckingBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery(System.UInt64)
  name: PostHandleDelivery(UInt64)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_AckingBasicConsumer_PostHandleDelivery_System_UInt64_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery(System.UInt64)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery(System.UInt64)
  nameWithType: TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery(UInt64)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery*
  name: PostHandleDelivery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_AckingBasicConsumer_PostHandleDelivery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery
  nameWithType: TestConnectionRecovery.AckingBasicConsumer.PostHandleDelivery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.CleanUp
  name: CleanUp()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_CleanUp
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.CleanUp
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.CleanUp()
  nameWithType: TestConnectionRecovery.CleanUp()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.CleanUp*
  name: CleanUp
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_CleanUp_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.CleanUp
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.CleanUp
  nameWithType: TestConnectionRecovery.CleanUp
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.Init
  name: Init()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_Init
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.Init
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.Init()
  nameWithType: TestConnectionRecovery.Init()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.Init*
  name: Init
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_Init_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.Init
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.Init
  nameWithType: TestConnectionRecovery.Init
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer
  name: TestConnectionRecovery.NackingBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer
  nameWithType: TestConnectionRecovery.NackingBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  name: NackingBasicConsumer(IModel, UInt16, ManualResetEventSlim)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_NackingBasicConsumer__ctor_RabbitMQ_Client_IModel_System_UInt16_System_Threading_ManualResetEventSlim_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.NackingBasicConsumer(RabbitMQ.Client.IModel, System.UInt16, System.Threading.ManualResetEventSlim)
  nameWithType: TestConnectionRecovery.NackingBasicConsumer.NackingBasicConsumer(IModel, UInt16, ManualResetEventSlim)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.#ctor*
  name: NackingBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_NackingBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.NackingBasicConsumer
  nameWithType: TestConnectionRecovery.NackingBasicConsumer.NackingBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery(System.UInt64)
  name: PostHandleDelivery(UInt64)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_NackingBasicConsumer_PostHandleDelivery_System_UInt64_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery(System.UInt64)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery(System.UInt64)
  nameWithType: TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery(UInt64)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery*
  name: PostHandleDelivery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_NackingBasicConsumer_PostHandleDelivery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery
  nameWithType: TestConnectionRecovery.NackingBasicConsumer.PostHandleDelivery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer
  name: TestConnectionRecovery.RejectingBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer
  nameWithType: TestConnectionRecovery.RejectingBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  name: RejectingBasicConsumer(IModel, UInt16, ManualResetEventSlim)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_RejectingBasicConsumer__ctor_RabbitMQ_Client_IModel_System_UInt16_System_Threading_ManualResetEventSlim_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.RejectingBasicConsumer(RabbitMQ.Client.IModel, System.UInt16, System.Threading.ManualResetEventSlim)
  nameWithType: TestConnectionRecovery.RejectingBasicConsumer.RejectingBasicConsumer(IModel, UInt16, ManualResetEventSlim)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.#ctor*
  name: RejectingBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_RejectingBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.RejectingBasicConsumer
  nameWithType: TestConnectionRecovery.RejectingBasicConsumer.RejectingBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery(System.UInt64)
  name: PostHandleDelivery(UInt64)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_RejectingBasicConsumer_PostHandleDelivery_System_UInt64_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery(System.UInt64)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery(System.UInt64)
  nameWithType: TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery(UInt64)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery*
  name: PostHandleDelivery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_RejectingBasicConsumer_PostHandleDelivery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery
  nameWithType: TestConnectionRecovery.RejectingBasicConsumer.PostHandleDelivery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.ReleaseResources
  name: ReleaseResources()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_ReleaseResources
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.ReleaseResources
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.ReleaseResources()
  nameWithType: TestConnectionRecovery.ReleaseResources()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.ReleaseResources*
  name: ReleaseResources
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_ReleaseResources_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.ReleaseResources
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.ReleaseResources
  nameWithType: TestConnectionRecovery.ReleaseResources
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery
  name: TestBasicAckAfterBasicGetAndChannelRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicAckAfterBasicGetAndChannelRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery()
  nameWithType: TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery*
  name: TestBasicAckAfterBasicGetAndChannelRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicAckAfterBasicGetAndChannelRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery
  nameWithType: TestConnectionRecovery.TestBasicAckAfterBasicGetAndChannelRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterChannelRecovery
  name: TestBasicAckAfterChannelRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicAckAfterChannelRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterChannelRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterChannelRecovery()
  nameWithType: TestConnectionRecovery.TestBasicAckAfterChannelRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterChannelRecovery*
  name: TestBasicAckAfterChannelRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicAckAfterChannelRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterChannelRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckAfterChannelRecovery
  nameWithType: TestConnectionRecovery.TestBasicAckAfterChannelRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckEventHandlerRecovery
  name: TestBasicAckEventHandlerRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicAckEventHandlerRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckEventHandlerRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckEventHandlerRecovery()
  nameWithType: TestConnectionRecovery.TestBasicAckEventHandlerRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckEventHandlerRecovery*
  name: TestBasicAckEventHandlerRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicAckEventHandlerRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckEventHandlerRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicAckEventHandlerRecovery
  nameWithType: TestConnectionRecovery.TestBasicAckEventHandlerRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecovery
  name: TestBasicConnectionRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecovery()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecovery*
  name: TestBasicConnectionRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecovery
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart
  name: TestBasicConnectionRecoveryOnBrokerRestart()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryOnBrokerRestart
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart*
  name: TestBasicConnectionRecoveryOnBrokerRestart
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryOnBrokerRestart_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryOnBrokerRestart
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose
  name: TestBasicConnectionRecoveryStopsAfterManualClose()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryStopsAfterManualClose
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose*
  name: TestBasicConnectionRecoveryStopsAfterManualClose
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryStopsAfterManualClose_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryStopsAfterManualClose
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList
  name: TestBasicConnectionRecoveryWithEndpointList()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithEndpointList
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList*
  name: TestBasicConnectionRecoveryWithEndpointList
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithEndpointList_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointList
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
  name: TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts*
  name: TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithEndpointListAndUnreachableHosts
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList
  name: TestBasicConnectionRecoveryWithHostnameList()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithHostnameList
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList*
  name: TestBasicConnectionRecoveryWithHostnameList
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithHostnameList_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameList
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  name: TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts()
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts*
  name: TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  nameWithType: TestConnectionRecovery.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer
  name: TestConnectionRecovery.TestBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer
  nameWithType: TestConnectionRecovery.TestBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  name: TestBasicConsumer(IModel, UInt16, ManualResetEventSlim)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConsumer__ctor_RabbitMQ_Client_IModel_System_UInt16_System_Threading_ManualResetEventSlim_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.#ctor(RabbitMQ.Client.IModel,System.UInt16,System.Threading.ManualResetEventSlim)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.TestBasicConsumer(RabbitMQ.Client.IModel, System.UInt16, System.Threading.ManualResetEventSlim)
  nameWithType: TestConnectionRecovery.TestBasicConsumer.TestBasicConsumer(IModel, UInt16, ManualResetEventSlim)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.#ctor*
  name: TestBasicConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.TestBasicConsumer
  nameWithType: TestConnectionRecovery.TestBasicConsumer.TestBasicConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConsumer_HandleBasicDeliver_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory<System.Byte>)
  fullName.vb: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.ReadOnlyMemory(Of System.Byte))
  nameWithType: TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory<Byte>)
  nameWithType.vb: TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver*
  name: HandleBasicDeliver
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConsumer_HandleBasicDeliver_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver
  nameWithType: TestConnectionRecovery.TestBasicConsumer.HandleBasicDeliver
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery(System.UInt64)
  name: PostHandleDelivery(UInt64)
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConsumer_PostHandleDelivery_System_UInt64_
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery(System.UInt64)
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery(System.UInt64)
  nameWithType: TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery(UInt64)
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery*
  name: PostHandleDelivery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicConsumer_PostHandleDelivery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery
  nameWithType: TestConnectionRecovery.TestBasicConsumer.PostHandleDelivery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecovery
  name: TestBasicModelRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicModelRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecovery()
  nameWithType: TestConnectionRecovery.TestBasicModelRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecovery*
  name: TestBasicModelRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicModelRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecovery
  nameWithType: TestConnectionRecovery.TestBasicModelRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart
  name: TestBasicModelRecoveryOnServerRestart()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicModelRecoveryOnServerRestart
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart()
  nameWithType: TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart*
  name: TestBasicModelRecoveryOnServerRestart
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicModelRecoveryOnServerRestart_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart
  nameWithType: TestConnectionRecovery.TestBasicModelRecoveryOnServerRestart
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicNackAfterChannelRecovery
  name: TestBasicNackAfterChannelRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicNackAfterChannelRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicNackAfterChannelRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicNackAfterChannelRecovery()
  nameWithType: TestConnectionRecovery.TestBasicNackAfterChannelRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicNackAfterChannelRecovery*
  name: TestBasicNackAfterChannelRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicNackAfterChannelRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicNackAfterChannelRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicNackAfterChannelRecovery
  nameWithType: TestConnectionRecovery.TestBasicNackAfterChannelRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicRejectAfterChannelRecovery
  name: TestBasicRejectAfterChannelRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicRejectAfterChannelRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicRejectAfterChannelRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicRejectAfterChannelRecovery()
  nameWithType: TestConnectionRecovery.TestBasicRejectAfterChannelRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicRejectAfterChannelRecovery*
  name: TestBasicRejectAfterChannelRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBasicRejectAfterChannelRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicRejectAfterChannelRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBasicRejectAfterChannelRecovery
  nameWithType: TestConnectionRecovery.TestBasicRejectAfterChannelRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBlockedListenersRecovery
  name: TestBlockedListenersRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBlockedListenersRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBlockedListenersRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBlockedListenersRecovery()
  nameWithType: TestConnectionRecovery.TestBlockedListenersRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBlockedListenersRecovery*
  name: TestBlockedListenersRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestBlockedListenersRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestBlockedListenersRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestBlockedListenersRecovery
  nameWithType: TestConnectionRecovery.TestBlockedListenersRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecovery
  name: TestClientNamedQueueRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedQueueRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecovery()
  nameWithType: TestConnectionRecovery.TestClientNamedQueueRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecovery*
  name: TestClientNamedQueueRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedQueueRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecovery
  nameWithType: TestConnectionRecovery.TestClientNamedQueueRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait
  name: TestClientNamedQueueRecoveryNoWait()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedQueueRecoveryNoWait
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait()
  nameWithType: TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait*
  name: TestClientNamedQueueRecoveryNoWait
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedQueueRecoveryNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait
  nameWithType: TestConnectionRecovery.TestClientNamedQueueRecoveryNoWait
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart
  name: TestClientNamedQueueRecoveryOnServerRestart()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedQueueRecoveryOnServerRestart
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart()
  nameWithType: TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart*
  name: TestClientNamedQueueRecoveryOnServerRestart
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedQueueRecoveryOnServerRestart_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart
  nameWithType: TestConnectionRecovery.TestClientNamedQueueRecoveryOnServerRestart
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
  name: TestClientNamedTransientAutoDeleteQueueAndBindingRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery()
  nameWithType: TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery*
  name: TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestClientNamedTransientAutoDeleteQueueAndBindingRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
  nameWithType: TestConnectionRecovery.TestClientNamedTransientAutoDeleteQueueAndBindingRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
  name: TestConsumerRecoveryOnClientNamedQueueWithOneRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery()
  nameWithType: TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery*
  name: TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestConsumerRecoveryOnClientNamedQueueWithOneRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
  nameWithType: TestConnectionRecovery.TestConsumerRecoveryOnClientNamedQueueWithOneRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers
  name: TestConsumerRecoveryWithManyConsumers()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestConsumerRecoveryWithManyConsumers
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers()
  nameWithType: TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers*
  name: TestConsumerRecoveryWithManyConsumers
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestConsumerRecoveryWithManyConsumers_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers
  nameWithType: TestConnectionRecovery.TestConsumerRecoveryWithManyConsumers
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerWorkServiceRecovery
  name: TestConsumerWorkServiceRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestConsumerWorkServiceRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerWorkServiceRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerWorkServiceRecovery()
  nameWithType: TestConnectionRecovery.TestConsumerWorkServiceRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerWorkServiceRecovery*
  name: TestConsumerWorkServiceRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestConsumerWorkServiceRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerWorkServiceRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestConsumerWorkServiceRecovery
  nameWithType: TestConnectionRecovery.TestConsumerWorkServiceRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
  name: TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang()
  nameWithType: TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang*
  name: TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
  nameWithType: TestConnectionRecovery.TestCreateModelOnClosedAutorecoveringConnectionDoesNotHang
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted()
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted*
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreDeleted
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound()
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound*
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientExchangesThatAreUnbound
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted()
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted*
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreDeleted
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound()
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound*
  name: TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteExchangesWithTransientQueuesThatAreUnbound
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
  name: TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer()
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer*
  name: TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
  nameWithType: TestConnectionRecovery.TestDeclarationOfManyAutoDeleteQueuesWithTransientConsumer
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecovery
  name: TestExchangeRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestExchangeRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecovery()
  nameWithType: TestConnectionRecovery.TestExchangeRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecovery*
  name: TestExchangeRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestExchangeRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecovery
  nameWithType: TestConnectionRecovery.TestExchangeRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecoveryWithNoWait
  name: TestExchangeRecoveryWithNoWait()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestExchangeRecoveryWithNoWait
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecoveryWithNoWait
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecoveryWithNoWait()
  nameWithType: TestConnectionRecovery.TestExchangeRecoveryWithNoWait()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecoveryWithNoWait*
  name: TestExchangeRecoveryWithNoWait
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestExchangeRecoveryWithNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecoveryWithNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeRecoveryWithNoWait
  nameWithType: TestConnectionRecovery.TestExchangeRecoveryWithNoWait
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeToExchangeBindingRecovery
  name: TestExchangeToExchangeBindingRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestExchangeToExchangeBindingRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeToExchangeBindingRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeToExchangeBindingRecovery()
  nameWithType: TestConnectionRecovery.TestExchangeToExchangeBindingRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeToExchangeBindingRecovery*
  name: TestExchangeToExchangeBindingRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestExchangeToExchangeBindingRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeToExchangeBindingRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestExchangeToExchangeBindingRecovery
  nameWithType: TestConnectionRecovery.TestExchangeToExchangeBindingRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestPublishRpcRightAfterReconnect
  name: TestPublishRpcRightAfterReconnect()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestPublishRpcRightAfterReconnect
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestPublishRpcRightAfterReconnect
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestPublishRpcRightAfterReconnect()
  nameWithType: TestConnectionRecovery.TestPublishRpcRightAfterReconnect()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestPublishRpcRightAfterReconnect*
  name: TestPublishRpcRightAfterReconnect
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestPublishRpcRightAfterReconnect_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestPublishRpcRightAfterReconnect
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestPublishRpcRightAfterReconnect
  nameWithType: TestConnectionRecovery.TestPublishRpcRightAfterReconnect
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestQueueRecoveryWithManyQueues
  name: TestQueueRecoveryWithManyQueues()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestQueueRecoveryWithManyQueues
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestQueueRecoveryWithManyQueues
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestQueueRecoveryWithManyQueues()
  nameWithType: TestConnectionRecovery.TestQueueRecoveryWithManyQueues()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestQueueRecoveryWithManyQueues*
  name: TestQueueRecoveryWithManyQueues
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestQueueRecoveryWithManyQueues_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestQueueRecoveryWithManyQueues
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestQueueRecoveryWithManyQueues
  nameWithType: TestConnectionRecovery.TestQueueRecoveryWithManyQueues
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel
  name: TestRecoverTopologyOnDisposedChannel()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoverTopologyOnDisposedChannel
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel()
  nameWithType: TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel*
  name: TestRecoverTopologyOnDisposedChannel
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoverTopologyOnDisposedChannel_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel
  nameWithType: TestConnectionRecovery.TestRecoverTopologyOnDisposedChannel
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnChannel
  name: TestRecoveryEventHandlersOnChannel()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryEventHandlersOnChannel
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnChannel
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnChannel()
  nameWithType: TestConnectionRecovery.TestRecoveryEventHandlersOnChannel()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnChannel*
  name: TestRecoveryEventHandlersOnChannel
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryEventHandlersOnChannel_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnChannel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnChannel
  nameWithType: TestConnectionRecovery.TestRecoveryEventHandlersOnChannel
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnConnection
  name: TestRecoveryEventHandlersOnConnection()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryEventHandlersOnConnection
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnConnection
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnConnection()
  nameWithType: TestConnectionRecovery.TestRecoveryEventHandlersOnConnection()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnConnection*
  name: TestRecoveryEventHandlersOnConnection
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryEventHandlersOnConnection_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnConnection
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnConnection
  nameWithType: TestConnectionRecovery.TestRecoveryEventHandlersOnConnection
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnModel
  name: TestRecoveryEventHandlersOnModel()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryEventHandlersOnModel
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnModel
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnModel()
  nameWithType: TestConnectionRecovery.TestRecoveryEventHandlersOnModel()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnModel*
  name: TestRecoveryEventHandlersOnModel
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryEventHandlersOnModel_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnModel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryEventHandlersOnModel
  nameWithType: TestConnectionRecovery.TestRecoveryEventHandlersOnModel
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryWithTopologyDisabled
  name: TestRecoveryWithTopologyDisabled()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryWithTopologyDisabled
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryWithTopologyDisabled
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryWithTopologyDisabled()
  nameWithType: TestConnectionRecovery.TestRecoveryWithTopologyDisabled()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryWithTopologyDisabled*
  name: TestRecoveryWithTopologyDisabled
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestRecoveryWithTopologyDisabled_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryWithTopologyDisabled
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestRecoveryWithTopologyDisabled
  nameWithType: TestConnectionRecovery.TestRecoveryWithTopologyDisabled
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedQueueRecovery
  name: TestServerNamedQueueRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestServerNamedQueueRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedQueueRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedQueueRecovery()
  nameWithType: TestConnectionRecovery.TestServerNamedQueueRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedQueueRecovery*
  name: TestServerNamedQueueRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestServerNamedQueueRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedQueueRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedQueueRecovery
  nameWithType: TestConnectionRecovery.TestServerNamedQueueRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
  name: TestServerNamedTransientAutoDeleteQueueAndBindingRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery()
  nameWithType: TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery*
  name: TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestServerNamedTransientAutoDeleteQueueAndBindingRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
  nameWithType: TestConnectionRecovery.TestServerNamedTransientAutoDeleteQueueAndBindingRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection
  name: TestShutdownEventHandlersRecoveryOnConnection()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestShutdownEventHandlersRecoveryOnConnection
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection()
  nameWithType: TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection*
  name: TestShutdownEventHandlersRecoveryOnConnection
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestShutdownEventHandlersRecoveryOnConnection_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection
  nameWithType: TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnection
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
  name: TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart()
  nameWithType: TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart*
  name: TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
  nameWithType: TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnConnectionAfterDelayedServerRestart
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel
  name: TestShutdownEventHandlersRecoveryOnModel()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestShutdownEventHandlersRecoveryOnModel
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel()
  nameWithType: TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel*
  name: TestShutdownEventHandlersRecoveryOnModel
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestShutdownEventHandlersRecoveryOnModel_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel
  nameWithType: TestConnectionRecovery.TestShutdownEventHandlersRecoveryOnModel
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery
  name: TestThatCancelledConsumerDoesNotReappearOnRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatCancelledConsumerDoesNotReappearOnRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery()
  nameWithType: TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery*
  name: TestThatCancelledConsumerDoesNotReappearOnRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatCancelledConsumerDoesNotReappearOnRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery
  nameWithType: TestConnectionRecovery.TestThatCancelledConsumerDoesNotReappearOnRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery
  name: TestThatDeletedExchangeBindingsDontReappearOnRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedExchangeBindingsDontReappearOnRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery()
  nameWithType: TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery*
  name: TestThatDeletedExchangeBindingsDontReappearOnRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedExchangeBindingsDontReappearOnRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery
  nameWithType: TestConnectionRecovery.TestThatDeletedExchangeBindingsDontReappearOnRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery
  name: TestThatDeletedExchangesDontReappearOnRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedExchangesDontReappearOnRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery()
  nameWithType: TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery*
  name: TestThatDeletedExchangesDontReappearOnRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedExchangesDontReappearOnRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery
  nameWithType: TestConnectionRecovery.TestThatDeletedExchangesDontReappearOnRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery
  name: TestThatDeletedQueueBindingsDontReappearOnRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedQueueBindingsDontReappearOnRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery()
  nameWithType: TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery*
  name: TestThatDeletedQueueBindingsDontReappearOnRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedQueueBindingsDontReappearOnRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery
  nameWithType: TestConnectionRecovery.TestThatDeletedQueueBindingsDontReappearOnRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery
  name: TestThatDeletedQueuesDontReappearOnRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedQueuesDontReappearOnRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery()
  nameWithType: TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery*
  name: TestThatDeletedQueuesDontReappearOnRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestThatDeletedQueuesDontReappearOnRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery
  nameWithType: TestConnectionRecovery.TestThatDeletedQueuesDontReappearOnRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestUnblockedListenersRecovery
  name: TestUnblockedListenersRecovery()
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestUnblockedListenersRecovery
  commentId: M:RabbitMQ.Client.Unit.TestConnectionRecovery.TestUnblockedListenersRecovery
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestUnblockedListenersRecovery()
  nameWithType: TestConnectionRecovery.TestUnblockedListenersRecovery()
- uid: RabbitMQ.Client.Unit.TestConnectionRecovery.TestUnblockedListenersRecovery*
  name: TestUnblockedListenersRecovery
  href: api/RabbitMQ.Client.Unit.TestConnectionRecovery.html#RabbitMQ_Client_Unit_TestConnectionRecovery_TestUnblockedListenersRecovery_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionRecovery.TestUnblockedListenersRecovery
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionRecovery.TestUnblockedListenersRecovery
  nameWithType: TestConnectionRecovery.TestUnblockedListenersRecovery
- uid: RabbitMQ.Client.Unit.TestConnectionShutdown
  name: TestConnectionShutdown
  href: api/RabbitMQ.Client.Unit.TestConnectionShutdown.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionShutdown
  fullName: RabbitMQ.Client.Unit.TestConnectionShutdown
  nameWithType: TestConnectionShutdown
- uid: RabbitMQ.Client.Unit.TestConnectionShutdown.TestConsumerDispatcherShutdown
  name: TestConsumerDispatcherShutdown()
  href: api/RabbitMQ.Client.Unit.TestConnectionShutdown.html#RabbitMQ_Client_Unit_TestConnectionShutdown_TestConsumerDispatcherShutdown
  commentId: M:RabbitMQ.Client.Unit.TestConnectionShutdown.TestConsumerDispatcherShutdown
  fullName: RabbitMQ.Client.Unit.TestConnectionShutdown.TestConsumerDispatcherShutdown()
  nameWithType: TestConnectionShutdown.TestConsumerDispatcherShutdown()
- uid: RabbitMQ.Client.Unit.TestConnectionShutdown.TestConsumerDispatcherShutdown*
  name: TestConsumerDispatcherShutdown
  href: api/RabbitMQ.Client.Unit.TestConnectionShutdown.html#RabbitMQ_Client_Unit_TestConnectionShutdown_TestConsumerDispatcherShutdown_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionShutdown.TestConsumerDispatcherShutdown
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionShutdown.TestConsumerDispatcherShutdown
  nameWithType: TestConnectionShutdown.TestConsumerDispatcherShutdown
- uid: RabbitMQ.Client.Unit.TestConnectionShutdown.TestShutdownSignalPropagationToChannels
  name: TestShutdownSignalPropagationToChannels()
  href: api/RabbitMQ.Client.Unit.TestConnectionShutdown.html#RabbitMQ_Client_Unit_TestConnectionShutdown_TestShutdownSignalPropagationToChannels
  commentId: M:RabbitMQ.Client.Unit.TestConnectionShutdown.TestShutdownSignalPropagationToChannels
  fullName: RabbitMQ.Client.Unit.TestConnectionShutdown.TestShutdownSignalPropagationToChannels()
  nameWithType: TestConnectionShutdown.TestShutdownSignalPropagationToChannels()
- uid: RabbitMQ.Client.Unit.TestConnectionShutdown.TestShutdownSignalPropagationToChannels*
  name: TestShutdownSignalPropagationToChannels
  href: api/RabbitMQ.Client.Unit.TestConnectionShutdown.html#RabbitMQ_Client_Unit_TestConnectionShutdown_TestShutdownSignalPropagationToChannels_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionShutdown.TestShutdownSignalPropagationToChannels
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionShutdown.TestShutdownSignalPropagationToChannels
  nameWithType: TestConnectionShutdown.TestShutdownSignalPropagationToChannels
- uid: RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads
  name: TestConnectionWithBackgroundThreads
  href: api/RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.html
  commentId: T:RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads
  fullName: RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads
  nameWithType: TestConnectionWithBackgroundThreads
- uid: RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled
  name: TestWithBackgroundThreadsEnabled()
  href: api/RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.html#RabbitMQ_Client_Unit_TestConnectionWithBackgroundThreads_TestWithBackgroundThreadsEnabled
  commentId: M:RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled
  fullName: RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled()
  nameWithType: TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled()
- uid: RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled*
  name: TestWithBackgroundThreadsEnabled
  href: api/RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.html#RabbitMQ_Client_Unit_TestConnectionWithBackgroundThreads_TestWithBackgroundThreadsEnabled_
  commentId: Overload:RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled
  nameWithType: TestConnectionWithBackgroundThreads.TestWithBackgroundThreadsEnabled
- uid: RabbitMQ.Client.Unit.TestConsumer
  name: TestConsumer
  href: api/RabbitMQ.Client.Unit.TestConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestConsumer
  fullName: RabbitMQ.Client.Unit.TestConsumer
  nameWithType: TestConsumer
- uid: RabbitMQ.Client.Unit.TestConsumer.TestBasicRoundtripConcurrent
  name: TestBasicRoundtripConcurrent()
  href: api/RabbitMQ.Client.Unit.TestConsumer.html#RabbitMQ_Client_Unit_TestConsumer_TestBasicRoundtripConcurrent
  commentId: M:RabbitMQ.Client.Unit.TestConsumer.TestBasicRoundtripConcurrent
  fullName: RabbitMQ.Client.Unit.TestConsumer.TestBasicRoundtripConcurrent()
  nameWithType: TestConsumer.TestBasicRoundtripConcurrent()
- uid: RabbitMQ.Client.Unit.TestConsumer.TestBasicRoundtripConcurrent*
  name: TestBasicRoundtripConcurrent
  href: api/RabbitMQ.Client.Unit.TestConsumer.html#RabbitMQ_Client_Unit_TestConsumer_TestBasicRoundtripConcurrent_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumer.TestBasicRoundtripConcurrent
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumer.TestBasicRoundtripConcurrent
  nameWithType: TestConsumer.TestBasicRoundtripConcurrent
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify
  name: TestConsumerCancelNotify
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html
  commentId: T:RabbitMQ.Client.Unit.TestConsumerCancelNotify
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify
  nameWithType: TestConsumerCancelNotify
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.consumerTag
  name: consumerTag
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_consumerTag
  commentId: F:RabbitMQ.Client.Unit.TestConsumerCancelNotify.consumerTag
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.consumerTag
  nameWithType: TestConsumerCancelNotify.consumerTag
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.lockObject
  name: lockObject
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_lockObject
  commentId: F:RabbitMQ.Client.Unit.TestConsumerCancelNotify.lockObject
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.lockObject
  nameWithType: TestConsumerCancelNotify.lockObject
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.notifiedCallback
  name: notifiedCallback
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_notifiedCallback
  commentId: F:RabbitMQ.Client.Unit.TestConsumerCancelNotify.notifiedCallback
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.notifiedCallback
  nameWithType: TestConsumerCancelNotify.notifiedCallback
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.notifiedEvent
  name: notifiedEvent
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_notifiedEvent
  commentId: F:RabbitMQ.Client.Unit.TestConsumerCancelNotify.notifiedEvent
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.notifiedEvent
  nameWithType: TestConsumerCancelNotify.notifiedEvent
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel(System.String,System.Boolean,System.Boolean@)
  name: TestConsumerCancel(String, Boolean, ref Boolean)
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestConsumerCancel_System_String_System_Boolean_System_Boolean__
  commentId: M:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel(System.String,System.Boolean,System.Boolean@)
  name.vb: TestConsumerCancel(String, Boolean, ByRef Boolean)
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel(System.String, System.Boolean, ref System.Boolean)
  fullName.vb: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel(System.String, System.Boolean, ByRef System.Boolean)
  nameWithType: TestConsumerCancelNotify.TestConsumerCancel(String, Boolean, ref Boolean)
  nameWithType.vb: TestConsumerCancelNotify.TestConsumerCancel(String, Boolean, ByRef Boolean)
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel*
  name: TestConsumerCancel
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestConsumerCancel_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancel
  nameWithType: TestConsumerCancelNotify.TestConsumerCancel
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelEvent
  name: TestConsumerCancelEvent()
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestConsumerCancelEvent
  commentId: M:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelEvent
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelEvent()
  nameWithType: TestConsumerCancelNotify.TestConsumerCancelEvent()
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelEvent*
  name: TestConsumerCancelEvent
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestConsumerCancelEvent_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelEvent
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelEvent
  nameWithType: TestConsumerCancelNotify.TestConsumerCancelEvent
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelNotification
  name: TestConsumerCancelNotification()
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestConsumerCancelNotification
  commentId: M:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelNotification
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelNotification()
  nameWithType: TestConsumerCancelNotify.TestConsumerCancelNotification()
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelNotification*
  name: TestConsumerCancelNotification
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestConsumerCancelNotification_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelNotification
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestConsumerCancelNotification
  nameWithType: TestConsumerCancelNotify.TestConsumerCancelNotification
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestCorrectConsumerTag
  name: TestCorrectConsumerTag()
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestCorrectConsumerTag
  commentId: M:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestCorrectConsumerTag
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestCorrectConsumerTag()
  nameWithType: TestConsumerCancelNotify.TestCorrectConsumerTag()
- uid: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestCorrectConsumerTag*
  name: TestCorrectConsumerTag
  href: api/RabbitMQ.Client.Unit.TestConsumerCancelNotify.html#RabbitMQ_Client_Unit_TestConsumerCancelNotify_TestCorrectConsumerTag_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestCorrectConsumerTag
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerCancelNotify.TestCorrectConsumerTag
  nameWithType: TestConsumerCancelNotify.TestCorrectConsumerTag
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions
  name: TestConsumerExceptions
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html
  commentId: T:RabbitMQ.Client.Unit.TestConsumerExceptions
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions
  nameWithType: TestConsumerExceptions
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestCancelNotificationExceptionHandling
  name: TestCancelNotificationExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestCancelNotificationExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestConsumerExceptions.TestCancelNotificationExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestCancelNotificationExceptionHandling()
  nameWithType: TestConsumerExceptions.TestCancelNotificationExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestCancelNotificationExceptionHandling*
  name: TestCancelNotificationExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestCancelNotificationExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerExceptions.TestCancelNotificationExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestCancelNotificationExceptionHandling
  nameWithType: TestConsumerExceptions.TestCancelNotificationExceptionHandling
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerCancelOkExceptionHandling
  name: TestConsumerCancelOkExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestConsumerCancelOkExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerCancelOkExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerCancelOkExceptionHandling()
  nameWithType: TestConsumerExceptions.TestConsumerCancelOkExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerCancelOkExceptionHandling*
  name: TestConsumerCancelOkExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestConsumerCancelOkExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerCancelOkExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerCancelOkExceptionHandling
  nameWithType: TestConsumerExceptions.TestConsumerCancelOkExceptionHandling
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  name: TestConsumerConsumeOkExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestConsumerConsumeOkExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling()
  nameWithType: TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling*
  name: TestConsumerConsumeOkExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestConsumerConsumeOkExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling
  nameWithType: TestConsumerExceptions.TestConsumerConsumeOkExceptionHandling
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerShutdownExceptionHandling
  name: TestConsumerShutdownExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestConsumerShutdownExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerShutdownExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerShutdownExceptionHandling()
  nameWithType: TestConsumerExceptions.TestConsumerShutdownExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerShutdownExceptionHandling*
  name: TestConsumerShutdownExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestConsumerShutdownExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerShutdownExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestConsumerShutdownExceptionHandling
  nameWithType: TestConsumerExceptions.TestConsumerShutdownExceptionHandling
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestDeliveryExceptionHandling
  name: TestDeliveryExceptionHandling()
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestDeliveryExceptionHandling
  commentId: M:RabbitMQ.Client.Unit.TestConsumerExceptions.TestDeliveryExceptionHandling
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestDeliveryExceptionHandling()
  nameWithType: TestConsumerExceptions.TestDeliveryExceptionHandling()
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestDeliveryExceptionHandling*
  name: TestDeliveryExceptionHandling
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestDeliveryExceptionHandling_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerExceptions.TestDeliveryExceptionHandling
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestDeliveryExceptionHandling
  nameWithType: TestConsumerExceptions.TestDeliveryExceptionHandling
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer,System.Action{RabbitMQ.Client.IModel,System.String,RabbitMQ.Client.IBasicConsumer,System.String})
  name: TestExceptionHandlingWith(IBasicConsumer, Action<IModel, String, IBasicConsumer, String>)
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestExceptionHandlingWith_RabbitMQ_Client_IBasicConsumer_System_Action_RabbitMQ_Client_IModel_System_String_RabbitMQ_Client_IBasicConsumer_System_String__
  commentId: M:RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer,System.Action{RabbitMQ.Client.IModel,System.String,RabbitMQ.Client.IBasicConsumer,System.String})
  name.vb: TestExceptionHandlingWith(IBasicConsumer, Action(Of IModel, String, IBasicConsumer, String))
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer, System.Action<RabbitMQ.Client.IModel, System.String, RabbitMQ.Client.IBasicConsumer, System.String>)
  fullName.vb: RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith(RabbitMQ.Client.IBasicConsumer, System.Action(Of RabbitMQ.Client.IModel, System.String, RabbitMQ.Client.IBasicConsumer, System.String))
  nameWithType: TestConsumerExceptions.TestExceptionHandlingWith(IBasicConsumer, Action<IModel, String, IBasicConsumer, String>)
  nameWithType.vb: TestConsumerExceptions.TestExceptionHandlingWith(IBasicConsumer, Action(Of IModel, String, IBasicConsumer, String))
- uid: RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith*
  name: TestExceptionHandlingWith
  href: api/RabbitMQ.Client.Unit.TestConsumerExceptions.html#RabbitMQ_Client_Unit_TestConsumerExceptions_TestExceptionHandlingWith_
  commentId: Overload:RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestConsumerExceptions.TestExceptionHandlingWith
  nameWithType: TestConsumerExceptions.TestExceptionHandlingWith
- uid: RabbitMQ.Client.Unit.TestEndpointResolver
  name: TestEndpointResolver
  href: api/RabbitMQ.Client.Unit.TestEndpointResolver.html
  commentId: T:RabbitMQ.Client.Unit.TestEndpointResolver
  fullName: RabbitMQ.Client.Unit.TestEndpointResolver
  nameWithType: TestEndpointResolver
- uid: RabbitMQ.Client.Unit.TestEndpointResolver.#ctor(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint})
  name: TestEndpointResolver(IEnumerable<AmqpTcpEndpoint>)
  href: api/RabbitMQ.Client.Unit.TestEndpointResolver.html#RabbitMQ_Client_Unit_TestEndpointResolver__ctor_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__
  commentId: M:RabbitMQ.Client.Unit.TestEndpointResolver.#ctor(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint})
  name.vb: TestEndpointResolver(IEnumerable(Of AmqpTcpEndpoint))
  fullName: RabbitMQ.Client.Unit.TestEndpointResolver.TestEndpointResolver(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>)
  fullName.vb: RabbitMQ.Client.Unit.TestEndpointResolver.TestEndpointResolver(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint))
  nameWithType: TestEndpointResolver.TestEndpointResolver(IEnumerable<AmqpTcpEndpoint>)
  nameWithType.vb: TestEndpointResolver.TestEndpointResolver(IEnumerable(Of AmqpTcpEndpoint))
- uid: RabbitMQ.Client.Unit.TestEndpointResolver.#ctor*
  name: TestEndpointResolver
  href: api/RabbitMQ.Client.Unit.TestEndpointResolver.html#RabbitMQ_Client_Unit_TestEndpointResolver__ctor_
  commentId: Overload:RabbitMQ.Client.Unit.TestEndpointResolver.#ctor
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestEndpointResolver.TestEndpointResolver
  nameWithType: TestEndpointResolver.TestEndpointResolver
- uid: RabbitMQ.Client.Unit.TestEndpointResolver.All
  name: All()
  href: api/RabbitMQ.Client.Unit.TestEndpointResolver.html#RabbitMQ_Client_Unit_TestEndpointResolver_All
  commentId: M:RabbitMQ.Client.Unit.TestEndpointResolver.All
  fullName: RabbitMQ.Client.Unit.TestEndpointResolver.All()
  nameWithType: TestEndpointResolver.All()
- uid: RabbitMQ.Client.Unit.TestEndpointResolver.All*
  name: All
  href: api/RabbitMQ.Client.Unit.TestEndpointResolver.html#RabbitMQ_Client_Unit_TestEndpointResolver_All_
  commentId: Overload:RabbitMQ.Client.Unit.TestEndpointResolver.All
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestEndpointResolver.All
  nameWithType: TestEndpointResolver.All
- uid: RabbitMQ.Client.Unit.TestEventingConsumer
  name: TestEventingConsumer
  href: api/RabbitMQ.Client.Unit.TestEventingConsumer.html
  commentId: T:RabbitMQ.Client.Unit.TestEventingConsumer
  fullName: RabbitMQ.Client.Unit.TestEventingConsumer
  nameWithType: TestEventingConsumer
- uid: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerDeliveryEvents
  name: TestEventingConsumerDeliveryEvents()
  href: api/RabbitMQ.Client.Unit.TestEventingConsumer.html#RabbitMQ_Client_Unit_TestEventingConsumer_TestEventingConsumerDeliveryEvents
  commentId: M:RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerDeliveryEvents
  fullName: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerDeliveryEvents()
  nameWithType: TestEventingConsumer.TestEventingConsumerDeliveryEvents()
- uid: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerDeliveryEvents*
  name: TestEventingConsumerDeliveryEvents
  href: api/RabbitMQ.Client.Unit.TestEventingConsumer.html#RabbitMQ_Client_Unit_TestEventingConsumer_TestEventingConsumerDeliveryEvents_
  commentId: Overload:RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerDeliveryEvents
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerDeliveryEvents
  nameWithType: TestEventingConsumer.TestEventingConsumerDeliveryEvents
- uid: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerRegistrationEvents
  name: TestEventingConsumerRegistrationEvents()
  href: api/RabbitMQ.Client.Unit.TestEventingConsumer.html#RabbitMQ_Client_Unit_TestEventingConsumer_TestEventingConsumerRegistrationEvents
  commentId: M:RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerRegistrationEvents
  fullName: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerRegistrationEvents()
  nameWithType: TestEventingConsumer.TestEventingConsumerRegistrationEvents()
- uid: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerRegistrationEvents*
  name: TestEventingConsumerRegistrationEvents
  href: api/RabbitMQ.Client.Unit.TestEventingConsumer.html#RabbitMQ_Client_Unit_TestEventingConsumer_TestEventingConsumerRegistrationEvents_
  commentId: Overload:RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerRegistrationEvents
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestEventingConsumer.TestEventingConsumerRegistrationEvents
  nameWithType: TestEventingConsumer.TestEventingConsumerRegistrationEvents
- uid: RabbitMQ.Client.Unit.TestExceptionMessages
  name: TestExceptionMessages
  href: api/RabbitMQ.Client.Unit.TestExceptionMessages.html
  commentId: T:RabbitMQ.Client.Unit.TestExceptionMessages
  fullName: RabbitMQ.Client.Unit.TestExceptionMessages
  nameWithType: TestExceptionMessages
- uid: RabbitMQ.Client.Unit.TestExceptionMessages.TestAlreadyClosedExceptionMessage
  name: TestAlreadyClosedExceptionMessage()
  href: api/RabbitMQ.Client.Unit.TestExceptionMessages.html#RabbitMQ_Client_Unit_TestExceptionMessages_TestAlreadyClosedExceptionMessage
  commentId: M:RabbitMQ.Client.Unit.TestExceptionMessages.TestAlreadyClosedExceptionMessage
  fullName: RabbitMQ.Client.Unit.TestExceptionMessages.TestAlreadyClosedExceptionMessage()
  nameWithType: TestExceptionMessages.TestAlreadyClosedExceptionMessage()
- uid: RabbitMQ.Client.Unit.TestExceptionMessages.TestAlreadyClosedExceptionMessage*
  name: TestAlreadyClosedExceptionMessage
  href: api/RabbitMQ.Client.Unit.TestExceptionMessages.html#RabbitMQ_Client_Unit_TestExceptionMessages_TestAlreadyClosedExceptionMessage_
  commentId: Overload:RabbitMQ.Client.Unit.TestExceptionMessages.TestAlreadyClosedExceptionMessage
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestExceptionMessages.TestAlreadyClosedExceptionMessage
  nameWithType: TestExceptionMessages.TestAlreadyClosedExceptionMessage
- uid: RabbitMQ.Client.Unit.TestExchangeDeclare
  name: TestExchangeDeclare
  href: api/RabbitMQ.Client.Unit.TestExchangeDeclare.html
  commentId: T:RabbitMQ.Client.Unit.TestExchangeDeclare
  fullName: RabbitMQ.Client.Unit.TestExchangeDeclare
  nameWithType: TestExchangeDeclare
- uid: RabbitMQ.Client.Unit.TestExchangeDeclare.TestConcurrentExchangeDeclare
  name: TestConcurrentExchangeDeclare()
  href: api/RabbitMQ.Client.Unit.TestExchangeDeclare.html#RabbitMQ_Client_Unit_TestExchangeDeclare_TestConcurrentExchangeDeclare
  commentId: M:RabbitMQ.Client.Unit.TestExchangeDeclare.TestConcurrentExchangeDeclare
  fullName: RabbitMQ.Client.Unit.TestExchangeDeclare.TestConcurrentExchangeDeclare()
  nameWithType: TestExchangeDeclare.TestConcurrentExchangeDeclare()
- uid: RabbitMQ.Client.Unit.TestExchangeDeclare.TestConcurrentExchangeDeclare*
  name: TestConcurrentExchangeDeclare
  href: api/RabbitMQ.Client.Unit.TestExchangeDeclare.html#RabbitMQ_Client_Unit_TestExchangeDeclare_TestConcurrentExchangeDeclare_
  commentId: Overload:RabbitMQ.Client.Unit.TestExchangeDeclare.TestConcurrentExchangeDeclare
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestExchangeDeclare.TestConcurrentExchangeDeclare
  nameWithType: TestExchangeDeclare.TestConcurrentExchangeDeclare
- uid: RabbitMQ.Client.Unit.TestExtensions
  name: TestExtensions
  href: api/RabbitMQ.Client.Unit.TestExtensions.html
  commentId: T:RabbitMQ.Client.Unit.TestExtensions
  fullName: RabbitMQ.Client.Unit.TestExtensions
  nameWithType: TestExtensions
- uid: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBarrier
  name: TestConfirmBarrier()
  href: api/RabbitMQ.Client.Unit.TestExtensions.html#RabbitMQ_Client_Unit_TestExtensions_TestConfirmBarrier
  commentId: M:RabbitMQ.Client.Unit.TestExtensions.TestConfirmBarrier
  fullName: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBarrier()
  nameWithType: TestExtensions.TestConfirmBarrier()
- uid: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBarrier*
  name: TestConfirmBarrier
  href: api/RabbitMQ.Client.Unit.TestExtensions.html#RabbitMQ_Client_Unit_TestExtensions_TestConfirmBarrier_
  commentId: Overload:RabbitMQ.Client.Unit.TestExtensions.TestConfirmBarrier
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBarrier
  nameWithType: TestExtensions.TestConfirmBarrier
- uid: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBeforeWait
  name: TestConfirmBeforeWait()
  href: api/RabbitMQ.Client.Unit.TestExtensions.html#RabbitMQ_Client_Unit_TestExtensions_TestConfirmBeforeWait
  commentId: M:RabbitMQ.Client.Unit.TestExtensions.TestConfirmBeforeWait
  fullName: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBeforeWait()
  nameWithType: TestExtensions.TestConfirmBeforeWait()
- uid: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBeforeWait*
  name: TestConfirmBeforeWait
  href: api/RabbitMQ.Client.Unit.TestExtensions.html#RabbitMQ_Client_Unit_TestExtensions_TestConfirmBeforeWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestExtensions.TestConfirmBeforeWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestExtensions.TestConfirmBeforeWait
  nameWithType: TestExtensions.TestConfirmBeforeWait
- uid: RabbitMQ.Client.Unit.TestExtensions.TestExchangeBinding
  name: TestExchangeBinding()
  href: api/RabbitMQ.Client.Unit.TestExtensions.html#RabbitMQ_Client_Unit_TestExtensions_TestExchangeBinding
  commentId: M:RabbitMQ.Client.Unit.TestExtensions.TestExchangeBinding
  fullName: RabbitMQ.Client.Unit.TestExtensions.TestExchangeBinding()
  nameWithType: TestExtensions.TestExchangeBinding()
- uid: RabbitMQ.Client.Unit.TestExtensions.TestExchangeBinding*
  name: TestExchangeBinding
  href: api/RabbitMQ.Client.Unit.TestExtensions.html#RabbitMQ_Client_Unit_TestExtensions_TestExchangeBinding_
  commentId: Overload:RabbitMQ.Client.Unit.TestExtensions.TestExchangeBinding
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestExtensions.TestExchangeBinding
  nameWithType: TestExtensions.TestExchangeBinding
- uid: RabbitMQ.Client.Unit.TestFloodPublishing
  name: TestFloodPublishing
  href: api/RabbitMQ.Client.Unit.TestFloodPublishing.html
  commentId: T:RabbitMQ.Client.Unit.TestFloodPublishing
  fullName: RabbitMQ.Client.Unit.TestFloodPublishing
  nameWithType: TestFloodPublishing
- uid: RabbitMQ.Client.Unit.TestFloodPublishing.TestMultithreadFloodPublishing
  name: TestMultithreadFloodPublishing()
  href: api/RabbitMQ.Client.Unit.TestFloodPublishing.html#RabbitMQ_Client_Unit_TestFloodPublishing_TestMultithreadFloodPublishing
  commentId: M:RabbitMQ.Client.Unit.TestFloodPublishing.TestMultithreadFloodPublishing
  fullName: RabbitMQ.Client.Unit.TestFloodPublishing.TestMultithreadFloodPublishing()
  nameWithType: TestFloodPublishing.TestMultithreadFloodPublishing()
- uid: RabbitMQ.Client.Unit.TestFloodPublishing.TestMultithreadFloodPublishing*
  name: TestMultithreadFloodPublishing
  href: api/RabbitMQ.Client.Unit.TestFloodPublishing.html#RabbitMQ_Client_Unit_TestFloodPublishing_TestMultithreadFloodPublishing_
  commentId: Overload:RabbitMQ.Client.Unit.TestFloodPublishing.TestMultithreadFloodPublishing
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestFloodPublishing.TestMultithreadFloodPublishing
  nameWithType: TestFloodPublishing.TestMultithreadFloodPublishing
- uid: RabbitMQ.Client.Unit.TestFloodPublishing.TestUnthrottledFloodPublishing
  name: TestUnthrottledFloodPublishing()
  href: api/RabbitMQ.Client.Unit.TestFloodPublishing.html#RabbitMQ_Client_Unit_TestFloodPublishing_TestUnthrottledFloodPublishing
  commentId: M:RabbitMQ.Client.Unit.TestFloodPublishing.TestUnthrottledFloodPublishing
  fullName: RabbitMQ.Client.Unit.TestFloodPublishing.TestUnthrottledFloodPublishing()
  nameWithType: TestFloodPublishing.TestUnthrottledFloodPublishing()
- uid: RabbitMQ.Client.Unit.TestFloodPublishing.TestUnthrottledFloodPublishing*
  name: TestUnthrottledFloodPublishing
  href: api/RabbitMQ.Client.Unit.TestFloodPublishing.html#RabbitMQ_Client_Unit_TestFloodPublishing_TestUnthrottledFloodPublishing_
  commentId: Overload:RabbitMQ.Client.Unit.TestFloodPublishing.TestUnthrottledFloodPublishing
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestFloodPublishing.TestUnthrottledFloodPublishing
  nameWithType: TestFloodPublishing.TestUnthrottledFloodPublishing
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions
  name: TestIEndpointResolverExtensions
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html
  commentId: T:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions
  nameWithType: TestIEndpointResolverExtensions
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
  name: SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints()
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html#RabbitMQ_Client_Unit_TestIEndpointResolverExtensions_SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
  commentId: M:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints()
  nameWithType: TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints()
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints*
  name: SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html#RabbitMQ_Client_Unit_TestIEndpointResolverExtensions_SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints_
  commentId: Overload:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
  nameWithType: TestIEndpointResolverExtensions.SelectOneShouldRaiseThrownExceptionWhenThereAreOnlyInaccessibleEndpoints
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
  name: SelectOneShouldReturnDefaultWhenThereAreNoEndpoints()
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html#RabbitMQ_Client_Unit_TestIEndpointResolverExtensions_SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
  commentId: M:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints()
  nameWithType: TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints()
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints*
  name: SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html#RabbitMQ_Client_Unit_TestIEndpointResolverExtensions_SelectOneShouldReturnDefaultWhenThereAreNoEndpoints_
  commentId: Overload:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
  nameWithType: TestIEndpointResolverExtensions.SelectOneShouldReturnDefaultWhenThereAreNoEndpoints
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint
  name: SelectOneShouldReturnFoundEndpoint()
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html#RabbitMQ_Client_Unit_TestIEndpointResolverExtensions_SelectOneShouldReturnFoundEndpoint
  commentId: M:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint()
  nameWithType: TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint()
- uid: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint*
  name: SelectOneShouldReturnFoundEndpoint
  href: api/RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.html#RabbitMQ_Client_Unit_TestIEndpointResolverExtensions_SelectOneShouldReturnFoundEndpoint_
  commentId: Overload:RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint
  nameWithType: TestIEndpointResolverExtensions.SelectOneShouldReturnFoundEndpoint
- uid: RabbitMQ.Client.Unit.TestIModelAllocation
  name: TestIModelAllocation
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html
  commentId: T:RabbitMQ.Client.Unit.TestIModelAllocation
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation
  nameWithType: TestIModelAllocation
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingLast
  name: AllocateAfterFreeingLast()
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_AllocateAfterFreeingLast
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingLast
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingLast()
  nameWithType: TestIModelAllocation.AllocateAfterFreeingLast()
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingLast*
  name: AllocateAfterFreeingLast
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_AllocateAfterFreeingLast_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingLast
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingLast
  nameWithType: TestIModelAllocation.AllocateAfterFreeingLast
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingMany
  name: AllocateAfterFreeingMany()
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_AllocateAfterFreeingMany
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingMany
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingMany()
  nameWithType: TestIModelAllocation.AllocateAfterFreeingMany()
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingMany*
  name: AllocateAfterFreeingMany
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_AllocateAfterFreeingMany_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingMany
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateAfterFreeingMany
  nameWithType: TestIModelAllocation.AllocateAfterFreeingMany
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateInOrder
  name: AllocateInOrder()
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_AllocateInOrder
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.AllocateInOrder
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateInOrder()
  nameWithType: TestIModelAllocation.AllocateInOrder()
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateInOrder*
  name: AllocateInOrder
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_AllocateInOrder_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.AllocateInOrder
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.AllocateInOrder
  nameWithType: TestIModelAllocation.AllocateInOrder
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.CHANNEL_COUNT
  name: CHANNEL_COUNT
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_CHANNEL_COUNT
  commentId: F:RabbitMQ.Client.Unit.TestIModelAllocation.CHANNEL_COUNT
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.CHANNEL_COUNT
  nameWithType: TestIModelAllocation.CHANNEL_COUNT
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.CompareModels(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel)
  name: CompareModels(IModel, IModel)
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_CompareModels_RabbitMQ_Client_IModel_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.CompareModels(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.CompareModels(RabbitMQ.Client.IModel, RabbitMQ.Client.IModel)
  nameWithType: TestIModelAllocation.CompareModels(IModel, IModel)
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.CompareModels*
  name: CompareModels
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_CompareModels_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.CompareModels
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.CompareModels
  nameWithType: TestIModelAllocation.CompareModels
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.Connect
  name: Connect()
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_Connect
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.Connect
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.Connect()
  nameWithType: TestIModelAllocation.Connect()
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.Connect*
  name: Connect
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_Connect_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.Connect
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.Connect
  nameWithType: TestIModelAllocation.Connect
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.Disconnect
  name: Disconnect()
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_Disconnect
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.Disconnect
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.Disconnect()
  nameWithType: TestIModelAllocation.Disconnect()
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.Disconnect*
  name: Disconnect
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_Disconnect_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.Disconnect
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.Disconnect
  nameWithType: TestIModelAllocation.Disconnect
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.ModelNumber(RabbitMQ.Client.IModel)
  name: ModelNumber(IModel)
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_ModelNumber_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.Unit.TestIModelAllocation.ModelNumber(RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.ModelNumber(RabbitMQ.Client.IModel)
  nameWithType: TestIModelAllocation.ModelNumber(IModel)
- uid: RabbitMQ.Client.Unit.TestIModelAllocation.ModelNumber*
  name: ModelNumber
  href: api/RabbitMQ.Client.Unit.TestIModelAllocation.html#RabbitMQ_Client_Unit_TestIModelAllocation_ModelNumber_
  commentId: Overload:RabbitMQ.Client.Unit.TestIModelAllocation.ModelNumber
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIModelAllocation.ModelNumber
  nameWithType: TestIModelAllocation.ModelNumber
- uid: RabbitMQ.Client.Unit.TestInitialConnection
  name: TestInitialConnection
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html
  commentId: T:RabbitMQ.Client.Unit.TestInitialConnection
  fullName: RabbitMQ.Client.Unit.TestInitialConnection
  nameWithType: TestInitialConnection
- uid: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList
  name: TestBasicConnectionRecoveryWithHostnameList()
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html#RabbitMQ_Client_Unit_TestInitialConnection_TestBasicConnectionRecoveryWithHostnameList
  commentId: M:RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList
  fullName: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList()
  nameWithType: TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList()
- uid: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList*
  name: TestBasicConnectionRecoveryWithHostnameList
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html#RabbitMQ_Client_Unit_TestInitialConnection_TestBasicConnectionRecoveryWithHostnameList_
  commentId: Overload:RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList
  nameWithType: TestInitialConnection.TestBasicConnectionRecoveryWithHostnameList
- uid: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  name: TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts()
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html#RabbitMQ_Client_Unit_TestInitialConnection_TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  commentId: M:RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  fullName: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts()
  nameWithType: TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts()
- uid: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts*
  name: TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html#RabbitMQ_Client_Unit_TestInitialConnection_TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts_
  commentId: Overload:RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
  nameWithType: TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListAndUnreachableHosts
- uid: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
  name: TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts()
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html#RabbitMQ_Client_Unit_TestInitialConnection_TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
  commentId: M:RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
  fullName: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts()
  nameWithType: TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts()
- uid: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts*
  name: TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
  href: api/RabbitMQ.Client.Unit.TestInitialConnection.html#RabbitMQ_Client_Unit_TestInitialConnection_TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts_
  commentId: Overload:RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
  nameWithType: TestInitialConnection.TestBasicConnectionRecoveryWithHostnameListWithOnlyUnreachableHosts
- uid: RabbitMQ.Client.Unit.TestIntAllocator
  name: TestIntAllocator
  href: api/RabbitMQ.Client.Unit.TestIntAllocator.html
  commentId: T:RabbitMQ.Client.Unit.TestIntAllocator
  fullName: RabbitMQ.Client.Unit.TestIntAllocator
  nameWithType: TestIntAllocator
- uid: RabbitMQ.Client.Unit.TestIntAllocator.TestAllocateAll
  name: TestAllocateAll()
  href: api/RabbitMQ.Client.Unit.TestIntAllocator.html#RabbitMQ_Client_Unit_TestIntAllocator_TestAllocateAll
  commentId: M:RabbitMQ.Client.Unit.TestIntAllocator.TestAllocateAll
  fullName: RabbitMQ.Client.Unit.TestIntAllocator.TestAllocateAll()
  nameWithType: TestIntAllocator.TestAllocateAll()
- uid: RabbitMQ.Client.Unit.TestIntAllocator.TestAllocateAll*
  name: TestAllocateAll
  href: api/RabbitMQ.Client.Unit.TestIntAllocator.html#RabbitMQ_Client_Unit_TestIntAllocator_TestAllocateAll_
  commentId: Overload:RabbitMQ.Client.Unit.TestIntAllocator.TestAllocateAll
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIntAllocator.TestAllocateAll
  nameWithType: TestIntAllocator.TestAllocateAll
- uid: RabbitMQ.Client.Unit.TestIntAllocator.TestRandomAllocation
  name: TestRandomAllocation()
  href: api/RabbitMQ.Client.Unit.TestIntAllocator.html#RabbitMQ_Client_Unit_TestIntAllocator_TestRandomAllocation
  commentId: M:RabbitMQ.Client.Unit.TestIntAllocator.TestRandomAllocation
  fullName: RabbitMQ.Client.Unit.TestIntAllocator.TestRandomAllocation()
  nameWithType: TestIntAllocator.TestRandomAllocation()
- uid: RabbitMQ.Client.Unit.TestIntAllocator.TestRandomAllocation*
  name: TestRandomAllocation
  href: api/RabbitMQ.Client.Unit.TestIntAllocator.html#RabbitMQ_Client_Unit_TestIntAllocator_TestRandomAllocation_
  commentId: Overload:RabbitMQ.Client.Unit.TestIntAllocator.TestRandomAllocation
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestIntAllocator.TestRandomAllocation
  nameWithType: TestIntAllocator.TestRandomAllocation
- uid: RabbitMQ.Client.Unit.TestInvalidAck
  name: TestInvalidAck
  href: api/RabbitMQ.Client.Unit.TestInvalidAck.html
  commentId: T:RabbitMQ.Client.Unit.TestInvalidAck
  fullName: RabbitMQ.Client.Unit.TestInvalidAck
  nameWithType: TestInvalidAck
- uid: RabbitMQ.Client.Unit.TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse
  name: TestAckWithUnknownConsumerTagAndMultipleFalse()
  href: api/RabbitMQ.Client.Unit.TestInvalidAck.html#RabbitMQ_Client_Unit_TestInvalidAck_TestAckWithUnknownConsumerTagAndMultipleFalse
  commentId: M:RabbitMQ.Client.Unit.TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse
  fullName: RabbitMQ.Client.Unit.TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse()
  nameWithType: TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse()
- uid: RabbitMQ.Client.Unit.TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse*
  name: TestAckWithUnknownConsumerTagAndMultipleFalse
  href: api/RabbitMQ.Client.Unit.TestInvalidAck.html#RabbitMQ_Client_Unit_TestInvalidAck_TestAckWithUnknownConsumerTagAndMultipleFalse_
  commentId: Overload:RabbitMQ.Client.Unit.TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse
  nameWithType: TestInvalidAck.TestAckWithUnknownConsumerTagAndMultipleFalse
- uid: RabbitMQ.Client.Unit.TestMainLoop
  name: TestMainLoop
  href: api/RabbitMQ.Client.Unit.TestMainLoop.html
  commentId: T:RabbitMQ.Client.Unit.TestMainLoop
  fullName: RabbitMQ.Client.Unit.TestMainLoop
  nameWithType: TestMainLoop
- uid: RabbitMQ.Client.Unit.TestMainLoop.TestCloseWithFaultyConsumer
  name: TestCloseWithFaultyConsumer()
  href: api/RabbitMQ.Client.Unit.TestMainLoop.html#RabbitMQ_Client_Unit_TestMainLoop_TestCloseWithFaultyConsumer
  commentId: M:RabbitMQ.Client.Unit.TestMainLoop.TestCloseWithFaultyConsumer
  fullName: RabbitMQ.Client.Unit.TestMainLoop.TestCloseWithFaultyConsumer()
  nameWithType: TestMainLoop.TestCloseWithFaultyConsumer()
- uid: RabbitMQ.Client.Unit.TestMainLoop.TestCloseWithFaultyConsumer*
  name: TestCloseWithFaultyConsumer
  href: api/RabbitMQ.Client.Unit.TestMainLoop.html#RabbitMQ_Client_Unit_TestMainLoop_TestCloseWithFaultyConsumer_
  commentId: Overload:RabbitMQ.Client.Unit.TestMainLoop.TestCloseWithFaultyConsumer
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestMainLoop.TestCloseWithFaultyConsumer
  nameWithType: TestMainLoop.TestCloseWithFaultyConsumer
- uid: RabbitMQ.Client.Unit.TestNoWait
  name: TestNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html
  commentId: T:RabbitMQ.Client.Unit.TestNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait
  nameWithType: TestNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeBindNoWait
  name: TestExchangeBindNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeBindNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestExchangeBindNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeBindNoWait()
  nameWithType: TestNoWait.TestExchangeBindNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeBindNoWait*
  name: TestExchangeBindNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeBindNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestExchangeBindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeBindNoWait
  nameWithType: TestNoWait.TestExchangeBindNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeclareNoWait
  name: TestExchangeDeclareNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeDeclareNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeclareNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeclareNoWait()
  nameWithType: TestNoWait.TestExchangeDeclareNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeclareNoWait*
  name: TestExchangeDeclareNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeDeclareNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeclareNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeclareNoWait
  nameWithType: TestNoWait.TestExchangeDeclareNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeleteNoWait
  name: TestExchangeDeleteNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeDeleteNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeleteNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeleteNoWait()
  nameWithType: TestNoWait.TestExchangeDeleteNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeleteNoWait*
  name: TestExchangeDeleteNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeDeleteNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeleteNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeDeleteNoWait
  nameWithType: TestNoWait.TestExchangeDeleteNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeUnbindNoWait
  name: TestExchangeUnbindNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeUnbindNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestExchangeUnbindNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeUnbindNoWait()
  nameWithType: TestNoWait.TestExchangeUnbindNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestExchangeUnbindNoWait*
  name: TestExchangeUnbindNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestExchangeUnbindNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestExchangeUnbindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestExchangeUnbindNoWait
  nameWithType: TestNoWait.TestExchangeUnbindNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestQueueBindNoWait
  name: TestQueueBindNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestQueueBindNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestQueueBindNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestQueueBindNoWait()
  nameWithType: TestNoWait.TestQueueBindNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestQueueBindNoWait*
  name: TestQueueBindNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestQueueBindNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestQueueBindNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestQueueBindNoWait
  nameWithType: TestNoWait.TestQueueBindNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeclareNoWait
  name: TestQueueDeclareNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestQueueDeclareNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestQueueDeclareNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeclareNoWait()
  nameWithType: TestNoWait.TestQueueDeclareNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeclareNoWait*
  name: TestQueueDeclareNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestQueueDeclareNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestQueueDeclareNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeclareNoWait
  nameWithType: TestNoWait.TestQueueDeclareNoWait
- uid: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeleteNoWait
  name: TestQueueDeleteNoWait()
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestQueueDeleteNoWait
  commentId: M:RabbitMQ.Client.Unit.TestNoWait.TestQueueDeleteNoWait
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeleteNoWait()
  nameWithType: TestNoWait.TestQueueDeleteNoWait()
- uid: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeleteNoWait*
  name: TestQueueDeleteNoWait
  href: api/RabbitMQ.Client.Unit.TestNoWait.html#RabbitMQ_Client_Unit_TestNoWait_TestQueueDeleteNoWait_
  commentId: Overload:RabbitMQ.Client.Unit.TestNoWait.TestQueueDeleteNoWait
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestNoWait.TestQueueDeleteNoWait
  nameWithType: TestNoWait.TestQueueDeleteNoWait
- uid: RabbitMQ.Client.Unit.TestPassiveDeclare
  name: TestPassiveDeclare
  href: api/RabbitMQ.Client.Unit.TestPassiveDeclare.html
  commentId: T:RabbitMQ.Client.Unit.TestPassiveDeclare
  fullName: RabbitMQ.Client.Unit.TestPassiveDeclare
  nameWithType: TestPassiveDeclare
- uid: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist
  name: TestPassiveExchangeDeclareWhenExchangeDoesNotExist()
  href: api/RabbitMQ.Client.Unit.TestPassiveDeclare.html#RabbitMQ_Client_Unit_TestPassiveDeclare_TestPassiveExchangeDeclareWhenExchangeDoesNotExist
  commentId: M:RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist
  fullName: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist()
  nameWithType: TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist()
- uid: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist*
  name: TestPassiveExchangeDeclareWhenExchangeDoesNotExist
  href: api/RabbitMQ.Client.Unit.TestPassiveDeclare.html#RabbitMQ_Client_Unit_TestPassiveDeclare_TestPassiveExchangeDeclareWhenExchangeDoesNotExist_
  commentId: Overload:RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist
  nameWithType: TestPassiveDeclare.TestPassiveExchangeDeclareWhenExchangeDoesNotExist
- uid: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist
  name: TestPassiveQueueDeclareWhenQueueDoesNotExist()
  href: api/RabbitMQ.Client.Unit.TestPassiveDeclare.html#RabbitMQ_Client_Unit_TestPassiveDeclare_TestPassiveQueueDeclareWhenQueueDoesNotExist
  commentId: M:RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist
  fullName: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist()
  nameWithType: TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist()
- uid: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist*
  name: TestPassiveQueueDeclareWhenQueueDoesNotExist
  href: api/RabbitMQ.Client.Unit.TestPassiveDeclare.html#RabbitMQ_Client_Unit_TestPassiveDeclare_TestPassiveQueueDeclareWhenQueueDoesNotExist_
  commentId: Overload:RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist
  nameWithType: TestPassiveDeclare.TestPassiveQueueDeclareWhenQueueDoesNotExist
- uid: RabbitMQ.Client.Unit.TestPropertiesClone
  name: TestPropertiesClone
  href: api/RabbitMQ.Client.Unit.TestPropertiesClone.html
  commentId: T:RabbitMQ.Client.Unit.TestPropertiesClone
  fullName: RabbitMQ.Client.Unit.TestPropertiesClone
  nameWithType: TestPropertiesClone
- uid: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesCloneV0_9_1
  name: TestBasicPropertiesCloneV0_9_1()
  href: api/RabbitMQ.Client.Unit.TestPropertiesClone.html#RabbitMQ_Client_Unit_TestPropertiesClone_TestBasicPropertiesCloneV0_9_1
  commentId: M:RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesCloneV0_9_1
  fullName: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesCloneV0_9_1()
  nameWithType: TestPropertiesClone.TestBasicPropertiesCloneV0_9_1()
- uid: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesCloneV0_9_1*
  name: TestBasicPropertiesCloneV0_9_1
  href: api/RabbitMQ.Client.Unit.TestPropertiesClone.html#RabbitMQ_Client_Unit_TestPropertiesClone_TestBasicPropertiesCloneV0_9_1_
  commentId: Overload:RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesCloneV0_9_1
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesCloneV0_9_1
  nameWithType: TestPropertiesClone.TestBasicPropertiesCloneV0_9_1
- uid: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1
  name: TestBasicPropertiesNoneCloneV0_9_1()
  href: api/RabbitMQ.Client.Unit.TestPropertiesClone.html#RabbitMQ_Client_Unit_TestPropertiesClone_TestBasicPropertiesNoneCloneV0_9_1
  commentId: M:RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1
  fullName: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1()
  nameWithType: TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1()
- uid: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1*
  name: TestBasicPropertiesNoneCloneV0_9_1
  href: api/RabbitMQ.Client.Unit.TestPropertiesClone.html#RabbitMQ_Client_Unit_TestPropertiesClone_TestBasicPropertiesNoneCloneV0_9_1_
  commentId: Overload:RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1
  nameWithType: TestPropertiesClone.TestBasicPropertiesNoneCloneV0_9_1
- uid: RabbitMQ.Client.Unit.TestPublicationAddress
  name: TestPublicationAddress
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html
  commentId: T:RabbitMQ.Client.Unit.TestPublicationAddress
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress
  nameWithType: TestPublicationAddress
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyExchangeName
  name: TestEmptyExchangeName()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestEmptyExchangeName
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyExchangeName
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyExchangeName()
  nameWithType: TestPublicationAddress.TestEmptyExchangeName()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyExchangeName*
  name: TestEmptyExchangeName
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestEmptyExchangeName_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyExchangeName
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyExchangeName
  nameWithType: TestPublicationAddress.TestEmptyExchangeName
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyRoutingKey
  name: TestEmptyRoutingKey()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestEmptyRoutingKey
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyRoutingKey
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyRoutingKey()
  nameWithType: TestPublicationAddress.TestEmptyRoutingKey()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyRoutingKey*
  name: TestEmptyRoutingKey
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestEmptyRoutingKey_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyRoutingKey
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestEmptyRoutingKey
  nameWithType: TestPublicationAddress.TestEmptyRoutingKey
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestExchangeTypeValidation
  name: TestExchangeTypeValidation()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestExchangeTypeValidation
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestExchangeTypeValidation
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestExchangeTypeValidation()
  nameWithType: TestPublicationAddress.TestExchangeTypeValidation()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestExchangeTypeValidation*
  name: TestExchangeTypeValidation
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestExchangeTypeValidation_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestExchangeTypeValidation
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestExchangeTypeValidation
  nameWithType: TestPublicationAddress.TestExchangeTypeValidation
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestMissingExchangeType
  name: TestMissingExchangeType()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestMissingExchangeType
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestMissingExchangeType
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestMissingExchangeType()
  nameWithType: TestPublicationAddress.TestMissingExchangeType()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestMissingExchangeType*
  name: TestMissingExchangeType
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestMissingExchangeType_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestMissingExchangeType
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestMissingExchangeType
  nameWithType: TestPublicationAddress.TestMissingExchangeType
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithANE
  name: TestParseFailWithANE()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestParseFailWithANE
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithANE
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithANE()
  nameWithType: TestPublicationAddress.TestParseFailWithANE()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithANE*
  name: TestParseFailWithANE
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestParseFailWithANE_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithANE
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithANE
  nameWithType: TestPublicationAddress.TestParseFailWithANE
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithUnparseableInput
  name: TestParseFailWithUnparseableInput()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestParseFailWithUnparseableInput
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithUnparseableInput
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithUnparseableInput()
  nameWithType: TestPublicationAddress.TestParseFailWithUnparseableInput()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithUnparseableInput*
  name: TestParseFailWithUnparseableInput
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestParseFailWithUnparseableInput_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithUnparseableInput
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseFailWithUnparseableInput
  nameWithType: TestPublicationAddress.TestParseFailWithUnparseableInput
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseOk
  name: TestParseOk()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestParseOk
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestParseOk
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseOk()
  nameWithType: TestPublicationAddress.TestParseOk()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseOk*
  name: TestParseOk
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestParseOk_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestParseOk
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestParseOk
  nameWithType: TestPublicationAddress.TestParseOk
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestTryParseFail
  name: TestTryParseFail()
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestTryParseFail
  commentId: M:RabbitMQ.Client.Unit.TestPublicationAddress.TestTryParseFail
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestTryParseFail()
  nameWithType: TestPublicationAddress.TestTryParseFail()
- uid: RabbitMQ.Client.Unit.TestPublicationAddress.TestTryParseFail*
  name: TestTryParseFail
  href: api/RabbitMQ.Client.Unit.TestPublicationAddress.html#RabbitMQ_Client_Unit_TestPublicationAddress_TestTryParseFail_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublicationAddress.TestTryParseFail
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublicationAddress.TestTryParseFail
  nameWithType: TestPublicationAddress.TestTryParseFail
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms
  name: TestPublisherConfirms
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html
  commentId: T:RabbitMQ.Client.Unit.TestPublisherConfirms
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms
  nameWithType: TestPublisherConfirms
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms(System.Int32,System.Action{RabbitMQ.Client.IModel})
  name: TestWaitForConfirms(Int32, Action<IModel>)
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirms_System_Int32_System_Action_RabbitMQ_Client_IModel__
  commentId: M:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms(System.Int32,System.Action{RabbitMQ.Client.IModel})
  name.vb: TestWaitForConfirms(Int32, Action(Of IModel))
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms(System.Int32, System.Action<RabbitMQ.Client.IModel>)
  fullName.vb: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms(System.Int32, System.Action(Of RabbitMQ.Client.IModel))
  nameWithType: TestPublisherConfirms.TestWaitForConfirms(Int32, Action<IModel>)
  nameWithType.vb: TestPublisherConfirms.TestWaitForConfirms(Int32, Action(Of IModel))
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms*
  name: TestWaitForConfirms
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirms_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirms
  nameWithType: TestPublisherConfirms.TestWaitForConfirms
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithEvents
  name: TestWaitForConfirmsWithEvents()
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithEvents
  commentId: M:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithEvents
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithEvents()
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithEvents()
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithEvents*
  name: TestWaitForConfirmsWithEvents
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithEvents_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithEvents
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithEvents
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithEvents
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout
  name: TestWaitForConfirmsWithoutTimeout()
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithoutTimeout
  commentId: M:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout()
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout()
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout*
  name: TestWaitForConfirmsWithoutTimeout
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithoutTimeout_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithoutTimeout
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout
  name: TestWaitForConfirmsWithTimeout()
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithTimeout
  commentId: M:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout()
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithTimeout()
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout*
  name: TestWaitForConfirmsWithTimeout
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithTimeout_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithTimeout
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
  name: TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue()
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
  commentId: M:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue()
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue()
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue*
  name: TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithTimeout_AllMessagesAcked_WaitingHasTimedout_ReturnTrue
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
  name: TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse()
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
  commentId: M:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse()
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse()
- uid: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse*
  name: TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
  href: api/RabbitMQ.Client.Unit.TestPublisherConfirms.html#RabbitMQ_Client_Unit_TestPublisherConfirms_TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
  nameWithType: TestPublisherConfirms.TestWaitForConfirmsWithTimeout_MessageNacked_WaitingHasTimedout_ReturnFalse
- uid: RabbitMQ.Client.Unit.TestPublishSharedModel
  name: TestPublishSharedModel
  href: api/RabbitMQ.Client.Unit.TestPublishSharedModel.html
  commentId: T:RabbitMQ.Client.Unit.TestPublishSharedModel
  fullName: RabbitMQ.Client.Unit.TestPublishSharedModel
  nameWithType: TestPublishSharedModel
- uid: RabbitMQ.Client.Unit.TestPublishSharedModel.MultiThreadPublishOnSharedModel
  name: MultiThreadPublishOnSharedModel()
  href: api/RabbitMQ.Client.Unit.TestPublishSharedModel.html#RabbitMQ_Client_Unit_TestPublishSharedModel_MultiThreadPublishOnSharedModel
  commentId: M:RabbitMQ.Client.Unit.TestPublishSharedModel.MultiThreadPublishOnSharedModel
  fullName: RabbitMQ.Client.Unit.TestPublishSharedModel.MultiThreadPublishOnSharedModel()
  nameWithType: TestPublishSharedModel.MultiThreadPublishOnSharedModel()
- uid: RabbitMQ.Client.Unit.TestPublishSharedModel.MultiThreadPublishOnSharedModel*
  name: MultiThreadPublishOnSharedModel
  href: api/RabbitMQ.Client.Unit.TestPublishSharedModel.html#RabbitMQ_Client_Unit_TestPublishSharedModel_MultiThreadPublishOnSharedModel_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublishSharedModel.MultiThreadPublishOnSharedModel
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublishSharedModel.MultiThreadPublishOnSharedModel
  nameWithType: TestPublishSharedModel.MultiThreadPublishOnSharedModel
- uid: RabbitMQ.Client.Unit.TestPublishValidation
  name: TestPublishValidation
  href: api/RabbitMQ.Client.Unit.TestPublishValidation.html
  commentId: T:RabbitMQ.Client.Unit.TestPublishValidation
  fullName: RabbitMQ.Client.Unit.TestPublishValidation
  nameWithType: TestPublishValidation
- uid: RabbitMQ.Client.Unit.TestPublishValidation.TestNullRoutingKeyIsRejected
  name: TestNullRoutingKeyIsRejected()
  href: api/RabbitMQ.Client.Unit.TestPublishValidation.html#RabbitMQ_Client_Unit_TestPublishValidation_TestNullRoutingKeyIsRejected
  commentId: M:RabbitMQ.Client.Unit.TestPublishValidation.TestNullRoutingKeyIsRejected
  fullName: RabbitMQ.Client.Unit.TestPublishValidation.TestNullRoutingKeyIsRejected()
  nameWithType: TestPublishValidation.TestNullRoutingKeyIsRejected()
- uid: RabbitMQ.Client.Unit.TestPublishValidation.TestNullRoutingKeyIsRejected*
  name: TestNullRoutingKeyIsRejected
  href: api/RabbitMQ.Client.Unit.TestPublishValidation.html#RabbitMQ_Client_Unit_TestPublishValidation_TestNullRoutingKeyIsRejected_
  commentId: Overload:RabbitMQ.Client.Unit.TestPublishValidation.TestNullRoutingKeyIsRejected
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestPublishValidation.TestNullRoutingKeyIsRejected
  nameWithType: TestPublishValidation.TestNullRoutingKeyIsRejected
- uid: RabbitMQ.Client.Unit.TestQueueDeclare
  name: TestQueueDeclare
  href: api/RabbitMQ.Client.Unit.TestQueueDeclare.html
  commentId: T:RabbitMQ.Client.Unit.TestQueueDeclare
  fullName: RabbitMQ.Client.Unit.TestQueueDeclare
  nameWithType: TestQueueDeclare
- uid: RabbitMQ.Client.Unit.TestQueueDeclare.TestConcurrentQueueDeclare
  name: TestConcurrentQueueDeclare()
  href: api/RabbitMQ.Client.Unit.TestQueueDeclare.html#RabbitMQ_Client_Unit_TestQueueDeclare_TestConcurrentQueueDeclare
  commentId: M:RabbitMQ.Client.Unit.TestQueueDeclare.TestConcurrentQueueDeclare
  fullName: RabbitMQ.Client.Unit.TestQueueDeclare.TestConcurrentQueueDeclare()
  nameWithType: TestQueueDeclare.TestConcurrentQueueDeclare()
- uid: RabbitMQ.Client.Unit.TestQueueDeclare.TestConcurrentQueueDeclare*
  name: TestConcurrentQueueDeclare
  href: api/RabbitMQ.Client.Unit.TestQueueDeclare.html#RabbitMQ_Client_Unit_TestQueueDeclare_TestConcurrentQueueDeclare_
  commentId: Overload:RabbitMQ.Client.Unit.TestQueueDeclare.TestConcurrentQueueDeclare
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestQueueDeclare.TestConcurrentQueueDeclare
  nameWithType: TestQueueDeclare.TestConcurrentQueueDeclare
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel
  name: TestRecoverAfterCancel
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html
  commentId: T:RabbitMQ.Client.Unit.TestRecoverAfterCancel
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel
  nameWithType: TestRecoverAfterCancel
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Connect
  name: Connect()
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_Connect
  commentId: M:RabbitMQ.Client.Unit.TestRecoverAfterCancel.Connect
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Connect()
  nameWithType: TestRecoverAfterCancel.Connect()
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Connect*
  name: Connect
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_Connect_
  commentId: Overload:RabbitMQ.Client.Unit.TestRecoverAfterCancel.Connect
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Connect
  nameWithType: TestRecoverAfterCancel.Connect
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Disconnect
  name: Disconnect()
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_Disconnect
  commentId: M:RabbitMQ.Client.Unit.TestRecoverAfterCancel.Disconnect
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Disconnect()
  nameWithType: TestRecoverAfterCancel.Disconnect()
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Disconnect*
  name: Disconnect
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_Disconnect_
  commentId: Overload:RabbitMQ.Client.Unit.TestRecoverAfterCancel.Disconnect
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.Disconnect
  nameWithType: TestRecoverAfterCancel.Disconnect
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.ModelNumber(RabbitMQ.Client.IModel)
  name: ModelNumber(IModel)
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_ModelNumber_RabbitMQ_Client_IModel_
  commentId: M:RabbitMQ.Client.Unit.TestRecoverAfterCancel.ModelNumber(RabbitMQ.Client.IModel)
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.ModelNumber(RabbitMQ.Client.IModel)
  nameWithType: TestRecoverAfterCancel.ModelNumber(IModel)
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.ModelNumber*
  name: ModelNumber
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_ModelNumber_
  commentId: Overload:RabbitMQ.Client.Unit.TestRecoverAfterCancel.ModelNumber
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.ModelNumber
  nameWithType: TestRecoverAfterCancel.ModelNumber
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverAfterCancel_
  name: TestRecoverAfterCancel_()
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_TestRecoverAfterCancel_
  commentId: M:RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverAfterCancel_
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverAfterCancel_()
  nameWithType: TestRecoverAfterCancel.TestRecoverAfterCancel_()
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverAfterCancel_*
  name: TestRecoverAfterCancel_
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_TestRecoverAfterCancel__
  commentId: Overload:RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverAfterCancel_
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverAfterCancel_
  nameWithType: TestRecoverAfterCancel.TestRecoverAfterCancel_
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverCallback
  name: TestRecoverCallback()
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_TestRecoverCallback
  commentId: M:RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverCallback
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverCallback()
  nameWithType: TestRecoverAfterCancel.TestRecoverCallback()
- uid: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverCallback*
  name: TestRecoverCallback
  href: api/RabbitMQ.Client.Unit.TestRecoverAfterCancel.html#RabbitMQ_Client_Unit_TestRecoverAfterCancel_TestRecoverCallback_
  commentId: Overload:RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverCallback
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRecoverAfterCancel.TestRecoverCallback
  nameWithType: TestRecoverAfterCancel.TestRecoverCallback
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue
  name: TestRpcContinuationQueue
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html
  commentId: T:RabbitMQ.Client.Unit.TestRpcContinuationQueue
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue
  nameWithType: TestRpcContinuationQueue
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2
  name: TestRpcContinuationQueueEnqueue2()
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html#RabbitMQ_Client_Unit_TestRpcContinuationQueue_TestRpcContinuationQueueEnqueue2
  commentId: M:RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2()
  nameWithType: TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2()
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2*
  name: TestRpcContinuationQueueEnqueue2
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html#RabbitMQ_Client_Unit_TestRpcContinuationQueue_TestRpcContinuationQueueEnqueue2_
  commentId: Overload:RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2
  nameWithType: TestRpcContinuationQueue.TestRpcContinuationQueueEnqueue2
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease
  name: TestRpcContinuationQueueEnqueueAndRelease()
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html#RabbitMQ_Client_Unit_TestRpcContinuationQueue_TestRpcContinuationQueueEnqueueAndRelease
  commentId: M:RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease()
  nameWithType: TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease()
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease*
  name: TestRpcContinuationQueueEnqueueAndRelease
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html#RabbitMQ_Client_Unit_TestRpcContinuationQueue_TestRpcContinuationQueueEnqueueAndRelease_
  commentId: Overload:RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease
  nameWithType: TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2
  name: TestRpcContinuationQueueEnqueueAndRelease2()
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html#RabbitMQ_Client_Unit_TestRpcContinuationQueue_TestRpcContinuationQueueEnqueueAndRelease2
  commentId: M:RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2()
  nameWithType: TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2()
- uid: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2*
  name: TestRpcContinuationQueueEnqueueAndRelease2
  href: api/RabbitMQ.Client.Unit.TestRpcContinuationQueue.html#RabbitMQ_Client_Unit_TestRpcContinuationQueue_TestRpcContinuationQueueEnqueueAndRelease2_
  commentId: Overload:RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2
  nameWithType: TestRpcContinuationQueue.TestRpcContinuationQueueEnqueueAndRelease2
- uid: RabbitMQ.Client.Unit.TestSsl
  name: TestSsl
  href: api/RabbitMQ.Client.Unit.TestSsl.html
  commentId: T:RabbitMQ.Client.Unit.TestSsl
  fullName: RabbitMQ.Client.Unit.TestSsl
  nameWithType: TestSsl
- uid: RabbitMQ.Client.Unit.TestSsl.SendReceive(RabbitMQ.Client.ConnectionFactory)
  name: SendReceive(ConnectionFactory)
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_SendReceive_RabbitMQ_Client_ConnectionFactory_
  commentId: M:RabbitMQ.Client.Unit.TestSsl.SendReceive(RabbitMQ.Client.ConnectionFactory)
  fullName: RabbitMQ.Client.Unit.TestSsl.SendReceive(RabbitMQ.Client.ConnectionFactory)
  nameWithType: TestSsl.SendReceive(ConnectionFactory)
- uid: RabbitMQ.Client.Unit.TestSsl.SendReceive*
  name: SendReceive
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_SendReceive_
  commentId: Overload:RabbitMQ.Client.Unit.TestSsl.SendReceive
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestSsl.SendReceive
  nameWithType: TestSsl.SendReceive
- uid: RabbitMQ.Client.Unit.TestSsl.TestClientAndServerVerified
  name: TestClientAndServerVerified()
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestClientAndServerVerified
  commentId: M:RabbitMQ.Client.Unit.TestSsl.TestClientAndServerVerified
  fullName: RabbitMQ.Client.Unit.TestSsl.TestClientAndServerVerified()
  nameWithType: TestSsl.TestClientAndServerVerified()
- uid: RabbitMQ.Client.Unit.TestSsl.TestClientAndServerVerified*
  name: TestClientAndServerVerified
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestClientAndServerVerified_
  commentId: Overload:RabbitMQ.Client.Unit.TestSsl.TestClientAndServerVerified
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestSsl.TestClientAndServerVerified
  nameWithType: TestSsl.TestClientAndServerVerified
- uid: RabbitMQ.Client.Unit.TestSsl.TestNoClientCertificate
  name: TestNoClientCertificate()
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestNoClientCertificate
  commentId: M:RabbitMQ.Client.Unit.TestSsl.TestNoClientCertificate
  fullName: RabbitMQ.Client.Unit.TestSsl.TestNoClientCertificate()
  nameWithType: TestSsl.TestNoClientCertificate()
- uid: RabbitMQ.Client.Unit.TestSsl.TestNoClientCertificate*
  name: TestNoClientCertificate
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestNoClientCertificate_
  commentId: Overload:RabbitMQ.Client.Unit.TestSsl.TestNoClientCertificate
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestSsl.TestNoClientCertificate
  nameWithType: TestSsl.TestNoClientCertificate
- uid: RabbitMQ.Client.Unit.TestSsl.TestServerVerified
  name: TestServerVerified()
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestServerVerified
  commentId: M:RabbitMQ.Client.Unit.TestSsl.TestServerVerified
  fullName: RabbitMQ.Client.Unit.TestSsl.TestServerVerified()
  nameWithType: TestSsl.TestServerVerified()
- uid: RabbitMQ.Client.Unit.TestSsl.TestServerVerified*
  name: TestServerVerified
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestServerVerified_
  commentId: Overload:RabbitMQ.Client.Unit.TestSsl.TestServerVerified
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestSsl.TestServerVerified
  nameWithType: TestSsl.TestServerVerified
- uid: RabbitMQ.Client.Unit.TestSsl.TestServerVerifiedIgnoringNameMismatch
  name: TestServerVerifiedIgnoringNameMismatch()
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestServerVerifiedIgnoringNameMismatch
  commentId: M:RabbitMQ.Client.Unit.TestSsl.TestServerVerifiedIgnoringNameMismatch
  fullName: RabbitMQ.Client.Unit.TestSsl.TestServerVerifiedIgnoringNameMismatch()
  nameWithType: TestSsl.TestServerVerifiedIgnoringNameMismatch()
- uid: RabbitMQ.Client.Unit.TestSsl.TestServerVerifiedIgnoringNameMismatch*
  name: TestServerVerifiedIgnoringNameMismatch
  href: api/RabbitMQ.Client.Unit.TestSsl.html#RabbitMQ_Client_Unit_TestSsl_TestServerVerifiedIgnoringNameMismatch_
  commentId: Overload:RabbitMQ.Client.Unit.TestSsl.TestServerVerifiedIgnoringNameMismatch
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestSsl.TestServerVerifiedIgnoringNameMismatch
  nameWithType: TestSsl.TestServerVerifiedIgnoringNameMismatch
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter
  name: TestTcpClientAdapter
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html
  commentId: T:RabbitMQ.Client.Unit.TestTcpClientAdapter
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter
  nameWithType: TestTcpClientAdapter
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
  name: TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch()
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html#RabbitMQ_Client_Unit_TestTcpClientAdapter_TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
  commentId: M:RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch()
  nameWithType: TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch()
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch*
  name: TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html#RabbitMQ_Client_Unit_TestTcpClientAdapter_TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch_
  commentId: Overload:RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
  nameWithType: TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyDoesNotMatch
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
  name: TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch()
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html#RabbitMQ_Client_Unit_TestTcpClientAdapter_TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
  commentId: M:RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch()
  nameWithType: TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch()
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch*
  name: TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html#RabbitMQ_Client_Unit_TestTcpClientAdapter_TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch_
  commentId: Overload:RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
  nameWithType: TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnNoAddressIfFamilyIsUnspecifiedAndThereIsNoSingleMatch
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
  name: TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified()
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html#RabbitMQ_Client_Unit_TestTcpClientAdapter_TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
  commentId: M:RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified()
  nameWithType: TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified()
- uid: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified*
  name: TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
  href: api/RabbitMQ.Client.Unit.TestTcpClientAdapter.html#RabbitMQ_Client_Unit_TestTcpClientAdapter_TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified_
  commentId: Overload:RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
  nameWithType: TestTcpClientAdapter.TcpClientAdapterHelperGetMatchingHostReturnsSingleAddressIfFamilyIsUnspecified
- uid: RabbitMQ.Client.Unit.TestUpdateSecret
  name: TestUpdateSecret
  href: api/RabbitMQ.Client.Unit.TestUpdateSecret.html
  commentId: T:RabbitMQ.Client.Unit.TestUpdateSecret
  fullName: RabbitMQ.Client.Unit.TestUpdateSecret
  nameWithType: TestUpdateSecret
- uid: RabbitMQ.Client.Unit.TestUpdateSecret.TestUpdatingConnectionSecret
  name: TestUpdatingConnectionSecret()
  href: api/RabbitMQ.Client.Unit.TestUpdateSecret.html#RabbitMQ_Client_Unit_TestUpdateSecret_TestUpdatingConnectionSecret
  commentId: M:RabbitMQ.Client.Unit.TestUpdateSecret.TestUpdatingConnectionSecret
  fullName: RabbitMQ.Client.Unit.TestUpdateSecret.TestUpdatingConnectionSecret()
  nameWithType: TestUpdateSecret.TestUpdatingConnectionSecret()
- uid: RabbitMQ.Client.Unit.TestUpdateSecret.TestUpdatingConnectionSecret*
  name: TestUpdatingConnectionSecret
  href: api/RabbitMQ.Client.Unit.TestUpdateSecret.html#RabbitMQ_Client_Unit_TestUpdateSecret_TestUpdatingConnectionSecret_
  commentId: Overload:RabbitMQ.Client.Unit.TestUpdateSecret.TestUpdatingConnectionSecret
  isSpec: "True"
  fullName: RabbitMQ.Client.Unit.TestUpdateSecret.TestUpdatingConnectionSecret
  nameWithType: TestUpdateSecret.TestUpdatingConnectionSecret
- uid: RabbitMQ.Client.Unit.TimingFixture
  name: TimingFixture
  href: api/RabbitMQ.Client.Unit.TimingFixture.html
  commentId: T:RabbitMQ.Client.Unit.TimingFixture
  fullName: RabbitMQ.Client.Unit.TimingFixture
  nameWithType: TimingFixture
- uid: RabbitMQ.Client.Unit.TimingFixture.SafetyMargin
  name: SafetyMargin
  href: api/RabbitMQ.Client.Unit.TimingFixture.html#RabbitMQ_Client_Unit_TimingFixture_SafetyMargin
  commentId: F:RabbitMQ.Client.Unit.TimingFixture.SafetyMargin
  fullName: RabbitMQ.Client.Unit.TimingFixture.SafetyMargin
  nameWithType: TimingFixture.SafetyMargin
- uid: RabbitMQ.Client.Unit.TimingFixture.TestTimeout
  name: TestTimeout
  href: api/RabbitMQ.Client.Unit.TimingFixture.html#RabbitMQ_Client_Unit_TimingFixture_TestTimeout
  commentId: F:RabbitMQ.Client.Unit.TimingFixture.TestTimeout
  fullName: RabbitMQ.Client.Unit.TimingFixture.TestTimeout
  nameWithType: TimingFixture.TestTimeout
- uid: RabbitMQ.Client.Unit.TimingFixture.TimingInterval
  name: TimingInterval
  href: api/RabbitMQ.Client.Unit.TimingFixture.html#RabbitMQ_Client_Unit_TimingFixture_TimingInterval
  commentId: F:RabbitMQ.Client.Unit.TimingFixture.TimingInterval
  fullName: RabbitMQ.Client.Unit.TimingFixture.TimingInterval
  nameWithType: TimingFixture.TimingInterval
- uid: RabbitMQ.Client.Unit.TimingFixture.TimingInterval_2X
  name: TimingInterval_2X
  href: api/RabbitMQ.Client.Unit.TimingFixture.html#RabbitMQ_Client_Unit_TimingFixture_TimingInterval_2X
  commentId: F:RabbitMQ.Client.Unit.TimingFixture.TimingInterval_2X
  fullName: RabbitMQ.Client.Unit.TimingFixture.TimingInterval_2X
  nameWithType: TimingFixture.TimingInterval_2X
